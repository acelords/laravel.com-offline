
window.projectVersion = '4.2';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">[Global Namespace]</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:IlluminateQueueClosure" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="IlluminateQueueClosure.html">IlluminateQueueClosure</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate.html">Illuminate</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Auth" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Auth.html">Auth</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Auth_Console" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Auth/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Auth_Console_ClearRemindersCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Console/ClearRemindersCommand.html">ClearRemindersCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_Console_RemindersControllerCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Console/RemindersControllerCommand.html">RemindersControllerCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_Console_RemindersTableCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Console/RemindersTableCommand.html">RemindersTableCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Auth_Reminders" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Auth/Reminders.html">Reminders</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Auth_Reminders_DatabaseReminderRepository" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Reminders/DatabaseReminderRepository.html">DatabaseReminderRepository</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_Reminders_PasswordBroker" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Reminders/PasswordBroker.html">PasswordBroker</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_Reminders_RemindableInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Reminders/RemindableInterface.html">RemindableInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_Reminders_RemindableTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Reminders/RemindableTrait.html">RemindableTrait</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_Reminders_ReminderRepositoryInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Reminders/ReminderRepositoryInterface.html">ReminderRepositoryInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_Reminders_ReminderServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Auth/Reminders/ReminderServiceProvider.html">ReminderServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Auth_AuthManager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/AuthManager.html">AuthManager</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_AuthServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/AuthServiceProvider.html">AuthServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_DatabaseUserProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/DatabaseUserProvider.html">DatabaseUserProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_EloquentUserProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/EloquentUserProvider.html">EloquentUserProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_GenericUser" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/GenericUser.html">GenericUser</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_Guard" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/Guard.html">Guard</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_UserInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/UserInterface.html">UserInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_UserProviderInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/UserProviderInterface.html">UserProviderInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Auth_UserTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Auth/UserTrait.html">UserTrait</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Cache" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Cache.html">Cache</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Cache_Console" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Cache/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Cache_Console_CacheTableCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Cache/Console/CacheTableCommand.html">CacheTableCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_Console_ClearCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Cache/Console/ClearCommand.html">ClearCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Cache_ApcStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/ApcStore.html">ApcStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_ApcWrapper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/ApcWrapper.html">ApcWrapper</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_ArrayStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/ArrayStore.html">ArrayStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_CacheManager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/CacheManager.html">CacheManager</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_CacheServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/CacheServiceProvider.html">CacheServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_DatabaseStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/DatabaseStore.html">DatabaseStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_FileStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/FileStore.html">FileStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_MemcachedConnector" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/MemcachedConnector.html">MemcachedConnector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_MemcachedStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/MemcachedStore.html">MemcachedStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_NullStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/NullStore.html">NullStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_RedisStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/RedisStore.html">RedisStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_RedisTaggedCache" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/RedisTaggedCache.html">RedisTaggedCache</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_Repository" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/Repository.html">Repository</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_StoreInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/StoreInterface.html">StoreInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_TagSet" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/TagSet.html">TagSet</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_TaggableStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/TaggableStore.html">TaggableStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_TaggedCache" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/TaggedCache.html">TaggedCache</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_WinCacheStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/WinCacheStore.html">WinCacheStore</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cache_XCacheStore" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cache/XCacheStore.html">XCacheStore</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Config" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Config.html">Config</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Config_EnvironmentVariables" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Config/EnvironmentVariables.html">EnvironmentVariables</a>                    </div>                </li>                            <li data-name="class:Illuminate_Config_EnvironmentVariablesLoaderInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Config/EnvironmentVariablesLoaderInterface.html">EnvironmentVariablesLoaderInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Config_FileEnvironmentVariablesLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Config/FileEnvironmentVariablesLoader.html">FileEnvironmentVariablesLoader</a>                    </div>                </li>                            <li data-name="class:Illuminate_Config_FileLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Config/FileLoader.html">FileLoader</a>                    </div>                </li>                            <li data-name="class:Illuminate_Config_LoaderInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Config/LoaderInterface.html">LoaderInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Config_Repository" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Config/Repository.html">Repository</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Console" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Console_Application" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Console/Application.html">Application</a>                    </div>                </li>                            <li data-name="class:Illuminate_Console_Command" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Console/Command.html">Command</a>                    </div>                </li>                            <li data-name="class:Illuminate_Console_ConfirmableTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Console/ConfirmableTrait.html">ConfirmableTrait</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Container" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Container.html">Container</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Container_BindingResolutionException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Container/BindingResolutionException.html">BindingResolutionException</a>                    </div>                </li>                            <li data-name="class:Illuminate_Container_Container" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Container/Container.html">Container</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Cookie" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Cookie.html">Cookie</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Cookie_CookieJar" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cookie/CookieJar.html">CookieJar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cookie_CookieServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cookie/CookieServiceProvider.html">CookieServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cookie_Guard" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cookie/Guard.html">Guard</a>                    </div>                </li>                            <li data-name="class:Illuminate_Cookie_Queue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Cookie/Queue.html">Queue</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Database" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database.html">Database</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Database_Capsule" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Capsule.html">Capsule</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Database_Capsule_Manager" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Capsule/Manager.html">Manager</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Database_Connectors" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Connectors.html">Connectors</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Database_Connectors_ConnectionFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Connectors/ConnectionFactory.html">ConnectionFactory</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Connectors_Connector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Connectors/Connector.html">Connector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Connectors_ConnectorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Connectors/ConnectorInterface.html">ConnectorInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Connectors_MySqlConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Connectors/MySqlConnector.html">MySqlConnector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Connectors_PostgresConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Connectors/PostgresConnector.html">PostgresConnector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Connectors_SQLiteConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Connectors/SQLiteConnector.html">SQLiteConnector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Connectors_SqlServerConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Connectors/SqlServerConnector.html">SqlServerConnector</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Database_Console" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Database_Console_Migrations" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Console/Migrations.html">Migrations</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Database_Console_Migrations_BaseCommand" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Console/Migrations/BaseCommand.html">BaseCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Console_Migrations_InstallCommand" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Console/Migrations/InstallCommand.html">InstallCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Console_Migrations_MigrateCommand" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Console/Migrations/MigrateCommand.html">MigrateCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Console_Migrations_MigrateMakeCommand" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Console/Migrations/MigrateMakeCommand.html">MigrateMakeCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Console_Migrations_RefreshCommand" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Console/Migrations/RefreshCommand.html">RefreshCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Console_Migrations_ResetCommand" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Console/Migrations/ResetCommand.html">ResetCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Console_Migrations_RollbackCommand" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Console/Migrations/RollbackCommand.html">RollbackCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Database_Console_SeedCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Console/SeedCommand.html">SeedCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Database_Eloquent" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Eloquent.html">Eloquent</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Database_Eloquent_Relations" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Eloquent/Relations.html">Relations</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Database_Eloquent_Relations_BelongsTo" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/BelongsTo.html">BelongsTo</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_BelongsToMany" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/BelongsToMany.html">BelongsToMany</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_HasMany" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/HasMany.html">HasMany</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_HasManyThrough" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/HasManyThrough.html">HasManyThrough</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_HasOne" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/HasOne.html">HasOne</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_HasOneOrMany" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/HasOneOrMany.html">HasOneOrMany</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_MorphMany" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/MorphMany.html">MorphMany</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_MorphOne" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/MorphOne.html">MorphOne</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_MorphOneOrMany" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html">MorphOneOrMany</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_MorphPivot" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/MorphPivot.html">MorphPivot</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_MorphTo" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/MorphTo.html">MorphTo</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_MorphToMany" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/MorphToMany.html">MorphToMany</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_Pivot" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/Pivot.html">Pivot</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Relations_Relation" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Relations/Relation.html">Relation</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Builder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Builder.html">Builder</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Collection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Collection.html">Collection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_MassAssignmentException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/MassAssignmentException.html">MassAssignmentException</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_Model" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/Model.html">Model</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_ModelNotFoundException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/ModelNotFoundException.html">ModelNotFoundException</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_ScopeInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/ScopeInterface.html">ScopeInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_SoftDeletingScope" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/SoftDeletingScope.html">SoftDeletingScope</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Eloquent_SoftDeletingTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Eloquent/SoftDeletingTrait.html">SoftDeletingTrait</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Database_Migrations" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Migrations.html">Migrations</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Database_Migrations_DatabaseMigrationRepository" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Migrations/DatabaseMigrationRepository.html">DatabaseMigrationRepository</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Migrations_Migration" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Migrations/Migration.html">Migration</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Migrations_MigrationCreator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Migrations/MigrationCreator.html">MigrationCreator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Migrations_MigrationRepositoryInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Migrations/MigrationRepositoryInterface.html">MigrationRepositoryInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Migrations_Migrator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Migrations/Migrator.html">Migrator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Database_Query" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Query.html">Query</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Database_Query_Grammars" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Query/Grammars.html">Grammars</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Database_Query_Grammars_Grammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Grammars/Grammar.html">Grammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Grammars_MySqlGrammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Grammars/MySqlGrammar.html">MySqlGrammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Grammars_PostgresGrammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Grammars/PostgresGrammar.html">PostgresGrammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Grammars_SQLiteGrammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Grammars/SQLiteGrammar.html">SQLiteGrammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Grammars_SqlServerGrammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Grammars/SqlServerGrammar.html">SqlServerGrammar</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Database_Query_Processors" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Query/Processors.html">Processors</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Database_Query_Processors_MySqlProcessor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Processors/MySqlProcessor.html">MySqlProcessor</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Processors_PostgresProcessor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Processors/PostgresProcessor.html">PostgresProcessor</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Processors_Processor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Processors/Processor.html">Processor</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Processors_SQLiteProcessor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Processors/SQLiteProcessor.html">SQLiteProcessor</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Processors_SqlServerProcessor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Query/Processors/SqlServerProcessor.html">SqlServerProcessor</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Database_Query_Builder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Query/Builder.html">Builder</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_Expression" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Query/Expression.html">Expression</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Query_JoinClause" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Query/JoinClause.html">JoinClause</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Database_Schema" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Schema.html">Schema</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Database_Schema_Grammars" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Database/Schema/Grammars.html">Grammars</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Database_Schema_Grammars_Grammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Schema/Grammars/Grammar.html">Grammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Schema_Grammars_MySqlGrammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Schema/Grammars/MySqlGrammar.html">MySqlGrammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Schema_Grammars_PostgresGrammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Schema/Grammars/PostgresGrammar.html">PostgresGrammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Schema_Grammars_SQLiteGrammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Schema/Grammars/SQLiteGrammar.html">SQLiteGrammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Schema_Grammars_SqlServerGrammar" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Illuminate/Database/Schema/Grammars/SqlServerGrammar.html">SqlServerGrammar</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Database_Schema_Blueprint" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Schema/Blueprint.html">Blueprint</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Schema_Builder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Schema/Builder.html">Builder</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Schema_MySqlBuilder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Database/Schema/MySqlBuilder.html">MySqlBuilder</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Database_Connection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/Connection.html">Connection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_ConnectionInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/ConnectionInterface.html">ConnectionInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_ConnectionResolver" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/ConnectionResolver.html">ConnectionResolver</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_ConnectionResolverInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/ConnectionResolverInterface.html">ConnectionResolverInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_DatabaseManager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/DatabaseManager.html">DatabaseManager</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_DatabaseServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/DatabaseServiceProvider.html">DatabaseServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Grammar" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/Grammar.html">Grammar</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_MigrationServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/MigrationServiceProvider.html">MigrationServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_MySqlConnection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/MySqlConnection.html">MySqlConnection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_PostgresConnection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/PostgresConnection.html">PostgresConnection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_QueryException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/QueryException.html">QueryException</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_SQLiteConnection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/SQLiteConnection.html">SQLiteConnection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_SeedServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/SeedServiceProvider.html">SeedServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_Seeder" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/Seeder.html">Seeder</a>                    </div>                </li>                            <li data-name="class:Illuminate_Database_SqlServerConnection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Database/SqlServerConnection.html">SqlServerConnection</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Encryption" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Encryption.html">Encryption</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Encryption_DecryptException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Encryption/DecryptException.html">DecryptException</a>                    </div>                </li>                            <li data-name="class:Illuminate_Encryption_Encrypter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Encryption/Encrypter.html">Encrypter</a>                    </div>                </li>                            <li data-name="class:Illuminate_Encryption_EncryptionServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Encryption/EncryptionServiceProvider.html">EncryptionServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Encryption_InvalidKeyException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Encryption/InvalidKeyException.html">InvalidKeyException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Events" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Events.html">Events</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Events_Dispatcher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Events/Dispatcher.html">Dispatcher</a>                    </div>                </li>                            <li data-name="class:Illuminate_Events_EventServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Events/EventServiceProvider.html">EventServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Exception" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Exception_ExceptionDisplayerInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Exception/ExceptionDisplayerInterface.html">ExceptionDisplayerInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Exception_ExceptionServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Exception/ExceptionServiceProvider.html">ExceptionServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Exception_Handler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Exception/Handler.html">Handler</a>                    </div>                </li>                            <li data-name="class:Illuminate_Exception_PlainDisplayer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Exception/PlainDisplayer.html">PlainDisplayer</a>                    </div>                </li>                            <li data-name="class:Illuminate_Exception_SymfonyDisplayer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Exception/SymfonyDisplayer.html">SymfonyDisplayer</a>                    </div>                </li>                            <li data-name="class:Illuminate_Exception_WhoopsDisplayer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Exception/WhoopsDisplayer.html">WhoopsDisplayer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Filesystem" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Filesystem.html">Filesystem</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Filesystem_FileNotFoundException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Filesystem/FileNotFoundException.html">FileNotFoundException</a>                    </div>                </li>                            <li data-name="class:Illuminate_Filesystem_Filesystem" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Filesystem/Filesystem.html">Filesystem</a>                    </div>                </li>                            <li data-name="class:Illuminate_Filesystem_FilesystemServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Filesystem/FilesystemServiceProvider.html">FilesystemServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Foundation" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Foundation.html">Foundation</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Foundation_Console" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Foundation/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Foundation_Console_AssetPublishCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/AssetPublishCommand.html">AssetPublishCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_AutoloadCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/AutoloadCommand.html">AutoloadCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_ChangesCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/ChangesCommand.html">ChangesCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_ClearCompiledCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/ClearCompiledCommand.html">ClearCompiledCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_CommandMakeCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/CommandMakeCommand.html">CommandMakeCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_ConfigPublishCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/ConfigPublishCommand.html">ConfigPublishCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_DownCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/DownCommand.html">DownCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_EnvironmentCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/EnvironmentCommand.html">EnvironmentCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_KeyGenerateCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/KeyGenerateCommand.html">KeyGenerateCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_MigratePublishCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/MigratePublishCommand.html">MigratePublishCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_OptimizeCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/OptimizeCommand.html">OptimizeCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_RoutesCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/RoutesCommand.html">RoutesCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_ServeCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/ServeCommand.html">ServeCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_TailCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/TailCommand.html">TailCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_TinkerCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/TinkerCommand.html">TinkerCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_UpCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/UpCommand.html">UpCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Console_ViewPublishCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Console/ViewPublishCommand.html">ViewPublishCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Foundation_Providers" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Foundation/Providers.html">Providers</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Foundation_Providers_ArtisanServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/ArtisanServiceProvider.html">ArtisanServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_CommandCreatorServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/CommandCreatorServiceProvider.html">CommandCreatorServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_ComposerServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/ComposerServiceProvider.html">ComposerServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_ConsoleSupportServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/ConsoleSupportServiceProvider.html">ConsoleSupportServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_KeyGeneratorServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/KeyGeneratorServiceProvider.html">KeyGeneratorServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_MaintenanceServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/MaintenanceServiceProvider.html">MaintenanceServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_OptimizeServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/OptimizeServiceProvider.html">OptimizeServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_PublisherServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/PublisherServiceProvider.html">PublisherServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_RouteListServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/RouteListServiceProvider.html">RouteListServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_ServerServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/ServerServiceProvider.html">ServerServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Providers_TinkerServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Providers/TinkerServiceProvider.html">TinkerServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Foundation_Testing" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Foundation/Testing.html">Testing</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Foundation_Testing_ApplicationTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Testing/ApplicationTrait.html">ApplicationTrait</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Testing_AssertionsTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Testing/AssertionsTrait.html">AssertionsTrait</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Testing_Client" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Testing/Client.html">Client</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Testing_TestCase" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Foundation/Testing/TestCase.html">TestCase</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Foundation_AliasLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/AliasLoader.html">AliasLoader</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Application" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/Application.html">Application</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Artisan" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/Artisan.html">Artisan</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_AssetPublisher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/AssetPublisher.html">AssetPublisher</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_Composer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/Composer.html">Composer</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_ConfigPublisher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/ConfigPublisher.html">ConfigPublisher</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_EnvironmentDetector" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/EnvironmentDetector.html">EnvironmentDetector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_MigrationPublisher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/MigrationPublisher.html">MigrationPublisher</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_ProviderRepository" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/ProviderRepository.html">ProviderRepository</a>                    </div>                </li>                            <li data-name="class:Illuminate_Foundation_ViewPublisher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Foundation/ViewPublisher.html">ViewPublisher</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Hashing" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Hashing.html">Hashing</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Hashing_BcryptHasher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Hashing/BcryptHasher.html">BcryptHasher</a>                    </div>                </li>                            <li data-name="class:Illuminate_Hashing_HashServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Hashing/HashServiceProvider.html">HashServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Hashing_HasherInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Hashing/HasherInterface.html">HasherInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Html" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Html.html">Html</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Html_FormBuilder" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Html/FormBuilder.html">FormBuilder</a>                    </div>                </li>                            <li data-name="class:Illuminate_Html_HtmlBuilder" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Html/HtmlBuilder.html">HtmlBuilder</a>                    </div>                </li>                            <li data-name="class:Illuminate_Html_HtmlServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Html/HtmlServiceProvider.html">HtmlServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Http" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Http.html">Http</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Http_FrameGuard" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Http/FrameGuard.html">FrameGuard</a>                    </div>                </li>                            <li data-name="class:Illuminate_Http_JsonResponse" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Http/JsonResponse.html">JsonResponse</a>                    </div>                </li>                            <li data-name="class:Illuminate_Http_RedirectResponse" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Http/RedirectResponse.html">RedirectResponse</a>                    </div>                </li>                            <li data-name="class:Illuminate_Http_Request" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Http/Request.html">Request</a>                    </div>                </li>                            <li data-name="class:Illuminate_Http_Response" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Http/Response.html">Response</a>                    </div>                </li>                            <li data-name="class:Illuminate_Http_ResponseTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Http/ResponseTrait.html">ResponseTrait</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Log" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Log.html">Log</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Log_LogServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Log/LogServiceProvider.html">LogServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Log_Writer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Log/Writer.html">Writer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Mail" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Mail.html">Mail</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Mail_Transport" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Mail/Transport.html">Transport</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Mail_Transport_LogTransport" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Mail/Transport/LogTransport.html">LogTransport</a>                    </div>                </li>                            <li data-name="class:Illuminate_Mail_Transport_MailgunTransport" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Mail/Transport/MailgunTransport.html">MailgunTransport</a>                    </div>                </li>                            <li data-name="class:Illuminate_Mail_Transport_MandrillTransport" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Mail/Transport/MandrillTransport.html">MandrillTransport</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Mail_MailServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Mail/MailServiceProvider.html">MailServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Mail_Mailer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Mail/Mailer.html">Mailer</a>                    </div>                </li>                            <li data-name="class:Illuminate_Mail_Message" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Mail/Message.html">Message</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Pagination" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Pagination.html">Pagination</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Pagination_BootstrapPresenter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Pagination/BootstrapPresenter.html">BootstrapPresenter</a>                    </div>                </li>                            <li data-name="class:Illuminate_Pagination_Factory" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Pagination/Factory.html">Factory</a>                    </div>                </li>                            <li data-name="class:Illuminate_Pagination_PaginationServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Pagination/PaginationServiceProvider.html">PaginationServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Pagination_Paginator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Pagination/Paginator.html">Paginator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Pagination_Presenter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Pagination/Presenter.html">Presenter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Queue" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Queue.html">Queue</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Queue_Capsule" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Queue/Capsule.html">Capsule</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Queue_Capsule_Manager" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Capsule/Manager.html">Manager</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Queue_Connectors" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Queue/Connectors.html">Connectors</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Queue_Connectors_BeanstalkdConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Connectors/BeanstalkdConnector.html">BeanstalkdConnector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Connectors_ConnectorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Connectors/ConnectorInterface.html">ConnectorInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Connectors_IronConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Connectors/IronConnector.html">IronConnector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Connectors_RedisConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Connectors/RedisConnector.html">RedisConnector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Connectors_SqsConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Connectors/SqsConnector.html">SqsConnector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Connectors_SyncConnector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Connectors/SyncConnector.html">SyncConnector</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Queue_Console" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Queue/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Queue_Console_FailedTableCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/FailedTableCommand.html">FailedTableCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Console_FlushFailedCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/FlushFailedCommand.html">FlushFailedCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Console_ForgetFailedCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/ForgetFailedCommand.html">ForgetFailedCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Console_ListFailedCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/ListFailedCommand.html">ListFailedCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Console_ListenCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/ListenCommand.html">ListenCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Console_RestartCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/RestartCommand.html">RestartCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Console_RetryCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/RetryCommand.html">RetryCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Console_SubscribeCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/SubscribeCommand.html">SubscribeCommand</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Console_WorkCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Console/WorkCommand.html">WorkCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Queue_Failed" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Queue/Failed.html">Failed</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Queue_Failed_DatabaseFailedJobProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Failed/DatabaseFailedJobProvider.html">DatabaseFailedJobProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Failed_FailedJobProviderInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Failed/FailedJobProviderInterface.html">FailedJobProviderInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Queue_Jobs" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Queue/Jobs.html">Jobs</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Queue_Jobs_BeanstalkdJob" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Jobs/BeanstalkdJob.html">BeanstalkdJob</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Jobs_IronJob" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Jobs/IronJob.html">IronJob</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Jobs_Job" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Jobs/Job.html">Job</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Jobs_RedisJob" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Jobs/RedisJob.html">RedisJob</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Jobs_SqsJob" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Jobs/SqsJob.html">SqsJob</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Jobs_SyncJob" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Queue/Jobs/SyncJob.html">SyncJob</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Queue_BeanstalkdQueue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/BeanstalkdQueue.html">BeanstalkdQueue</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_FailConsoleServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/FailConsoleServiceProvider.html">FailConsoleServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_IronQueue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/IronQueue.html">IronQueue</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Listener" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/Listener.html">Listener</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Queue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/Queue.html">Queue</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_QueueInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/QueueInterface.html">QueueInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_QueueManager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/QueueManager.html">QueueManager</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_QueueServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/QueueServiceProvider.html">QueueServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_RedisQueue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/RedisQueue.html">RedisQueue</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_SqsQueue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/SqsQueue.html">SqsQueue</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_SyncQueue" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/SyncQueue.html">SyncQueue</a>                    </div>                </li>                            <li data-name="class:Illuminate_Queue_Worker" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Queue/Worker.html">Worker</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Redis" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Redis.html">Redis</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Redis_Database" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Redis/Database.html">Database</a>                    </div>                </li>                            <li data-name="class:Illuminate_Redis_RedisServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Redis/RedisServiceProvider.html">RedisServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Remote" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Remote.html">Remote</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Remote_Connection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Remote/Connection.html">Connection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Remote_ConnectionInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Remote/ConnectionInterface.html">ConnectionInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Remote_GatewayInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Remote/GatewayInterface.html">GatewayInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Remote_MultiConnection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Remote/MultiConnection.html">MultiConnection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Remote_RemoteManager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Remote/RemoteManager.html">RemoteManager</a>                    </div>                </li>                            <li data-name="class:Illuminate_Remote_RemoteServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Remote/RemoteServiceProvider.html">RemoteServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Remote_SecLibGateway" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Remote/SecLibGateway.html">SecLibGateway</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Routing" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Routing.html">Routing</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Routing_Console" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Routing/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Routing_Console_MakeControllerCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Routing/Console/MakeControllerCommand.html">MakeControllerCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Routing_Generators" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Routing/Generators.html">Generators</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Routing_Generators_ControllerGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Routing/Generators/ControllerGenerator.html">ControllerGenerator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Routing_Matching" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Routing/Matching.html">Matching</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Routing_Matching_HostValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Routing/Matching/HostValidator.html">HostValidator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_Matching_MethodValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Routing/Matching/MethodValidator.html">MethodValidator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_Matching_SchemeValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Routing/Matching/SchemeValidator.html">SchemeValidator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_Matching_UriValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Routing/Matching/UriValidator.html">UriValidator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_Matching_ValidatorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Routing/Matching/ValidatorInterface.html">ValidatorInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Routing_Controller" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/Controller.html">Controller</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_ControllerDispatcher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/ControllerDispatcher.html">ControllerDispatcher</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_ControllerInspector" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/ControllerInspector.html">ControllerInspector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_ControllerServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/ControllerServiceProvider.html">ControllerServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_Redirector" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/Redirector.html">Redirector</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_Route" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/Route.html">Route</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_RouteCollection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/RouteCollection.html">RouteCollection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_RouteFiltererInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/RouteFiltererInterface.html">RouteFiltererInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_Router" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/Router.html">Router</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_RoutingServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/RoutingServiceProvider.html">RoutingServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Routing_UrlGenerator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Routing/UrlGenerator.html">UrlGenerator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Session" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Session.html">Session</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Session_Console" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Session/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Session_Console_SessionTableCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Session/Console/SessionTableCommand.html">SessionTableCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Session_CacheBasedSessionHandler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/CacheBasedSessionHandler.html">CacheBasedSessionHandler</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_CommandsServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/CommandsServiceProvider.html">CommandsServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_CookieSessionHandler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/CookieSessionHandler.html">CookieSessionHandler</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_DatabaseSessionHandler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/DatabaseSessionHandler.html">DatabaseSessionHandler</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_ExistenceAwareInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/ExistenceAwareInterface.html">ExistenceAwareInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_FileSessionHandler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/FileSessionHandler.html">FileSessionHandler</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_Middleware" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/Middleware.html">Middleware</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_SessionInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/SessionInterface.html">SessionInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_SessionManager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/SessionManager.html">SessionManager</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_SessionServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/SessionServiceProvider.html">SessionServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_Store" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/Store.html">Store</a>                    </div>                </li>                            <li data-name="class:Illuminate_Session_TokenMismatchException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Session/TokenMismatchException.html">TokenMismatchException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Support" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Support.html">Support</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Support_Contracts" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Support/Contracts.html">Contracts</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Support_Contracts_ArrayableInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Contracts/ArrayableInterface.html">ArrayableInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Contracts_JsonableInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Contracts/JsonableInterface.html">JsonableInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Contracts_MessageProviderInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Contracts/MessageProviderInterface.html">MessageProviderInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Contracts_RenderableInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Contracts/RenderableInterface.html">RenderableInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Contracts_ResponsePreparerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Contracts/ResponsePreparerInterface.html">ResponsePreparerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Support_Facades" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Support/Facades.html">Facades</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Support_Facades_App" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/App.html">App</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Artisan" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Artisan.html">Artisan</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Auth" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Auth.html">Auth</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Blade" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Blade.html">Blade</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Cache" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Cache.html">Cache</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Config" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Config.html">Config</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Cookie" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Cookie.html">Cookie</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Crypt" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Crypt.html">Crypt</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_DB" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/DB.html">DB</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Event" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Event.html">Event</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Facade" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Facade.html">Facade</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_File" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/File.html">File</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Form" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Form.html">Form</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_HTML" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/HTML.html">HTML</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Hash" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Hash.html">Hash</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Input" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Input.html">Input</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Lang" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Lang.html">Lang</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Log" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Log.html">Log</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Mail" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Mail.html">Mail</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Paginator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Paginator.html">Paginator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Password" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Password.html">Password</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Queue" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Queue.html">Queue</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Redirect" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Redirect.html">Redirect</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Redis" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Redis.html">Redis</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Request" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Request.html">Request</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Response" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Response.html">Response</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Route" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Route.html">Route</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_SSH" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/SSH.html">SSH</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Schema" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Schema.html">Schema</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Session" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Session.html">Session</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_URL" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/URL.html">URL</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_Validator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/Validator.html">Validator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Facades_View" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Facades/View.html">View</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Support_Traits" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Support/Traits.html">Traits</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Support_Traits_CapsuleManagerTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Traits/CapsuleManagerTrait.html">CapsuleManagerTrait</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Traits_MacroableTrait" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Support/Traits/MacroableTrait.html">MacroableTrait</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Support_Arr" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/Arr.html">Arr</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_ClassLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/ClassLoader.html">ClassLoader</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Collection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/Collection.html">Collection</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Fluent" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/Fluent.html">Fluent</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Manager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/Manager.html">Manager</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_MessageBag" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/MessageBag.html">MessageBag</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_NamespacedItemResolver" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/NamespacedItemResolver.html">NamespacedItemResolver</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Pluralizer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/Pluralizer.html">Pluralizer</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_SerializableClosure" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/SerializableClosure.html">SerializableClosure</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_ServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/ServiceProvider.html">ServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_Str" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/Str.html">Str</a>                    </div>                </li>                            <li data-name="class:Illuminate_Support_ViewErrorBag" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Support/ViewErrorBag.html">ViewErrorBag</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Translation" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Translation.html">Translation</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Translation_FileLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Translation/FileLoader.html">FileLoader</a>                    </div>                </li>                            <li data-name="class:Illuminate_Translation_LoaderInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Translation/LoaderInterface.html">LoaderInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Translation_TranslationServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Translation/TranslationServiceProvider.html">TranslationServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Translation_Translator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Translation/Translator.html">Translator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Validation" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Validation.html">Validation</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Validation_DatabasePresenceVerifier" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Validation/DatabasePresenceVerifier.html">DatabasePresenceVerifier</a>                    </div>                </li>                            <li data-name="class:Illuminate_Validation_Factory" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Validation/Factory.html">Factory</a>                    </div>                </li>                            <li data-name="class:Illuminate_Validation_PresenceVerifierInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Validation/PresenceVerifierInterface.html">PresenceVerifierInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_Validation_ValidationServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Validation/ValidationServiceProvider.html">ValidationServiceProvider</a>                    </div>                </li>                            <li data-name="class:Illuminate_Validation_Validator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Validation/Validator.html">Validator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_View" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/View.html">View</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_View_Compilers" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/View/Compilers.html">Compilers</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_View_Compilers_BladeCompiler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/View/Compilers/BladeCompiler.html">BladeCompiler</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_Compilers_Compiler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/View/Compilers/Compiler.html">Compiler</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_Compilers_CompilerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/View/Compilers/CompilerInterface.html">CompilerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_View_Engines" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/View/Engines.html">Engines</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_View_Engines_CompilerEngine" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/View/Engines/CompilerEngine.html">CompilerEngine</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_Engines_Engine" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/View/Engines/Engine.html">Engine</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_Engines_EngineInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/View/Engines/EngineInterface.html">EngineInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_Engines_EngineResolver" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/View/Engines/EngineResolver.html">EngineResolver</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_Engines_PhpEngine" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/View/Engines/PhpEngine.html">PhpEngine</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_View_Factory" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/View/Factory.html">Factory</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_FileViewFinder" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/View/FileViewFinder.html">FileViewFinder</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_View" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/View/View.html">View</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_ViewFinderInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/View/ViewFinderInterface.html">ViewFinderInterface</a>                    </div>                </li>                            <li data-name="class:Illuminate_View_ViewServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/View/ViewServiceProvider.html">ViewServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Illuminate_Workbench" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Workbench.html">Workbench</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Illuminate_Workbench_Console" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Illuminate/Workbench/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Illuminate_Workbench_Console_WorkbenchMakeCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Illuminate/Workbench/Console/WorkbenchMakeCommand.html">WorkbenchMakeCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Illuminate_Workbench_Package" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Workbench/Package.html">Package</a>                    </div>                </li>                            <li data-name="class:Illuminate_Workbench_PackageCreator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Workbench/PackageCreator.html">PackageCreator</a>                    </div>                </li>                            <li data-name="class:Illuminate_Workbench_Starter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Workbench/Starter.html">Starter</a>                    </div>                </li>                            <li data-name="class:Illuminate_Workbench_WorkbenchServiceProvider" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Illuminate/Workbench/WorkbenchServiceProvider.html">WorkbenchServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": ".html", "name": "", "doc": "Namespace "},{"type": "Namespace", "link": "Illuminate.html", "name": "Illuminate", "doc": "Namespace Illuminate"},{"type": "Namespace", "link": "Illuminate/Auth.html", "name": "Illuminate\\Auth", "doc": "Namespace Illuminate\\Auth"},{"type": "Namespace", "link": "Illuminate/Auth/Console.html", "name": "Illuminate\\Auth\\Console", "doc": "Namespace Illuminate\\Auth\\Console"},{"type": "Namespace", "link": "Illuminate/Auth/Reminders.html", "name": "Illuminate\\Auth\\Reminders", "doc": "Namespace Illuminate\\Auth\\Reminders"},{"type": "Namespace", "link": "Illuminate/Cache.html", "name": "Illuminate\\Cache", "doc": "Namespace Illuminate\\Cache"},{"type": "Namespace", "link": "Illuminate/Cache/Console.html", "name": "Illuminate\\Cache\\Console", "doc": "Namespace Illuminate\\Cache\\Console"},{"type": "Namespace", "link": "Illuminate/Config.html", "name": "Illuminate\\Config", "doc": "Namespace Illuminate\\Config"},{"type": "Namespace", "link": "Illuminate/Console.html", "name": "Illuminate\\Console", "doc": "Namespace Illuminate\\Console"},{"type": "Namespace", "link": "Illuminate/Container.html", "name": "Illuminate\\Container", "doc": "Namespace Illuminate\\Container"},{"type": "Namespace", "link": "Illuminate/Cookie.html", "name": "Illuminate\\Cookie", "doc": "Namespace Illuminate\\Cookie"},{"type": "Namespace", "link": "Illuminate/Database.html", "name": "Illuminate\\Database", "doc": "Namespace Illuminate\\Database"},{"type": "Namespace", "link": "Illuminate/Database/Capsule.html", "name": "Illuminate\\Database\\Capsule", "doc": "Namespace Illuminate\\Database\\Capsule"},{"type": "Namespace", "link": "Illuminate/Database/Connectors.html", "name": "Illuminate\\Database\\Connectors", "doc": "Namespace Illuminate\\Database\\Connectors"},{"type": "Namespace", "link": "Illuminate/Database/Console.html", "name": "Illuminate\\Database\\Console", "doc": "Namespace Illuminate\\Database\\Console"},{"type": "Namespace", "link": "Illuminate/Database/Console/Migrations.html", "name": "Illuminate\\Database\\Console\\Migrations", "doc": "Namespace Illuminate\\Database\\Console\\Migrations"},{"type": "Namespace", "link": "Illuminate/Database/Eloquent.html", "name": "Illuminate\\Database\\Eloquent", "doc": "Namespace Illuminate\\Database\\Eloquent"},{"type": "Namespace", "link": "Illuminate/Database/Eloquent/Relations.html", "name": "Illuminate\\Database\\Eloquent\\Relations", "doc": "Namespace Illuminate\\Database\\Eloquent\\Relations"},{"type": "Namespace", "link": "Illuminate/Database/Migrations.html", "name": "Illuminate\\Database\\Migrations", "doc": "Namespace Illuminate\\Database\\Migrations"},{"type": "Namespace", "link": "Illuminate/Database/Query.html", "name": "Illuminate\\Database\\Query", "doc": "Namespace Illuminate\\Database\\Query"},{"type": "Namespace", "link": "Illuminate/Database/Query/Grammars.html", "name": "Illuminate\\Database\\Query\\Grammars", "doc": "Namespace Illuminate\\Database\\Query\\Grammars"},{"type": "Namespace", "link": "Illuminate/Database/Query/Processors.html", "name": "Illuminate\\Database\\Query\\Processors", "doc": "Namespace Illuminate\\Database\\Query\\Processors"},{"type": "Namespace", "link": "Illuminate/Database/Schema.html", "name": "Illuminate\\Database\\Schema", "doc": "Namespace Illuminate\\Database\\Schema"},{"type": "Namespace", "link": "Illuminate/Database/Schema/Grammars.html", "name": "Illuminate\\Database\\Schema\\Grammars", "doc": "Namespace Illuminate\\Database\\Schema\\Grammars"},{"type": "Namespace", "link": "Illuminate/Encryption.html", "name": "Illuminate\\Encryption", "doc": "Namespace Illuminate\\Encryption"},{"type": "Namespace", "link": "Illuminate/Events.html", "name": "Illuminate\\Events", "doc": "Namespace Illuminate\\Events"},{"type": "Namespace", "link": "Illuminate/Exception.html", "name": "Illuminate\\Exception", "doc": "Namespace Illuminate\\Exception"},{"type": "Namespace", "link": "Illuminate/Filesystem.html", "name": "Illuminate\\Filesystem", "doc": "Namespace Illuminate\\Filesystem"},{"type": "Namespace", "link": "Illuminate/Foundation.html", "name": "Illuminate\\Foundation", "doc": "Namespace Illuminate\\Foundation"},{"type": "Namespace", "link": "Illuminate/Foundation/Console.html", "name": "Illuminate\\Foundation\\Console", "doc": "Namespace Illuminate\\Foundation\\Console"},{"type": "Namespace", "link": "Illuminate/Foundation/Providers.html", "name": "Illuminate\\Foundation\\Providers", "doc": "Namespace Illuminate\\Foundation\\Providers"},{"type": "Namespace", "link": "Illuminate/Foundation/Testing.html", "name": "Illuminate\\Foundation\\Testing", "doc": "Namespace Illuminate\\Foundation\\Testing"},{"type": "Namespace", "link": "Illuminate/Hashing.html", "name": "Illuminate\\Hashing", "doc": "Namespace Illuminate\\Hashing"},{"type": "Namespace", "link": "Illuminate/Html.html", "name": "Illuminate\\Html", "doc": "Namespace Illuminate\\Html"},{"type": "Namespace", "link": "Illuminate/Http.html", "name": "Illuminate\\Http", "doc": "Namespace Illuminate\\Http"},{"type": "Namespace", "link": "Illuminate/Log.html", "name": "Illuminate\\Log", "doc": "Namespace Illuminate\\Log"},{"type": "Namespace", "link": "Illuminate/Mail.html", "name": "Illuminate\\Mail", "doc": "Namespace Illuminate\\Mail"},{"type": "Namespace", "link": "Illuminate/Mail/Transport.html", "name": "Illuminate\\Mail\\Transport", "doc": "Namespace Illuminate\\Mail\\Transport"},{"type": "Namespace", "link": "Illuminate/Pagination.html", "name": "Illuminate\\Pagination", "doc": "Namespace Illuminate\\Pagination"},{"type": "Namespace", "link": "Illuminate/Queue.html", "name": "Illuminate\\Queue", "doc": "Namespace Illuminate\\Queue"},{"type": "Namespace", "link": "Illuminate/Queue/Capsule.html", "name": "Illuminate\\Queue\\Capsule", "doc": "Namespace Illuminate\\Queue\\Capsule"},{"type": "Namespace", "link": "Illuminate/Queue/Connectors.html", "name": "Illuminate\\Queue\\Connectors", "doc": "Namespace Illuminate\\Queue\\Connectors"},{"type": "Namespace", "link": "Illuminate/Queue/Console.html", "name": "Illuminate\\Queue\\Console", "doc": "Namespace Illuminate\\Queue\\Console"},{"type": "Namespace", "link": "Illuminate/Queue/Failed.html", "name": "Illuminate\\Queue\\Failed", "doc": "Namespace Illuminate\\Queue\\Failed"},{"type": "Namespace", "link": "Illuminate/Queue/Jobs.html", "name": "Illuminate\\Queue\\Jobs", "doc": "Namespace Illuminate\\Queue\\Jobs"},{"type": "Namespace", "link": "Illuminate/Redis.html", "name": "Illuminate\\Redis", "doc": "Namespace Illuminate\\Redis"},{"type": "Namespace", "link": "Illuminate/Remote.html", "name": "Illuminate\\Remote", "doc": "Namespace Illuminate\\Remote"},{"type": "Namespace", "link": "Illuminate/Routing.html", "name": "Illuminate\\Routing", "doc": "Namespace Illuminate\\Routing"},{"type": "Namespace", "link": "Illuminate/Routing/Console.html", "name": "Illuminate\\Routing\\Console", "doc": "Namespace Illuminate\\Routing\\Console"},{"type": "Namespace", "link": "Illuminate/Routing/Generators.html", "name": "Illuminate\\Routing\\Generators", "doc": "Namespace Illuminate\\Routing\\Generators"},{"type": "Namespace", "link": "Illuminate/Routing/Matching.html", "name": "Illuminate\\Routing\\Matching", "doc": "Namespace Illuminate\\Routing\\Matching"},{"type": "Namespace", "link": "Illuminate/Session.html", "name": "Illuminate\\Session", "doc": "Namespace Illuminate\\Session"},{"type": "Namespace", "link": "Illuminate/Session/Console.html", "name": "Illuminate\\Session\\Console", "doc": "Namespace Illuminate\\Session\\Console"},{"type": "Namespace", "link": "Illuminate/Support.html", "name": "Illuminate\\Support", "doc": "Namespace Illuminate\\Support"},{"type": "Namespace", "link": "Illuminate/Support/Contracts.html", "name": "Illuminate\\Support\\Contracts", "doc": "Namespace Illuminate\\Support\\Contracts"},{"type": "Namespace", "link": "Illuminate/Support/Facades.html", "name": "Illuminate\\Support\\Facades", "doc": "Namespace Illuminate\\Support\\Facades"},{"type": "Namespace", "link": "Illuminate/Support/Traits.html", "name": "Illuminate\\Support\\Traits", "doc": "Namespace Illuminate\\Support\\Traits"},{"type": "Namespace", "link": "Illuminate/Translation.html", "name": "Illuminate\\Translation", "doc": "Namespace Illuminate\\Translation"},{"type": "Namespace", "link": "Illuminate/Validation.html", "name": "Illuminate\\Validation", "doc": "Namespace Illuminate\\Validation"},{"type": "Namespace", "link": "Illuminate/View.html", "name": "Illuminate\\View", "doc": "Namespace Illuminate\\View"},{"type": "Namespace", "link": "Illuminate/View/Compilers.html", "name": "Illuminate\\View\\Compilers", "doc": "Namespace Illuminate\\View\\Compilers"},{"type": "Namespace", "link": "Illuminate/View/Engines.html", "name": "Illuminate\\View\\Engines", "doc": "Namespace Illuminate\\View\\Engines"},{"type": "Namespace", "link": "Illuminate/Workbench.html", "name": "Illuminate\\Workbench", "doc": "Namespace Illuminate\\Workbench"},{"type": "Namespace", "link": "Illuminate/Workbench/Console.html", "name": "Illuminate\\Workbench\\Console", "doc": "Namespace Illuminate\\Workbench\\Console"},
            {"type": "Interface", "fromName": "Illuminate\\Auth\\Reminders", "fromLink": "Illuminate/Auth/Reminders.html", "link": "Illuminate/Auth/Reminders/RemindableInterface.html", "name": "Illuminate\\Auth\\Reminders\\RemindableInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\RemindableInterface", "fromLink": "Illuminate/Auth/Reminders/RemindableInterface.html", "link": "Illuminate/Auth/Reminders/RemindableInterface.html#method_getReminderEmail", "name": "Illuminate\\Auth\\Reminders\\RemindableInterface::getReminderEmail", "doc": "&quot;Get the e-mail address where password reminders are sent.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Auth\\Reminders", "fromLink": "Illuminate/Auth/Reminders.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "fromLink": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html#method_create", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface::create", "doc": "&quot;Create a new reminder record and token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "fromLink": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html#method_exists", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface::exists", "doc": "&quot;Determine if a reminder record exists and is valid.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "fromLink": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html#method_delete", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface::delete", "doc": "&quot;Delete a reminder record by token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "fromLink": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html#method_deleteExpired", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface::deleteExpired", "doc": "&quot;Delete expired reminders.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/UserInterface.html", "name": "Illuminate\\Auth\\UserInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_getAuthIdentifier", "name": "Illuminate\\Auth\\UserInterface::getAuthIdentifier", "doc": "&quot;Get the unique identifier for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_getAuthPassword", "name": "Illuminate\\Auth\\UserInterface::getAuthPassword", "doc": "&quot;Get the password for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_getRememberToken", "name": "Illuminate\\Auth\\UserInterface::getRememberToken", "doc": "&quot;Get the token value for the \&quot;remember me\&quot; session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_setRememberToken", "name": "Illuminate\\Auth\\UserInterface::setRememberToken", "doc": "&quot;Set the token value for the \&quot;remember me\&quot; session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_getRememberTokenName", "name": "Illuminate\\Auth\\UserInterface::getRememberTokenName", "doc": "&quot;Get the column name for the \&quot;remember me\&quot; token.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/UserProviderInterface.html", "name": "Illuminate\\Auth\\UserProviderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_retrieveById", "name": "Illuminate\\Auth\\UserProviderInterface::retrieveById", "doc": "&quot;Retrieve a user by their unique identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_retrieveByToken", "name": "Illuminate\\Auth\\UserProviderInterface::retrieveByToken", "doc": "&quot;Retrieve a user by by their unique identifier and \&quot;remember me\&quot; token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_updateRememberToken", "name": "Illuminate\\Auth\\UserProviderInterface::updateRememberToken", "doc": "&quot;Update the \&quot;remember me\&quot; token for the given user in storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_retrieveByCredentials", "name": "Illuminate\\Auth\\UserProviderInterface::retrieveByCredentials", "doc": "&quot;Retrieve a user by the given credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_validateCredentials", "name": "Illuminate\\Auth\\UserProviderInterface::validateCredentials", "doc": "&quot;Validate a user against the given credentials.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/StoreInterface.html", "name": "Illuminate\\Cache\\StoreInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_get", "name": "Illuminate\\Cache\\StoreInterface::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_put", "name": "Illuminate\\Cache\\StoreInterface::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_increment", "name": "Illuminate\\Cache\\StoreInterface::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_decrement", "name": "Illuminate\\Cache\\StoreInterface::decrement", "doc": "&quot;Decrement the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_forever", "name": "Illuminate\\Cache\\StoreInterface::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_forget", "name": "Illuminate\\Cache\\StoreInterface::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_flush", "name": "Illuminate\\Cache\\StoreInterface::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_getPrefix", "name": "Illuminate\\Cache\\StoreInterface::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Config", "fromLink": "Illuminate/Config.html", "link": "Illuminate/Config/EnvironmentVariablesLoaderInterface.html", "name": "Illuminate\\Config\\EnvironmentVariablesLoaderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Config\\EnvironmentVariablesLoaderInterface", "fromLink": "Illuminate/Config/EnvironmentVariablesLoaderInterface.html", "link": "Illuminate/Config/EnvironmentVariablesLoaderInterface.html#method_load", "name": "Illuminate\\Config\\EnvironmentVariablesLoaderInterface::load", "doc": "&quot;Load the environment variables for the given environment.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Config", "fromLink": "Illuminate/Config.html", "link": "Illuminate/Config/LoaderInterface.html", "name": "Illuminate\\Config\\LoaderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_load", "name": "Illuminate\\Config\\LoaderInterface::load", "doc": "&quot;Load the given configuration group.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_exists", "name": "Illuminate\\Config\\LoaderInterface::exists", "doc": "&quot;Determine if the given configuration group exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_addNamespace", "name": "Illuminate\\Config\\LoaderInterface::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_getNamespaces", "name": "Illuminate\\Config\\LoaderInterface::getNamespaces", "doc": "&quot;Returns all registered namespaces with the config\nloader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_cascadePackage", "name": "Illuminate\\Config\\LoaderInterface::cascadePackage", "doc": "&quot;Apply any cascades to an array of package options.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/ConnectionInterface.html", "name": "Illuminate\\Database\\ConnectionInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_table", "name": "Illuminate\\Database\\ConnectionInterface::table", "doc": "&quot;Begin a fluent query against a database table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_raw", "name": "Illuminate\\Database\\ConnectionInterface::raw", "doc": "&quot;Get a new raw query expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_selectOne", "name": "Illuminate\\Database\\ConnectionInterface::selectOne", "doc": "&quot;Run a select statement and return a single result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_select", "name": "Illuminate\\Database\\ConnectionInterface::select", "doc": "&quot;Run a select statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_insert", "name": "Illuminate\\Database\\ConnectionInterface::insert", "doc": "&quot;Run an insert statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_update", "name": "Illuminate\\Database\\ConnectionInterface::update", "doc": "&quot;Run an update statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_delete", "name": "Illuminate\\Database\\ConnectionInterface::delete", "doc": "&quot;Run a delete statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_statement", "name": "Illuminate\\Database\\ConnectionInterface::statement", "doc": "&quot;Execute an SQL statement and return the boolean result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_affectingStatement", "name": "Illuminate\\Database\\ConnectionInterface::affectingStatement", "doc": "&quot;Run an SQL statement and get the number of rows affected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_unprepared", "name": "Illuminate\\Database\\ConnectionInterface::unprepared", "doc": "&quot;Run a raw, unprepared query against the PDO connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_prepareBindings", "name": "Illuminate\\Database\\ConnectionInterface::prepareBindings", "doc": "&quot;Prepare the query bindings for execution.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_transaction", "name": "Illuminate\\Database\\ConnectionInterface::transaction", "doc": "&quot;Execute a Closure within a transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_beginTransaction", "name": "Illuminate\\Database\\ConnectionInterface::beginTransaction", "doc": "&quot;Start a new database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_commit", "name": "Illuminate\\Database\\ConnectionInterface::commit", "doc": "&quot;Commit the active database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_rollBack", "name": "Illuminate\\Database\\ConnectionInterface::rollBack", "doc": "&quot;Rollback the active database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_transactionLevel", "name": "Illuminate\\Database\\ConnectionInterface::transactionLevel", "doc": "&quot;Get the number of active transactions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_pretend", "name": "Illuminate\\Database\\ConnectionInterface::pretend", "doc": "&quot;Execute the given callback in \&quot;dry run\&quot; mode.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/ConnectionResolverInterface.html", "name": "Illuminate\\Database\\ConnectionResolverInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolverInterface", "fromLink": "Illuminate/Database/ConnectionResolverInterface.html", "link": "Illuminate/Database/ConnectionResolverInterface.html#method_connection", "name": "Illuminate\\Database\\ConnectionResolverInterface::connection", "doc": "&quot;Get a database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolverInterface", "fromLink": "Illuminate/Database/ConnectionResolverInterface.html", "link": "Illuminate/Database/ConnectionResolverInterface.html#method_getDefaultConnection", "name": "Illuminate\\Database\\ConnectionResolverInterface::getDefaultConnection", "doc": "&quot;Get the default connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolverInterface", "fromLink": "Illuminate/Database/ConnectionResolverInterface.html", "link": "Illuminate/Database/ConnectionResolverInterface.html#method_setDefaultConnection", "name": "Illuminate\\Database\\ConnectionResolverInterface::setDefaultConnection", "doc": "&quot;Set the default connection name.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Database\\Connectors", "fromLink": "Illuminate/Database/Connectors.html", "link": "Illuminate/Database/Connectors/ConnectorInterface.html", "name": "Illuminate\\Database\\Connectors\\ConnectorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectorInterface", "fromLink": "Illuminate/Database/Connectors/ConnectorInterface.html", "link": "Illuminate/Database/Connectors/ConnectorInterface.html#method_connect", "name": "Illuminate\\Database\\Connectors\\ConnectorInterface::connect", "doc": "&quot;Establish a database connection.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/ScopeInterface.html", "name": "Illuminate\\Database\\Eloquent\\ScopeInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\ScopeInterface", "fromLink": "Illuminate/Database/Eloquent/ScopeInterface.html", "link": "Illuminate/Database/Eloquent/ScopeInterface.html#method_apply", "name": "Illuminate\\Database\\Eloquent\\ScopeInterface::apply", "doc": "&quot;Apply the scope to a given Eloquent query builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\ScopeInterface", "fromLink": "Illuminate/Database/Eloquent/ScopeInterface.html", "link": "Illuminate/Database/Eloquent/ScopeInterface.html#method_remove", "name": "Illuminate\\Database\\Eloquent\\ScopeInterface::remove", "doc": "&quot;Remove the scope from the given Eloquent query builder.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Database\\Migrations", "fromLink": "Illuminate/Database/Migrations.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getRan", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getRan", "doc": "&quot;Get the ran migrations for a given package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getLast", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getLast", "doc": "&quot;Get the last migration batch.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_log", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::log", "doc": "&quot;Log that a migration was run.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_delete", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::delete", "doc": "&quot;Remove a migration from the log.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getNextBatchNumber", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getNextBatchNumber", "doc": "&quot;Get the next migration batch number.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_createRepository", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::createRepository", "doc": "&quot;Create the migration repository data store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_repositoryExists", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::repositoryExists", "doc": "&quot;Determine if the migration repository exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_setSource", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::setSource", "doc": "&quot;Set the information source to gather data.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Exception", "fromLink": "Illuminate/Exception.html", "link": "Illuminate/Exception/ExceptionDisplayerInterface.html", "name": "Illuminate\\Exception\\ExceptionDisplayerInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionDisplayerInterface", "fromLink": "Illuminate/Exception/ExceptionDisplayerInterface.html", "link": "Illuminate/Exception/ExceptionDisplayerInterface.html#method_display", "name": "Illuminate\\Exception\\ExceptionDisplayerInterface::display", "doc": "&quot;Display the given exception to the user.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Hashing", "fromLink": "Illuminate/Hashing.html", "link": "Illuminate/Hashing/HasherInterface.html", "name": "Illuminate\\Hashing\\HasherInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Hashing\\HasherInterface", "fromLink": "Illuminate/Hashing/HasherInterface.html", "link": "Illuminate/Hashing/HasherInterface.html#method_make", "name": "Illuminate\\Hashing\\HasherInterface::make", "doc": "&quot;Hash the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Hashing\\HasherInterface", "fromLink": "Illuminate/Hashing/HasherInterface.html", "link": "Illuminate/Hashing/HasherInterface.html#method_check", "name": "Illuminate\\Hashing\\HasherInterface::check", "doc": "&quot;Check the given plain value against a hash.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Hashing\\HasherInterface", "fromLink": "Illuminate/Hashing/HasherInterface.html", "link": "Illuminate/Hashing/HasherInterface.html#method_needsRehash", "name": "Illuminate\\Hashing\\HasherInterface::needsRehash", "doc": "&quot;Check if the given hash has been hashed using the given options.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Queue\\Connectors", "fromLink": "Illuminate/Queue/Connectors.html", "link": "Illuminate/Queue/Connectors/ConnectorInterface.html", "name": "Illuminate\\Queue\\Connectors\\ConnectorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\ConnectorInterface", "fromLink": "Illuminate/Queue/Connectors/ConnectorInterface.html", "link": "Illuminate/Queue/Connectors/ConnectorInterface.html#method_connect", "name": "Illuminate\\Queue\\Connectors\\ConnectorInterface::connect", "doc": "&quot;Establish a queue connection.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Queue\\Failed", "fromLink": "Illuminate/Queue/Failed.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_log", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::log", "doc": "&quot;Log a failed job into storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_all", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::all", "doc": "&quot;Get a list of all of the failed jobs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_find", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::find", "doc": "&quot;Get a single failed job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_forget", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::forget", "doc": "&quot;Delete a single failed job from storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_flush", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::flush", "doc": "&quot;Flush all of the failed jobs from storage.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/QueueInterface.html", "name": "Illuminate\\Queue\\QueueInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\QueueInterface", "fromLink": "Illuminate/Queue/QueueInterface.html", "link": "Illuminate/Queue/QueueInterface.html#method_push", "name": "Illuminate\\Queue\\QueueInterface::push", "doc": "&quot;Push a new job onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueInterface", "fromLink": "Illuminate/Queue/QueueInterface.html", "link": "Illuminate/Queue/QueueInterface.html#method_pushRaw", "name": "Illuminate\\Queue\\QueueInterface::pushRaw", "doc": "&quot;Push a raw payload onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueInterface", "fromLink": "Illuminate/Queue/QueueInterface.html", "link": "Illuminate/Queue/QueueInterface.html#method_later", "name": "Illuminate\\Queue\\QueueInterface::later", "doc": "&quot;Push a new job onto the queue after a delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueInterface", "fromLink": "Illuminate/Queue/QueueInterface.html", "link": "Illuminate/Queue/QueueInterface.html#method_pop", "name": "Illuminate\\Queue\\QueueInterface::pop", "doc": "&quot;Pop the next job off of the queue.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/ConnectionInterface.html", "name": "Illuminate\\Remote\\ConnectionInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_define", "name": "Illuminate\\Remote\\ConnectionInterface::define", "doc": "&quot;Define a set of commands as a task.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_task", "name": "Illuminate\\Remote\\ConnectionInterface::task", "doc": "&quot;Run a task against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_run", "name": "Illuminate\\Remote\\ConnectionInterface::run", "doc": "&quot;Run a set of commands against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_put", "name": "Illuminate\\Remote\\ConnectionInterface::put", "doc": "&quot;Upload a local file to the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_putString", "name": "Illuminate\\Remote\\ConnectionInterface::putString", "doc": "&quot;Upload a string to to the given file on the server.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/GatewayInterface.html", "name": "Illuminate\\Remote\\GatewayInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_connect", "name": "Illuminate\\Remote\\GatewayInterface::connect", "doc": "&quot;Connect to the SSH server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_connected", "name": "Illuminate\\Remote\\GatewayInterface::connected", "doc": "&quot;Determine if the gateway is connected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_run", "name": "Illuminate\\Remote\\GatewayInterface::run", "doc": "&quot;Run a command against the server (non-blocking).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_put", "name": "Illuminate\\Remote\\GatewayInterface::put", "doc": "&quot;Upload a local file to the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_putString", "name": "Illuminate\\Remote\\GatewayInterface::putString", "doc": "&quot;Upload a string to to the given file on the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_nextLine", "name": "Illuminate\\Remote\\GatewayInterface::nextLine", "doc": "&quot;Get the next line of output from the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_status", "name": "Illuminate\\Remote\\GatewayInterface::status", "doc": "&quot;Get the exit status of the last command.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Routing\\Matching", "fromLink": "Illuminate/Routing/Matching.html", "link": "Illuminate/Routing/Matching/ValidatorInterface.html", "name": "Illuminate\\Routing\\Matching\\ValidatorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Matching\\ValidatorInterface", "fromLink": "Illuminate/Routing/Matching/ValidatorInterface.html", "link": "Illuminate/Routing/Matching/ValidatorInterface.html#method_matches", "name": "Illuminate\\Routing\\Matching\\ValidatorInterface::matches", "doc": "&quot;Validate a given rule against a route and request.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/RouteFiltererInterface.html", "name": "Illuminate\\Routing\\RouteFiltererInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\RouteFiltererInterface", "fromLink": "Illuminate/Routing/RouteFiltererInterface.html", "link": "Illuminate/Routing/RouteFiltererInterface.html#method_filter", "name": "Illuminate\\Routing\\RouteFiltererInterface::filter", "doc": "&quot;Register a new filter with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteFiltererInterface", "fromLink": "Illuminate/Routing/RouteFiltererInterface.html", "link": "Illuminate/Routing/RouteFiltererInterface.html#method_callRouteFilter", "name": "Illuminate\\Routing\\RouteFiltererInterface::callRouteFilter", "doc": "&quot;Call the given route filter.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/ExistenceAwareInterface.html", "name": "Illuminate\\Session\\ExistenceAwareInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\ExistenceAwareInterface", "fromLink": "Illuminate/Session/ExistenceAwareInterface.html", "link": "Illuminate/Session/ExistenceAwareInterface.html#method_setExists", "name": "Illuminate\\Session\\ExistenceAwareInterface::setExists", "doc": "&quot;Set the existence state for the session.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/SessionInterface.html", "name": "Illuminate\\Session\\SessionInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\SessionInterface", "fromLink": "Illuminate/Session/SessionInterface.html", "link": "Illuminate/Session/SessionInterface.html#method_getHandler", "name": "Illuminate\\Session\\SessionInterface::getHandler", "doc": "&quot;Get the session handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionInterface", "fromLink": "Illuminate/Session/SessionInterface.html", "link": "Illuminate/Session/SessionInterface.html#method_handlerNeedsRequest", "name": "Illuminate\\Session\\SessionInterface::handlerNeedsRequest", "doc": "&quot;Determine if the session handler needs a request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionInterface", "fromLink": "Illuminate/Session/SessionInterface.html", "link": "Illuminate/Session/SessionInterface.html#method_setRequestOnHandler", "name": "Illuminate\\Session\\SessionInterface::setRequestOnHandler", "doc": "&quot;Set the request on the handler instance.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/ArrayableInterface.html", "name": "Illuminate\\Support\\Contracts\\ArrayableInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\ArrayableInterface", "fromLink": "Illuminate/Support/Contracts/ArrayableInterface.html", "link": "Illuminate/Support/Contracts/ArrayableInterface.html#method_toArray", "name": "Illuminate\\Support\\Contracts\\ArrayableInterface::toArray", "doc": "&quot;Get the instance as an array.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/JsonableInterface.html", "name": "Illuminate\\Support\\Contracts\\JsonableInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\JsonableInterface", "fromLink": "Illuminate/Support/Contracts/JsonableInterface.html", "link": "Illuminate/Support/Contracts/JsonableInterface.html#method_toJson", "name": "Illuminate\\Support\\Contracts\\JsonableInterface::toJson", "doc": "&quot;Convert the object to its JSON representation.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/MessageProviderInterface.html", "name": "Illuminate\\Support\\Contracts\\MessageProviderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\MessageProviderInterface", "fromLink": "Illuminate/Support/Contracts/MessageProviderInterface.html", "link": "Illuminate/Support/Contracts/MessageProviderInterface.html#method_getMessageBag", "name": "Illuminate\\Support\\Contracts\\MessageProviderInterface::getMessageBag", "doc": "&quot;Get the messages for the instance.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/RenderableInterface.html", "name": "Illuminate\\Support\\Contracts\\RenderableInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\RenderableInterface", "fromLink": "Illuminate/Support/Contracts/RenderableInterface.html", "link": "Illuminate/Support/Contracts/RenderableInterface.html#method_render", "name": "Illuminate\\Support\\Contracts\\RenderableInterface::render", "doc": "&quot;Get the evaluated contents of the object.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/ResponsePreparerInterface.html", "name": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface", "fromLink": "Illuminate/Support/Contracts/ResponsePreparerInterface.html", "link": "Illuminate/Support/Contracts/ResponsePreparerInterface.html#method_prepareResponse", "name": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface::prepareResponse", "doc": "&quot;Prepare the given value as a Response object.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface", "fromLink": "Illuminate/Support/Contracts/ResponsePreparerInterface.html", "link": "Illuminate/Support/Contracts/ResponsePreparerInterface.html#method_readyForResponses", "name": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface::readyForResponses", "doc": "&quot;Determine if provider is ready to return responses.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Translation", "fromLink": "Illuminate/Translation.html", "link": "Illuminate/Translation/LoaderInterface.html", "name": "Illuminate\\Translation\\LoaderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Translation\\LoaderInterface", "fromLink": "Illuminate/Translation/LoaderInterface.html", "link": "Illuminate/Translation/LoaderInterface.html#method_load", "name": "Illuminate\\Translation\\LoaderInterface::load", "doc": "&quot;Load the messages for the given locale.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\LoaderInterface", "fromLink": "Illuminate/Translation/LoaderInterface.html", "link": "Illuminate/Translation/LoaderInterface.html#method_addNamespace", "name": "Illuminate\\Translation\\LoaderInterface::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\Validation", "fromLink": "Illuminate/Validation.html", "link": "Illuminate/Validation/PresenceVerifierInterface.html", "name": "Illuminate\\Validation\\PresenceVerifierInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Validation\\PresenceVerifierInterface", "fromLink": "Illuminate/Validation/PresenceVerifierInterface.html", "link": "Illuminate/Validation/PresenceVerifierInterface.html#method_getCount", "name": "Illuminate\\Validation\\PresenceVerifierInterface::getCount", "doc": "&quot;Count the number of objects in a collection having the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\PresenceVerifierInterface", "fromLink": "Illuminate/Validation/PresenceVerifierInterface.html", "link": "Illuminate/Validation/PresenceVerifierInterface.html#method_getMultiCount", "name": "Illuminate\\Validation\\PresenceVerifierInterface::getMultiCount", "doc": "&quot;Count the number of objects in a collection with the given values.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\View\\Compilers", "fromLink": "Illuminate/View/Compilers.html", "link": "Illuminate/View/Compilers/CompilerInterface.html", "name": "Illuminate\\View\\Compilers\\CompilerInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\CompilerInterface", "fromLink": "Illuminate/View/Compilers/CompilerInterface.html", "link": "Illuminate/View/Compilers/CompilerInterface.html#method_getCompiledPath", "name": "Illuminate\\View\\Compilers\\CompilerInterface::getCompiledPath", "doc": "&quot;Get the path to the compiled version of a view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\CompilerInterface", "fromLink": "Illuminate/View/Compilers/CompilerInterface.html", "link": "Illuminate/View/Compilers/CompilerInterface.html#method_isExpired", "name": "Illuminate\\View\\Compilers\\CompilerInterface::isExpired", "doc": "&quot;Determine if the given view is expired.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\CompilerInterface", "fromLink": "Illuminate/View/Compilers/CompilerInterface.html", "link": "Illuminate/View/Compilers/CompilerInterface.html#method_compile", "name": "Illuminate\\View\\Compilers\\CompilerInterface::compile", "doc": "&quot;Compile the view at the given path.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\View\\Engines", "fromLink": "Illuminate/View/Engines.html", "link": "Illuminate/View/Engines/EngineInterface.html", "name": "Illuminate\\View\\Engines\\EngineInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Engines\\EngineInterface", "fromLink": "Illuminate/View/Engines/EngineInterface.html", "link": "Illuminate/View/Engines/EngineInterface.html#method_get", "name": "Illuminate\\View\\Engines\\EngineInterface::get", "doc": "&quot;Get the evaluated contents of the view.&quot;"},
            
            {"type": "Interface", "fromName": "Illuminate\\View", "fromLink": "Illuminate/View.html", "link": "Illuminate/View/ViewFinderInterface.html", "name": "Illuminate\\View\\ViewFinderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_find", "name": "Illuminate\\View\\ViewFinderInterface::find", "doc": "&quot;Get the fully qualified location of the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_addLocation", "name": "Illuminate\\View\\ViewFinderInterface::addLocation", "doc": "&quot;Add a location to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_addNamespace", "name": "Illuminate\\View\\ViewFinderInterface::addNamespace", "doc": "&quot;Add a namespace hint to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_prependNamespace", "name": "Illuminate\\View\\ViewFinderInterface::prependNamespace", "doc": "&quot;Prepend a namespace hint to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_addExtension", "name": "Illuminate\\View\\ViewFinderInterface::addExtension", "doc": "&quot;Add a valid view extension to the finder.&quot;"},
            
            
            {"type": "Class",  "link": "IlluminateQueueClosure.html", "name": "IlluminateQueueClosure", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "IlluminateQueueClosure", "fromLink": "IlluminateQueueClosure.html", "link": "IlluminateQueueClosure.html#method___construct", "name": "IlluminateQueueClosure::__construct", "doc": "&quot;Create a new queued Closure job.&quot;"},
                    {"type": "Method", "fromName": "IlluminateQueueClosure", "fromLink": "IlluminateQueueClosure.html", "link": "IlluminateQueueClosure.html#method_fire", "name": "IlluminateQueueClosure::fire", "doc": "&quot;Fire the Closure based queue job.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/AuthManager.html", "name": "Illuminate\\Auth\\AuthManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\AuthManager", "fromLink": "Illuminate/Auth/AuthManager.html", "link": "Illuminate/Auth/AuthManager.html#method_createDriver", "name": "Illuminate\\Auth\\AuthManager::createDriver", "doc": "&quot;Create a new driver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\AuthManager", "fromLink": "Illuminate/Auth/AuthManager.html", "link": "Illuminate/Auth/AuthManager.html#method_callCustomCreator", "name": "Illuminate\\Auth\\AuthManager::callCustomCreator", "doc": "&quot;Call a custom driver creator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\AuthManager", "fromLink": "Illuminate/Auth/AuthManager.html", "link": "Illuminate/Auth/AuthManager.html#method_createDatabaseDriver", "name": "Illuminate\\Auth\\AuthManager::createDatabaseDriver", "doc": "&quot;Create an instance of the database driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\AuthManager", "fromLink": "Illuminate/Auth/AuthManager.html", "link": "Illuminate/Auth/AuthManager.html#method_createDatabaseProvider", "name": "Illuminate\\Auth\\AuthManager::createDatabaseProvider", "doc": "&quot;Create an instance of the database user provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\AuthManager", "fromLink": "Illuminate/Auth/AuthManager.html", "link": "Illuminate/Auth/AuthManager.html#method_createEloquentDriver", "name": "Illuminate\\Auth\\AuthManager::createEloquentDriver", "doc": "&quot;Create an instance of the Eloquent driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\AuthManager", "fromLink": "Illuminate/Auth/AuthManager.html", "link": "Illuminate/Auth/AuthManager.html#method_createEloquentProvider", "name": "Illuminate\\Auth\\AuthManager::createEloquentProvider", "doc": "&quot;Create an instance of the Eloquent user provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\AuthManager", "fromLink": "Illuminate/Auth/AuthManager.html", "link": "Illuminate/Auth/AuthManager.html#method_getDefaultDriver", "name": "Illuminate\\Auth\\AuthManager::getDefaultDriver", "doc": "&quot;Get the default authentication driver name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\AuthManager", "fromLink": "Illuminate/Auth/AuthManager.html", "link": "Illuminate/Auth/AuthManager.html#method_setDefaultDriver", "name": "Illuminate\\Auth\\AuthManager::setDefaultDriver", "doc": "&quot;Set the default authentication driver name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/AuthServiceProvider.html", "name": "Illuminate\\Auth\\AuthServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\AuthServiceProvider", "fromLink": "Illuminate/Auth/AuthServiceProvider.html", "link": "Illuminate/Auth/AuthServiceProvider.html#method_register", "name": "Illuminate\\Auth\\AuthServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\AuthServiceProvider", "fromLink": "Illuminate/Auth/AuthServiceProvider.html", "link": "Illuminate/Auth/AuthServiceProvider.html#method_provides", "name": "Illuminate\\Auth\\AuthServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth\\Console", "fromLink": "Illuminate/Auth/Console.html", "link": "Illuminate/Auth/Console/ClearRemindersCommand.html", "name": "Illuminate\\Auth\\Console\\ClearRemindersCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\ClearRemindersCommand", "fromLink": "Illuminate/Auth/Console/ClearRemindersCommand.html", "link": "Illuminate/Auth/Console/ClearRemindersCommand.html#method_fire", "name": "Illuminate\\Auth\\Console\\ClearRemindersCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth\\Console", "fromLink": "Illuminate/Auth/Console.html", "link": "Illuminate/Auth/Console/RemindersControllerCommand.html", "name": "Illuminate\\Auth\\Console\\RemindersControllerCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\RemindersControllerCommand", "fromLink": "Illuminate/Auth/Console/RemindersControllerCommand.html", "link": "Illuminate/Auth/Console/RemindersControllerCommand.html#method___construct", "name": "Illuminate\\Auth\\Console\\RemindersControllerCommand::__construct", "doc": "&quot;Create a new reminder table command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\RemindersControllerCommand", "fromLink": "Illuminate/Auth/Console/RemindersControllerCommand.html", "link": "Illuminate/Auth/Console/RemindersControllerCommand.html#method_fire", "name": "Illuminate\\Auth\\Console\\RemindersControllerCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\RemindersControllerCommand", "fromLink": "Illuminate/Auth/Console/RemindersControllerCommand.html", "link": "Illuminate/Auth/Console/RemindersControllerCommand.html#method_getOptions", "name": "Illuminate\\Auth\\Console\\RemindersControllerCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth\\Console", "fromLink": "Illuminate/Auth/Console.html", "link": "Illuminate/Auth/Console/RemindersTableCommand.html", "name": "Illuminate\\Auth\\Console\\RemindersTableCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\RemindersTableCommand", "fromLink": "Illuminate/Auth/Console/RemindersTableCommand.html", "link": "Illuminate/Auth/Console/RemindersTableCommand.html#method___construct", "name": "Illuminate\\Auth\\Console\\RemindersTableCommand::__construct", "doc": "&quot;Create a new reminder table command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\RemindersTableCommand", "fromLink": "Illuminate/Auth/Console/RemindersTableCommand.html", "link": "Illuminate/Auth/Console/RemindersTableCommand.html#method_fire", "name": "Illuminate\\Auth\\Console\\RemindersTableCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\RemindersTableCommand", "fromLink": "Illuminate/Auth/Console/RemindersTableCommand.html", "link": "Illuminate/Auth/Console/RemindersTableCommand.html#method_createBaseMigration", "name": "Illuminate\\Auth\\Console\\RemindersTableCommand::createBaseMigration", "doc": "&quot;Create a base migration file for the reminders.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\RemindersTableCommand", "fromLink": "Illuminate/Auth/Console/RemindersTableCommand.html", "link": "Illuminate/Auth/Console/RemindersTableCommand.html#method_getMigrationStub", "name": "Illuminate\\Auth\\Console\\RemindersTableCommand::getMigrationStub", "doc": "&quot;Get the contents of the reminder migration stub.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Console\\RemindersTableCommand", "fromLink": "Illuminate/Auth/Console/RemindersTableCommand.html", "link": "Illuminate/Auth/Console/RemindersTableCommand.html#method_getTable", "name": "Illuminate\\Auth\\Console\\RemindersTableCommand::getTable", "doc": "&quot;Get the password reminder table name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/DatabaseUserProvider.html", "name": "Illuminate\\Auth\\DatabaseUserProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\DatabaseUserProvider", "fromLink": "Illuminate/Auth/DatabaseUserProvider.html", "link": "Illuminate/Auth/DatabaseUserProvider.html#method___construct", "name": "Illuminate\\Auth\\DatabaseUserProvider::__construct", "doc": "&quot;Create a new database user provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\DatabaseUserProvider", "fromLink": "Illuminate/Auth/DatabaseUserProvider.html", "link": "Illuminate/Auth/DatabaseUserProvider.html#method_retrieveById", "name": "Illuminate\\Auth\\DatabaseUserProvider::retrieveById", "doc": "&quot;Retrieve a user by their unique identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\DatabaseUserProvider", "fromLink": "Illuminate/Auth/DatabaseUserProvider.html", "link": "Illuminate/Auth/DatabaseUserProvider.html#method_retrieveByToken", "name": "Illuminate\\Auth\\DatabaseUserProvider::retrieveByToken", "doc": "&quot;Retrieve a user by by their unique identifier and \&quot;remember me\&quot; token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\DatabaseUserProvider", "fromLink": "Illuminate/Auth/DatabaseUserProvider.html", "link": "Illuminate/Auth/DatabaseUserProvider.html#method_updateRememberToken", "name": "Illuminate\\Auth\\DatabaseUserProvider::updateRememberToken", "doc": "&quot;Update the \&quot;remember me\&quot; token for the given user in storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\DatabaseUserProvider", "fromLink": "Illuminate/Auth/DatabaseUserProvider.html", "link": "Illuminate/Auth/DatabaseUserProvider.html#method_retrieveByCredentials", "name": "Illuminate\\Auth\\DatabaseUserProvider::retrieveByCredentials", "doc": "&quot;Retrieve a user by the given credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\DatabaseUserProvider", "fromLink": "Illuminate/Auth/DatabaseUserProvider.html", "link": "Illuminate/Auth/DatabaseUserProvider.html#method_validateCredentials", "name": "Illuminate\\Auth\\DatabaseUserProvider::validateCredentials", "doc": "&quot;Validate a user against the given credentials.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/EloquentUserProvider.html", "name": "Illuminate\\Auth\\EloquentUserProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\EloquentUserProvider", "fromLink": "Illuminate/Auth/EloquentUserProvider.html", "link": "Illuminate/Auth/EloquentUserProvider.html#method___construct", "name": "Illuminate\\Auth\\EloquentUserProvider::__construct", "doc": "&quot;Create a new database user provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\EloquentUserProvider", "fromLink": "Illuminate/Auth/EloquentUserProvider.html", "link": "Illuminate/Auth/EloquentUserProvider.html#method_retrieveById", "name": "Illuminate\\Auth\\EloquentUserProvider::retrieveById", "doc": "&quot;Retrieve a user by their unique identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\EloquentUserProvider", "fromLink": "Illuminate/Auth/EloquentUserProvider.html", "link": "Illuminate/Auth/EloquentUserProvider.html#method_retrieveByToken", "name": "Illuminate\\Auth\\EloquentUserProvider::retrieveByToken", "doc": "&quot;Retrieve a user by their unique identifier and \&quot;remember me\&quot; token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\EloquentUserProvider", "fromLink": "Illuminate/Auth/EloquentUserProvider.html", "link": "Illuminate/Auth/EloquentUserProvider.html#method_updateRememberToken", "name": "Illuminate\\Auth\\EloquentUserProvider::updateRememberToken", "doc": "&quot;Update the \&quot;remember me\&quot; token for the given user in storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\EloquentUserProvider", "fromLink": "Illuminate/Auth/EloquentUserProvider.html", "link": "Illuminate/Auth/EloquentUserProvider.html#method_retrieveByCredentials", "name": "Illuminate\\Auth\\EloquentUserProvider::retrieveByCredentials", "doc": "&quot;Retrieve a user by the given credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\EloquentUserProvider", "fromLink": "Illuminate/Auth/EloquentUserProvider.html", "link": "Illuminate/Auth/EloquentUserProvider.html#method_validateCredentials", "name": "Illuminate\\Auth\\EloquentUserProvider::validateCredentials", "doc": "&quot;Validate a user against the given credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\EloquentUserProvider", "fromLink": "Illuminate/Auth/EloquentUserProvider.html", "link": "Illuminate/Auth/EloquentUserProvider.html#method_createModel", "name": "Illuminate\\Auth\\EloquentUserProvider::createModel", "doc": "&quot;Create a new instance of the model.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/GenericUser.html", "name": "Illuminate\\Auth\\GenericUser", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method___construct", "name": "Illuminate\\Auth\\GenericUser::__construct", "doc": "&quot;Create a new generic User object.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method_getAuthIdentifier", "name": "Illuminate\\Auth\\GenericUser::getAuthIdentifier", "doc": "&quot;Get the unique identifier for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method_getAuthPassword", "name": "Illuminate\\Auth\\GenericUser::getAuthPassword", "doc": "&quot;Get the password for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method_getRememberToken", "name": "Illuminate\\Auth\\GenericUser::getRememberToken", "doc": "&quot;Get the token value for the \&quot;remember me\&quot; session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method_setRememberToken", "name": "Illuminate\\Auth\\GenericUser::setRememberToken", "doc": "&quot;Set the token value for the \&quot;remember me\&quot; session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method_getRememberTokenName", "name": "Illuminate\\Auth\\GenericUser::getRememberTokenName", "doc": "&quot;Get the column name for the \&quot;remember me\&quot; token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method___get", "name": "Illuminate\\Auth\\GenericUser::__get", "doc": "&quot;Dynamically access the user&#039;s attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method___set", "name": "Illuminate\\Auth\\GenericUser::__set", "doc": "&quot;Dynamically set an attribute on the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method___isset", "name": "Illuminate\\Auth\\GenericUser::__isset", "doc": "&quot;Dynamically check if a value is set on the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\GenericUser", "fromLink": "Illuminate/Auth/GenericUser.html", "link": "Illuminate/Auth/GenericUser.html#method___unset", "name": "Illuminate\\Auth\\GenericUser::__unset", "doc": "&quot;Dynamically unset a value on the user.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/Guard.html", "name": "Illuminate\\Auth\\Guard", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method___construct", "name": "Illuminate\\Auth\\Guard::__construct", "doc": "&quot;Create a new authentication guard.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_check", "name": "Illuminate\\Auth\\Guard::check", "doc": "&quot;Determine if the current user is authenticated.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_guest", "name": "Illuminate\\Auth\\Guard::guest", "doc": "&quot;Determine if the current user is a guest.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_user", "name": "Illuminate\\Auth\\Guard::user", "doc": "&quot;Get the currently authenticated user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_id", "name": "Illuminate\\Auth\\Guard::id", "doc": "&quot;Get the ID for the currently authenticated user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getUserByRecaller", "name": "Illuminate\\Auth\\Guard::getUserByRecaller", "doc": "&quot;Pull a user from the repository by its recaller ID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getRecaller", "name": "Illuminate\\Auth\\Guard::getRecaller", "doc": "&quot;Get the decrypted recaller cookie for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getRecallerId", "name": "Illuminate\\Auth\\Guard::getRecallerId", "doc": "&quot;Get the user ID from the recaller cookie.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_validRecaller", "name": "Illuminate\\Auth\\Guard::validRecaller", "doc": "&quot;Determine if the recaller cookie is in a valid format.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_once", "name": "Illuminate\\Auth\\Guard::once", "doc": "&quot;Log a user into the application without sessions or cookies.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_validate", "name": "Illuminate\\Auth\\Guard::validate", "doc": "&quot;Validate a user&#039;s credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_basic", "name": "Illuminate\\Auth\\Guard::basic", "doc": "&quot;Attempt to authenticate using HTTP Basic Auth.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_onceBasic", "name": "Illuminate\\Auth\\Guard::onceBasic", "doc": "&quot;Perform a stateless HTTP Basic login attempt.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_attemptBasic", "name": "Illuminate\\Auth\\Guard::attemptBasic", "doc": "&quot;Attempt to authenticate using basic authentication.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getBasicCredentials", "name": "Illuminate\\Auth\\Guard::getBasicCredentials", "doc": "&quot;Get the credential array for a HTTP Basic request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getBasicResponse", "name": "Illuminate\\Auth\\Guard::getBasicResponse", "doc": "&quot;Get the response for basic authentication.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_attempt", "name": "Illuminate\\Auth\\Guard::attempt", "doc": "&quot;Attempt to authenticate a user using the given credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_hasValidCredentials", "name": "Illuminate\\Auth\\Guard::hasValidCredentials", "doc": "&quot;Determine if the user matches the credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_fireAttemptEvent", "name": "Illuminate\\Auth\\Guard::fireAttemptEvent", "doc": "&quot;Fire the attempt event with the arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_attempting", "name": "Illuminate\\Auth\\Guard::attempting", "doc": "&quot;Register an authentication attempt event listener.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_login", "name": "Illuminate\\Auth\\Guard::login", "doc": "&quot;Log a user into the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_updateSession", "name": "Illuminate\\Auth\\Guard::updateSession", "doc": "&quot;Update the session with the given ID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_loginUsingId", "name": "Illuminate\\Auth\\Guard::loginUsingId", "doc": "&quot;Log the given user ID into the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_onceUsingId", "name": "Illuminate\\Auth\\Guard::onceUsingId", "doc": "&quot;Log the given user ID into the application without sessions or cookies.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_queueRecallerCookie", "name": "Illuminate\\Auth\\Guard::queueRecallerCookie", "doc": "&quot;Queue the recaller cookie into the cookie jar.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_createRecaller", "name": "Illuminate\\Auth\\Guard::createRecaller", "doc": "&quot;Create a remember me cookie for a given ID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_logout", "name": "Illuminate\\Auth\\Guard::logout", "doc": "&quot;Log the user out of the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_clearUserDataFromStorage", "name": "Illuminate\\Auth\\Guard::clearUserDataFromStorage", "doc": "&quot;Remove the user data from the session and cookies.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_refreshRememberToken", "name": "Illuminate\\Auth\\Guard::refreshRememberToken", "doc": "&quot;Refresh the remember token for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_createRememberTokenIfDoesntExist", "name": "Illuminate\\Auth\\Guard::createRememberTokenIfDoesntExist", "doc": "&quot;Create a new remember token for the user if one doesn&#039;t already exist.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getCookieJar", "name": "Illuminate\\Auth\\Guard::getCookieJar", "doc": "&quot;Get the cookie creator instance used by the guard.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_setCookieJar", "name": "Illuminate\\Auth\\Guard::setCookieJar", "doc": "&quot;Set the cookie creator instance used by the guard.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getDispatcher", "name": "Illuminate\\Auth\\Guard::getDispatcher", "doc": "&quot;Get the event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_setDispatcher", "name": "Illuminate\\Auth\\Guard::setDispatcher", "doc": "&quot;Set the event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getSession", "name": "Illuminate\\Auth\\Guard::getSession", "doc": "&quot;Get the session store used by the guard.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getProvider", "name": "Illuminate\\Auth\\Guard::getProvider", "doc": "&quot;Get the user provider used by the guard.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_setProvider", "name": "Illuminate\\Auth\\Guard::setProvider", "doc": "&quot;Set the user provider used by the guard.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getUser", "name": "Illuminate\\Auth\\Guard::getUser", "doc": "&quot;Return the currently cached user of the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_setUser", "name": "Illuminate\\Auth\\Guard::setUser", "doc": "&quot;Set the current user of the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getRequest", "name": "Illuminate\\Auth\\Guard::getRequest", "doc": "&quot;Get the current request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_setRequest", "name": "Illuminate\\Auth\\Guard::setRequest", "doc": "&quot;Set the current request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getLastAttempted", "name": "Illuminate\\Auth\\Guard::getLastAttempted", "doc": "&quot;Get the last user we attempted to authenticate.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getName", "name": "Illuminate\\Auth\\Guard::getName", "doc": "&quot;Get a unique identifier for the auth session value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_getRecallerName", "name": "Illuminate\\Auth\\Guard::getRecallerName", "doc": "&quot;Get the name of the cookie used to store the \&quot;recaller\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Guard", "fromLink": "Illuminate/Auth/Guard.html", "link": "Illuminate/Auth/Guard.html#method_viaRemember", "name": "Illuminate\\Auth\\Guard::viaRemember", "doc": "&quot;Determine if the user was authenticated via \&quot;remember me\&quot; cookie.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth\\Reminders", "fromLink": "Illuminate/Auth/Reminders.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method___construct", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::__construct", "doc": "&quot;Create a new reminder repository instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_create", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::create", "doc": "&quot;Create a new reminder record and token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_deleteExisting", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::deleteExisting", "doc": "&quot;Delete all existing reset tokens from the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_getPayload", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::getPayload", "doc": "&quot;Build the record payload for the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_exists", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::exists", "doc": "&quot;Determine if a reminder record exists and is valid.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_reminderExpired", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::reminderExpired", "doc": "&quot;Determine if the reminder has expired.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_getCurrentTime", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::getCurrentTime", "doc": "&quot;Get the current UNIX timestamp.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_delete", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::delete", "doc": "&quot;Delete a reminder record by token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_deleteExpired", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::deleteExpired", "doc": "&quot;Delete expired reminders.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_createNewToken", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::createNewToken", "doc": "&quot;Create a new token for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_getTable", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::getTable", "doc": "&quot;Begin a new database query against the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository", "fromLink": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html", "link": "Illuminate/Auth/Reminders/DatabaseReminderRepository.html#method_getConnection", "name": "Illuminate\\Auth\\Reminders\\DatabaseReminderRepository::getConnection", "doc": "&quot;Get the database connection instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth\\Reminders", "fromLink": "Illuminate/Auth/Reminders.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method___construct", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::__construct", "doc": "&quot;Create a new password broker instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_remind", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::remind", "doc": "&quot;Send a password reminder to a user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_sendReminder", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::sendReminder", "doc": "&quot;Send the password reminder e-mail.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_reset", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::reset", "doc": "&quot;Reset the password for the given token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_validateReset", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::validateReset", "doc": "&quot;Validate a password reset for the given credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_validator", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::validator", "doc": "&quot;Set a custom password validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_validNewPasswords", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::validNewPasswords", "doc": "&quot;Determine if the passwords match for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_validatePasswordWithDefaults", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::validatePasswordWithDefaults", "doc": "&quot;Determine if the passwords are valid for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_getUser", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::getUser", "doc": "&quot;Get the user for the given credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\PasswordBroker", "fromLink": "Illuminate/Auth/Reminders/PasswordBroker.html", "link": "Illuminate/Auth/Reminders/PasswordBroker.html#method_getRepository", "name": "Illuminate\\Auth\\Reminders\\PasswordBroker::getRepository", "doc": "&quot;Get the password reminder repository implementation.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth\\Reminders", "fromLink": "Illuminate/Auth/Reminders.html", "link": "Illuminate/Auth/Reminders/RemindableInterface.html", "name": "Illuminate\\Auth\\Reminders\\RemindableInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\RemindableInterface", "fromLink": "Illuminate/Auth/Reminders/RemindableInterface.html", "link": "Illuminate/Auth/Reminders/RemindableInterface.html#method_getReminderEmail", "name": "Illuminate\\Auth\\Reminders\\RemindableInterface::getReminderEmail", "doc": "&quot;Get the e-mail address where password reminders are sent.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Auth\\Reminders", "fromLink": "Illuminate/Auth/Reminders.html", "link": "Illuminate/Auth/Reminders/RemindableTrait.html", "name": "Illuminate\\Auth\\Reminders\\RemindableTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\RemindableTrait", "fromLink": "Illuminate/Auth/Reminders/RemindableTrait.html", "link": "Illuminate/Auth/Reminders/RemindableTrait.html#method_getReminderEmail", "name": "Illuminate\\Auth\\Reminders\\RemindableTrait::getReminderEmail", "doc": "&quot;Get the e-mail address where password reminders are sent.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth\\Reminders", "fromLink": "Illuminate/Auth/Reminders.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "fromLink": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html#method_create", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface::create", "doc": "&quot;Create a new reminder record and token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "fromLink": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html#method_exists", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface::exists", "doc": "&quot;Determine if a reminder record exists and is valid.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "fromLink": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html#method_delete", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface::delete", "doc": "&quot;Delete a reminder record by token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface", "fromLink": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html", "link": "Illuminate/Auth/Reminders/ReminderRepositoryInterface.html#method_deleteExpired", "name": "Illuminate\\Auth\\Reminders\\ReminderRepositoryInterface::deleteExpired", "doc": "&quot;Delete expired reminders.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth\\Reminders", "fromLink": "Illuminate/Auth/Reminders.html", "link": "Illuminate/Auth/Reminders/ReminderServiceProvider.html", "name": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider", "fromLink": "Illuminate/Auth/Reminders/ReminderServiceProvider.html", "link": "Illuminate/Auth/Reminders/ReminderServiceProvider.html#method_register", "name": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider", "fromLink": "Illuminate/Auth/Reminders/ReminderServiceProvider.html", "link": "Illuminate/Auth/Reminders/ReminderServiceProvider.html#method_registerPasswordBroker", "name": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider::registerPasswordBroker", "doc": "&quot;Register the password broker instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider", "fromLink": "Illuminate/Auth/Reminders/ReminderServiceProvider.html", "link": "Illuminate/Auth/Reminders/ReminderServiceProvider.html#method_registerReminderRepository", "name": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider::registerReminderRepository", "doc": "&quot;Register the reminder repository implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider", "fromLink": "Illuminate/Auth/Reminders/ReminderServiceProvider.html", "link": "Illuminate/Auth/Reminders/ReminderServiceProvider.html#method_registerCommands", "name": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider::registerCommands", "doc": "&quot;Register the auth related console commands.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider", "fromLink": "Illuminate/Auth/Reminders/ReminderServiceProvider.html", "link": "Illuminate/Auth/Reminders/ReminderServiceProvider.html#method_provides", "name": "Illuminate\\Auth\\Reminders\\ReminderServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/UserInterface.html", "name": "Illuminate\\Auth\\UserInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_getAuthIdentifier", "name": "Illuminate\\Auth\\UserInterface::getAuthIdentifier", "doc": "&quot;Get the unique identifier for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_getAuthPassword", "name": "Illuminate\\Auth\\UserInterface::getAuthPassword", "doc": "&quot;Get the password for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_getRememberToken", "name": "Illuminate\\Auth\\UserInterface::getRememberToken", "doc": "&quot;Get the token value for the \&quot;remember me\&quot; session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_setRememberToken", "name": "Illuminate\\Auth\\UserInterface::setRememberToken", "doc": "&quot;Set the token value for the \&quot;remember me\&quot; session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserInterface", "fromLink": "Illuminate/Auth/UserInterface.html", "link": "Illuminate/Auth/UserInterface.html#method_getRememberTokenName", "name": "Illuminate\\Auth\\UserInterface::getRememberTokenName", "doc": "&quot;Get the column name for the \&quot;remember me\&quot; token.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/UserProviderInterface.html", "name": "Illuminate\\Auth\\UserProviderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_retrieveById", "name": "Illuminate\\Auth\\UserProviderInterface::retrieveById", "doc": "&quot;Retrieve a user by their unique identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_retrieveByToken", "name": "Illuminate\\Auth\\UserProviderInterface::retrieveByToken", "doc": "&quot;Retrieve a user by by their unique identifier and \&quot;remember me\&quot; token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_updateRememberToken", "name": "Illuminate\\Auth\\UserProviderInterface::updateRememberToken", "doc": "&quot;Update the \&quot;remember me\&quot; token for the given user in storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_retrieveByCredentials", "name": "Illuminate\\Auth\\UserProviderInterface::retrieveByCredentials", "doc": "&quot;Retrieve a user by the given credentials.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserProviderInterface", "fromLink": "Illuminate/Auth/UserProviderInterface.html", "link": "Illuminate/Auth/UserProviderInterface.html#method_validateCredentials", "name": "Illuminate\\Auth\\UserProviderInterface::validateCredentials", "doc": "&quot;Validate a user against the given credentials.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Auth", "fromLink": "Illuminate/Auth.html", "link": "Illuminate/Auth/UserTrait.html", "name": "Illuminate\\Auth\\UserTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Auth\\UserTrait", "fromLink": "Illuminate/Auth/UserTrait.html", "link": "Illuminate/Auth/UserTrait.html#method_getAuthIdentifier", "name": "Illuminate\\Auth\\UserTrait::getAuthIdentifier", "doc": "&quot;Get the unique identifier for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserTrait", "fromLink": "Illuminate/Auth/UserTrait.html", "link": "Illuminate/Auth/UserTrait.html#method_getAuthPassword", "name": "Illuminate\\Auth\\UserTrait::getAuthPassword", "doc": "&quot;Get the password for the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserTrait", "fromLink": "Illuminate/Auth/UserTrait.html", "link": "Illuminate/Auth/UserTrait.html#method_getRememberToken", "name": "Illuminate\\Auth\\UserTrait::getRememberToken", "doc": "&quot;Get the token value for the \&quot;remember me\&quot; session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserTrait", "fromLink": "Illuminate/Auth/UserTrait.html", "link": "Illuminate/Auth/UserTrait.html#method_setRememberToken", "name": "Illuminate\\Auth\\UserTrait::setRememberToken", "doc": "&quot;Set the token value for the \&quot;remember me\&quot; session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Auth\\UserTrait", "fromLink": "Illuminate/Auth/UserTrait.html", "link": "Illuminate/Auth/UserTrait.html#method_getRememberTokenName", "name": "Illuminate\\Auth\\UserTrait::getRememberTokenName", "doc": "&quot;Get the column name for the \&quot;remember me\&quot; token.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/ApcStore.html", "name": "Illuminate\\Cache\\ApcStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method___construct", "name": "Illuminate\\Cache\\ApcStore::__construct", "doc": "&quot;Create a new APC store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method_get", "name": "Illuminate\\Cache\\ApcStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method_put", "name": "Illuminate\\Cache\\ApcStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method_increment", "name": "Illuminate\\Cache\\ApcStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method_decrement", "name": "Illuminate\\Cache\\ApcStore::decrement", "doc": "&quot;Decrement the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method_forever", "name": "Illuminate\\Cache\\ApcStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method_forget", "name": "Illuminate\\Cache\\ApcStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method_flush", "name": "Illuminate\\Cache\\ApcStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcStore", "fromLink": "Illuminate/Cache/ApcStore.html", "link": "Illuminate/Cache/ApcStore.html#method_getPrefix", "name": "Illuminate\\Cache\\ApcStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/ApcWrapper.html", "name": "Illuminate\\Cache\\ApcWrapper", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\ApcWrapper", "fromLink": "Illuminate/Cache/ApcWrapper.html", "link": "Illuminate/Cache/ApcWrapper.html#method___construct", "name": "Illuminate\\Cache\\ApcWrapper::__construct", "doc": "&quot;Create a new APC wrapper instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcWrapper", "fromLink": "Illuminate/Cache/ApcWrapper.html", "link": "Illuminate/Cache/ApcWrapper.html#method_get", "name": "Illuminate\\Cache\\ApcWrapper::get", "doc": "&quot;Get an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcWrapper", "fromLink": "Illuminate/Cache/ApcWrapper.html", "link": "Illuminate/Cache/ApcWrapper.html#method_put", "name": "Illuminate\\Cache\\ApcWrapper::put", "doc": "&quot;Store an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcWrapper", "fromLink": "Illuminate/Cache/ApcWrapper.html", "link": "Illuminate/Cache/ApcWrapper.html#method_increment", "name": "Illuminate\\Cache\\ApcWrapper::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcWrapper", "fromLink": "Illuminate/Cache/ApcWrapper.html", "link": "Illuminate/Cache/ApcWrapper.html#method_decrement", "name": "Illuminate\\Cache\\ApcWrapper::decrement", "doc": "&quot;Decrement the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcWrapper", "fromLink": "Illuminate/Cache/ApcWrapper.html", "link": "Illuminate/Cache/ApcWrapper.html#method_delete", "name": "Illuminate\\Cache\\ApcWrapper::delete", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ApcWrapper", "fromLink": "Illuminate/Cache/ApcWrapper.html", "link": "Illuminate/Cache/ApcWrapper.html#method_flush", "name": "Illuminate\\Cache\\ApcWrapper::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/ArrayStore.html", "name": "Illuminate\\Cache\\ArrayStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\ArrayStore", "fromLink": "Illuminate/Cache/ArrayStore.html", "link": "Illuminate/Cache/ArrayStore.html#method_get", "name": "Illuminate\\Cache\\ArrayStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ArrayStore", "fromLink": "Illuminate/Cache/ArrayStore.html", "link": "Illuminate/Cache/ArrayStore.html#method_put", "name": "Illuminate\\Cache\\ArrayStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ArrayStore", "fromLink": "Illuminate/Cache/ArrayStore.html", "link": "Illuminate/Cache/ArrayStore.html#method_increment", "name": "Illuminate\\Cache\\ArrayStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ArrayStore", "fromLink": "Illuminate/Cache/ArrayStore.html", "link": "Illuminate/Cache/ArrayStore.html#method_decrement", "name": "Illuminate\\Cache\\ArrayStore::decrement", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ArrayStore", "fromLink": "Illuminate/Cache/ArrayStore.html", "link": "Illuminate/Cache/ArrayStore.html#method_forever", "name": "Illuminate\\Cache\\ArrayStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ArrayStore", "fromLink": "Illuminate/Cache/ArrayStore.html", "link": "Illuminate/Cache/ArrayStore.html#method_forget", "name": "Illuminate\\Cache\\ArrayStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ArrayStore", "fromLink": "Illuminate/Cache/ArrayStore.html", "link": "Illuminate/Cache/ArrayStore.html#method_flush", "name": "Illuminate\\Cache\\ArrayStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\ArrayStore", "fromLink": "Illuminate/Cache/ArrayStore.html", "link": "Illuminate/Cache/ArrayStore.html#method_getPrefix", "name": "Illuminate\\Cache\\ArrayStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/CacheManager.html", "name": "Illuminate\\Cache\\CacheManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createApcDriver", "name": "Illuminate\\Cache\\CacheManager::createApcDriver", "doc": "&quot;Create an instance of the APC cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createArrayDriver", "name": "Illuminate\\Cache\\CacheManager::createArrayDriver", "doc": "&quot;Create an instance of the array cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createFileDriver", "name": "Illuminate\\Cache\\CacheManager::createFileDriver", "doc": "&quot;Create an instance of the file cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createMemcachedDriver", "name": "Illuminate\\Cache\\CacheManager::createMemcachedDriver", "doc": "&quot;Create an instance of the Memcached cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createNullDriver", "name": "Illuminate\\Cache\\CacheManager::createNullDriver", "doc": "&quot;Create an instance of the Null cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createWincacheDriver", "name": "Illuminate\\Cache\\CacheManager::createWincacheDriver", "doc": "&quot;Create an instance of the WinCache cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createXcacheDriver", "name": "Illuminate\\Cache\\CacheManager::createXcacheDriver", "doc": "&quot;Create an instance of the XCache cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createRedisDriver", "name": "Illuminate\\Cache\\CacheManager::createRedisDriver", "doc": "&quot;Create an instance of the Redis cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_createDatabaseDriver", "name": "Illuminate\\Cache\\CacheManager::createDatabaseDriver", "doc": "&quot;Create an instance of the database cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_getDatabaseConnection", "name": "Illuminate\\Cache\\CacheManager::getDatabaseConnection", "doc": "&quot;Get the database connection for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_getPrefix", "name": "Illuminate\\Cache\\CacheManager::getPrefix", "doc": "&quot;Get the cache \&quot;prefix\&quot; value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_setPrefix", "name": "Illuminate\\Cache\\CacheManager::setPrefix", "doc": "&quot;Set the cache \&quot;prefix\&quot; value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_repository", "name": "Illuminate\\Cache\\CacheManager::repository", "doc": "&quot;Create a new cache repository with the given implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_getDefaultDriver", "name": "Illuminate\\Cache\\CacheManager::getDefaultDriver", "doc": "&quot;Get the default cache driver name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheManager", "fromLink": "Illuminate/Cache/CacheManager.html", "link": "Illuminate/Cache/CacheManager.html#method_setDefaultDriver", "name": "Illuminate\\Cache\\CacheManager::setDefaultDriver", "doc": "&quot;Set the default cache driver name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/CacheServiceProvider.html", "name": "Illuminate\\Cache\\CacheServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\CacheServiceProvider", "fromLink": "Illuminate/Cache/CacheServiceProvider.html", "link": "Illuminate/Cache/CacheServiceProvider.html#method_register", "name": "Illuminate\\Cache\\CacheServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheServiceProvider", "fromLink": "Illuminate/Cache/CacheServiceProvider.html", "link": "Illuminate/Cache/CacheServiceProvider.html#method_registerCommands", "name": "Illuminate\\Cache\\CacheServiceProvider::registerCommands", "doc": "&quot;Register the cache related console commands.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\CacheServiceProvider", "fromLink": "Illuminate/Cache/CacheServiceProvider.html", "link": "Illuminate/Cache/CacheServiceProvider.html#method_provides", "name": "Illuminate\\Cache\\CacheServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache\\Console", "fromLink": "Illuminate/Cache/Console.html", "link": "Illuminate/Cache/Console/CacheTableCommand.html", "name": "Illuminate\\Cache\\Console\\CacheTableCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\Console\\CacheTableCommand", "fromLink": "Illuminate/Cache/Console/CacheTableCommand.html", "link": "Illuminate/Cache/Console/CacheTableCommand.html#method___construct", "name": "Illuminate\\Cache\\Console\\CacheTableCommand::__construct", "doc": "&quot;Create a new session table command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Console\\CacheTableCommand", "fromLink": "Illuminate/Cache/Console/CacheTableCommand.html", "link": "Illuminate/Cache/Console/CacheTableCommand.html#method_fire", "name": "Illuminate\\Cache\\Console\\CacheTableCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Console\\CacheTableCommand", "fromLink": "Illuminate/Cache/Console/CacheTableCommand.html", "link": "Illuminate/Cache/Console/CacheTableCommand.html#method_createBaseMigration", "name": "Illuminate\\Cache\\Console\\CacheTableCommand::createBaseMigration", "doc": "&quot;Create a base migration file for the table.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache\\Console", "fromLink": "Illuminate/Cache/Console.html", "link": "Illuminate/Cache/Console/ClearCommand.html", "name": "Illuminate\\Cache\\Console\\ClearCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\Console\\ClearCommand", "fromLink": "Illuminate/Cache/Console/ClearCommand.html", "link": "Illuminate/Cache/Console/ClearCommand.html#method___construct", "name": "Illuminate\\Cache\\Console\\ClearCommand::__construct", "doc": "&quot;Create a new cache clear command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Console\\ClearCommand", "fromLink": "Illuminate/Cache/Console/ClearCommand.html", "link": "Illuminate/Cache/Console/ClearCommand.html#method_fire", "name": "Illuminate\\Cache\\Console\\ClearCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/DatabaseStore.html", "name": "Illuminate\\Cache\\DatabaseStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method___construct", "name": "Illuminate\\Cache\\DatabaseStore::__construct", "doc": "&quot;Create a new database store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_get", "name": "Illuminate\\Cache\\DatabaseStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_put", "name": "Illuminate\\Cache\\DatabaseStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_increment", "name": "Illuminate\\Cache\\DatabaseStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_decrement", "name": "Illuminate\\Cache\\DatabaseStore::decrement", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_getTime", "name": "Illuminate\\Cache\\DatabaseStore::getTime", "doc": "&quot;Get the current system time.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_forever", "name": "Illuminate\\Cache\\DatabaseStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_forget", "name": "Illuminate\\Cache\\DatabaseStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_flush", "name": "Illuminate\\Cache\\DatabaseStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_table", "name": "Illuminate\\Cache\\DatabaseStore::table", "doc": "&quot;Get a query builder for the cache table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_getConnection", "name": "Illuminate\\Cache\\DatabaseStore::getConnection", "doc": "&quot;Get the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_getEncrypter", "name": "Illuminate\\Cache\\DatabaseStore::getEncrypter", "doc": "&quot;Get the encrypter instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\DatabaseStore", "fromLink": "Illuminate/Cache/DatabaseStore.html", "link": "Illuminate/Cache/DatabaseStore.html#method_getPrefix", "name": "Illuminate\\Cache\\DatabaseStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/FileStore.html", "name": "Illuminate\\Cache\\FileStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method___construct", "name": "Illuminate\\Cache\\FileStore::__construct", "doc": "&quot;Create a new file cache store instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_get", "name": "Illuminate\\Cache\\FileStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_getPayload", "name": "Illuminate\\Cache\\FileStore::getPayload", "doc": "&quot;Retrieve an item and expiry time from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_put", "name": "Illuminate\\Cache\\FileStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_createCacheDirectory", "name": "Illuminate\\Cache\\FileStore::createCacheDirectory", "doc": "&quot;Create the file cache directory if necessary.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_increment", "name": "Illuminate\\Cache\\FileStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_decrement", "name": "Illuminate\\Cache\\FileStore::decrement", "doc": "&quot;Decrement the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_forever", "name": "Illuminate\\Cache\\FileStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_forget", "name": "Illuminate\\Cache\\FileStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_flush", "name": "Illuminate\\Cache\\FileStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_path", "name": "Illuminate\\Cache\\FileStore::path", "doc": "&quot;Get the full path for the given cache key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_expiration", "name": "Illuminate\\Cache\\FileStore::expiration", "doc": "&quot;Get the expiration time based on the given minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_getFilesystem", "name": "Illuminate\\Cache\\FileStore::getFilesystem", "doc": "&quot;Get the Filesystem instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_getDirectory", "name": "Illuminate\\Cache\\FileStore::getDirectory", "doc": "&quot;Get the working directory of the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\FileStore", "fromLink": "Illuminate/Cache/FileStore.html", "link": "Illuminate/Cache/FileStore.html#method_getPrefix", "name": "Illuminate\\Cache\\FileStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/MemcachedConnector.html", "name": "Illuminate\\Cache\\MemcachedConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedConnector", "fromLink": "Illuminate/Cache/MemcachedConnector.html", "link": "Illuminate/Cache/MemcachedConnector.html#method_connect", "name": "Illuminate\\Cache\\MemcachedConnector::connect", "doc": "&quot;Create a new Memcached connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedConnector", "fromLink": "Illuminate/Cache/MemcachedConnector.html", "link": "Illuminate/Cache/MemcachedConnector.html#method_getMemcached", "name": "Illuminate\\Cache\\MemcachedConnector::getMemcached", "doc": "&quot;Get a new Memcached instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/MemcachedStore.html", "name": "Illuminate\\Cache\\MemcachedStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method___construct", "name": "Illuminate\\Cache\\MemcachedStore::__construct", "doc": "&quot;Create a new Memcached store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_get", "name": "Illuminate\\Cache\\MemcachedStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_put", "name": "Illuminate\\Cache\\MemcachedStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_increment", "name": "Illuminate\\Cache\\MemcachedStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_decrement", "name": "Illuminate\\Cache\\MemcachedStore::decrement", "doc": "&quot;Decrement the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_forever", "name": "Illuminate\\Cache\\MemcachedStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_forget", "name": "Illuminate\\Cache\\MemcachedStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_flush", "name": "Illuminate\\Cache\\MemcachedStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_getMemcached", "name": "Illuminate\\Cache\\MemcachedStore::getMemcached", "doc": "&quot;Get the underlying Memcached connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\MemcachedStore", "fromLink": "Illuminate/Cache/MemcachedStore.html", "link": "Illuminate/Cache/MemcachedStore.html#method_getPrefix", "name": "Illuminate\\Cache\\MemcachedStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/NullStore.html", "name": "Illuminate\\Cache\\NullStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\NullStore", "fromLink": "Illuminate/Cache/NullStore.html", "link": "Illuminate/Cache/NullStore.html#method_get", "name": "Illuminate\\Cache\\NullStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\NullStore", "fromLink": "Illuminate/Cache/NullStore.html", "link": "Illuminate/Cache/NullStore.html#method_put", "name": "Illuminate\\Cache\\NullStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\NullStore", "fromLink": "Illuminate/Cache/NullStore.html", "link": "Illuminate/Cache/NullStore.html#method_increment", "name": "Illuminate\\Cache\\NullStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\NullStore", "fromLink": "Illuminate/Cache/NullStore.html", "link": "Illuminate/Cache/NullStore.html#method_decrement", "name": "Illuminate\\Cache\\NullStore::decrement", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\NullStore", "fromLink": "Illuminate/Cache/NullStore.html", "link": "Illuminate/Cache/NullStore.html#method_forever", "name": "Illuminate\\Cache\\NullStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\NullStore", "fromLink": "Illuminate/Cache/NullStore.html", "link": "Illuminate/Cache/NullStore.html#method_forget", "name": "Illuminate\\Cache\\NullStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\NullStore", "fromLink": "Illuminate/Cache/NullStore.html", "link": "Illuminate/Cache/NullStore.html#method_flush", "name": "Illuminate\\Cache\\NullStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\NullStore", "fromLink": "Illuminate/Cache/NullStore.html", "link": "Illuminate/Cache/NullStore.html#method_getPrefix", "name": "Illuminate\\Cache\\NullStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/RedisStore.html", "name": "Illuminate\\Cache\\RedisStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method___construct", "name": "Illuminate\\Cache\\RedisStore::__construct", "doc": "&quot;Create a new Redis store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_get", "name": "Illuminate\\Cache\\RedisStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_put", "name": "Illuminate\\Cache\\RedisStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_increment", "name": "Illuminate\\Cache\\RedisStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_decrement", "name": "Illuminate\\Cache\\RedisStore::decrement", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_forever", "name": "Illuminate\\Cache\\RedisStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_forget", "name": "Illuminate\\Cache\\RedisStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_flush", "name": "Illuminate\\Cache\\RedisStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_tags", "name": "Illuminate\\Cache\\RedisStore::tags", "doc": "&quot;Begin executing a new tags operation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_connection", "name": "Illuminate\\Cache\\RedisStore::connection", "doc": "&quot;Get the Redis connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_setConnection", "name": "Illuminate\\Cache\\RedisStore::setConnection", "doc": "&quot;Set the connection name to be used.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_getRedis", "name": "Illuminate\\Cache\\RedisStore::getRedis", "doc": "&quot;Get the Redis database instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisStore", "fromLink": "Illuminate/Cache/RedisStore.html", "link": "Illuminate/Cache/RedisStore.html#method_getPrefix", "name": "Illuminate\\Cache\\RedisStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/RedisTaggedCache.html", "name": "Illuminate\\Cache\\RedisTaggedCache", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\RedisTaggedCache", "fromLink": "Illuminate/Cache/RedisTaggedCache.html", "link": "Illuminate/Cache/RedisTaggedCache.html#method_forever", "name": "Illuminate\\Cache\\RedisTaggedCache::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisTaggedCache", "fromLink": "Illuminate/Cache/RedisTaggedCache.html", "link": "Illuminate/Cache/RedisTaggedCache.html#method_flush", "name": "Illuminate\\Cache\\RedisTaggedCache::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisTaggedCache", "fromLink": "Illuminate/Cache/RedisTaggedCache.html", "link": "Illuminate/Cache/RedisTaggedCache.html#method_pushForeverKeys", "name": "Illuminate\\Cache\\RedisTaggedCache::pushForeverKeys", "doc": "&quot;Store a copy of the full key for each namespace segment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisTaggedCache", "fromLink": "Illuminate/Cache/RedisTaggedCache.html", "link": "Illuminate/Cache/RedisTaggedCache.html#method_deleteForeverKeys", "name": "Illuminate\\Cache\\RedisTaggedCache::deleteForeverKeys", "doc": "&quot;Delete all of the items that were stored forever.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisTaggedCache", "fromLink": "Illuminate/Cache/RedisTaggedCache.html", "link": "Illuminate/Cache/RedisTaggedCache.html#method_deleteForeverValues", "name": "Illuminate\\Cache\\RedisTaggedCache::deleteForeverValues", "doc": "&quot;Delete all of the keys that have been stored forever.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\RedisTaggedCache", "fromLink": "Illuminate/Cache/RedisTaggedCache.html", "link": "Illuminate/Cache/RedisTaggedCache.html#method_foreverKey", "name": "Illuminate\\Cache\\RedisTaggedCache::foreverKey", "doc": "&quot;Get the forever reference key for the segment.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/Repository.html", "name": "Illuminate\\Cache\\Repository", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method___construct", "name": "Illuminate\\Cache\\Repository::__construct", "doc": "&quot;Create a new cache repository instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_has", "name": "Illuminate\\Cache\\Repository::has", "doc": "&quot;Determine if an item exists in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_get", "name": "Illuminate\\Cache\\Repository::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_pull", "name": "Illuminate\\Cache\\Repository::pull", "doc": "&quot;Retrieve an item from the cache and delete it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_put", "name": "Illuminate\\Cache\\Repository::put", "doc": "&quot;Store an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_add", "name": "Illuminate\\Cache\\Repository::add", "doc": "&quot;Store an item in the cache if the key does not exist.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_remember", "name": "Illuminate\\Cache\\Repository::remember", "doc": "&quot;Get an item from the cache, or store the default value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_sear", "name": "Illuminate\\Cache\\Repository::sear", "doc": "&quot;Get an item from the cache, or store the default value forever.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_rememberForever", "name": "Illuminate\\Cache\\Repository::rememberForever", "doc": "&quot;Get an item from the cache, or store the default value forever.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_getDefaultCacheTime", "name": "Illuminate\\Cache\\Repository::getDefaultCacheTime", "doc": "&quot;Get the default cache time.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_setDefaultCacheTime", "name": "Illuminate\\Cache\\Repository::setDefaultCacheTime", "doc": "&quot;Set the default cache time in minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_getStore", "name": "Illuminate\\Cache\\Repository::getStore", "doc": "&quot;Get the cache store implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_offsetExists", "name": "Illuminate\\Cache\\Repository::offsetExists", "doc": "&quot;Determine if a cached value exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_offsetGet", "name": "Illuminate\\Cache\\Repository::offsetGet", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_offsetSet", "name": "Illuminate\\Cache\\Repository::offsetSet", "doc": "&quot;Store an item in the cache for the default time.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_offsetUnset", "name": "Illuminate\\Cache\\Repository::offsetUnset", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method_getMinutes", "name": "Illuminate\\Cache\\Repository::getMinutes", "doc": "&quot;Calculate the number of minutes with the given duration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\Repository", "fromLink": "Illuminate/Cache/Repository.html", "link": "Illuminate/Cache/Repository.html#method___call", "name": "Illuminate\\Cache\\Repository::__call", "doc": "&quot;Handle dynamic calls into macros or pass missing methods to the store.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/StoreInterface.html", "name": "Illuminate\\Cache\\StoreInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_get", "name": "Illuminate\\Cache\\StoreInterface::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_put", "name": "Illuminate\\Cache\\StoreInterface::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_increment", "name": "Illuminate\\Cache\\StoreInterface::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_decrement", "name": "Illuminate\\Cache\\StoreInterface::decrement", "doc": "&quot;Decrement the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_forever", "name": "Illuminate\\Cache\\StoreInterface::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_forget", "name": "Illuminate\\Cache\\StoreInterface::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_flush", "name": "Illuminate\\Cache\\StoreInterface::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\StoreInterface", "fromLink": "Illuminate/Cache/StoreInterface.html", "link": "Illuminate/Cache/StoreInterface.html#method_getPrefix", "name": "Illuminate\\Cache\\StoreInterface::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/TagSet.html", "name": "Illuminate\\Cache\\TagSet", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\TagSet", "fromLink": "Illuminate/Cache/TagSet.html", "link": "Illuminate/Cache/TagSet.html#method___construct", "name": "Illuminate\\Cache\\TagSet::__construct", "doc": "&quot;Create a new TagSet instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TagSet", "fromLink": "Illuminate/Cache/TagSet.html", "link": "Illuminate/Cache/TagSet.html#method_reset", "name": "Illuminate\\Cache\\TagSet::reset", "doc": "&quot;Reset all tags in the set.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TagSet", "fromLink": "Illuminate/Cache/TagSet.html", "link": "Illuminate/Cache/TagSet.html#method_tagId", "name": "Illuminate\\Cache\\TagSet::tagId", "doc": "&quot;Get the unique tag identifier for a given tag.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TagSet", "fromLink": "Illuminate/Cache/TagSet.html", "link": "Illuminate/Cache/TagSet.html#method_tagIds", "name": "Illuminate\\Cache\\TagSet::tagIds", "doc": "&quot;Get an array of tag identifiers for all of the tags in the set.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TagSet", "fromLink": "Illuminate/Cache/TagSet.html", "link": "Illuminate/Cache/TagSet.html#method_getNamespace", "name": "Illuminate\\Cache\\TagSet::getNamespace", "doc": "&quot;Get a unique namespace that changes when any of the tags are flushed.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TagSet", "fromLink": "Illuminate/Cache/TagSet.html", "link": "Illuminate/Cache/TagSet.html#method_resetTag", "name": "Illuminate\\Cache\\TagSet::resetTag", "doc": "&quot;Reset the tag and return the new tag identifier&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TagSet", "fromLink": "Illuminate/Cache/TagSet.html", "link": "Illuminate/Cache/TagSet.html#method_tagKey", "name": "Illuminate\\Cache\\TagSet::tagKey", "doc": "&quot;Get the tag identifier key for a given tag.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/TaggableStore.html", "name": "Illuminate\\Cache\\TaggableStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\TaggableStore", "fromLink": "Illuminate/Cache/TaggableStore.html", "link": "Illuminate/Cache/TaggableStore.html#method_section", "name": "Illuminate\\Cache\\TaggableStore::section", "doc": "&quot;Begin executing a new tags operation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggableStore", "fromLink": "Illuminate/Cache/TaggableStore.html", "link": "Illuminate/Cache/TaggableStore.html#method_tags", "name": "Illuminate\\Cache\\TaggableStore::tags", "doc": "&quot;Begin executing a new tags operation.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/TaggedCache.html", "name": "Illuminate\\Cache\\TaggedCache", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method___construct", "name": "Illuminate\\Cache\\TaggedCache::__construct", "doc": "&quot;Create a new tagged cache instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_has", "name": "Illuminate\\Cache\\TaggedCache::has", "doc": "&quot;Determine if an item exists in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_get", "name": "Illuminate\\Cache\\TaggedCache::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_put", "name": "Illuminate\\Cache\\TaggedCache::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_add", "name": "Illuminate\\Cache\\TaggedCache::add", "doc": "&quot;Store an item in the cache if the key does not exist.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_increment", "name": "Illuminate\\Cache\\TaggedCache::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_decrement", "name": "Illuminate\\Cache\\TaggedCache::decrement", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_forever", "name": "Illuminate\\Cache\\TaggedCache::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_forget", "name": "Illuminate\\Cache\\TaggedCache::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_flush", "name": "Illuminate\\Cache\\TaggedCache::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_remember", "name": "Illuminate\\Cache\\TaggedCache::remember", "doc": "&quot;Get an item from the cache, or store the default value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_sear", "name": "Illuminate\\Cache\\TaggedCache::sear", "doc": "&quot;Get an item from the cache, or store the default value forever.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_rememberForever", "name": "Illuminate\\Cache\\TaggedCache::rememberForever", "doc": "&quot;Get an item from the cache, or store the default value forever.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_taggedItemKey", "name": "Illuminate\\Cache\\TaggedCache::taggedItemKey", "doc": "&quot;Get a fully qualified key for a tagged item.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_getPrefix", "name": "Illuminate\\Cache\\TaggedCache::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\TaggedCache", "fromLink": "Illuminate/Cache/TaggedCache.html", "link": "Illuminate/Cache/TaggedCache.html#method_getMinutes", "name": "Illuminate\\Cache\\TaggedCache::getMinutes", "doc": "&quot;Calculate the number of minutes with the given duration.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/WinCacheStore.html", "name": "Illuminate\\Cache\\WinCacheStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method___construct", "name": "Illuminate\\Cache\\WinCacheStore::__construct", "doc": "&quot;Create a new WinCache store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method_get", "name": "Illuminate\\Cache\\WinCacheStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method_put", "name": "Illuminate\\Cache\\WinCacheStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method_increment", "name": "Illuminate\\Cache\\WinCacheStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method_decrement", "name": "Illuminate\\Cache\\WinCacheStore::decrement", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method_forever", "name": "Illuminate\\Cache\\WinCacheStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method_forget", "name": "Illuminate\\Cache\\WinCacheStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method_flush", "name": "Illuminate\\Cache\\WinCacheStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\WinCacheStore", "fromLink": "Illuminate/Cache/WinCacheStore.html", "link": "Illuminate/Cache/WinCacheStore.html#method_getPrefix", "name": "Illuminate\\Cache\\WinCacheStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cache", "fromLink": "Illuminate/Cache.html", "link": "Illuminate/Cache/XCacheStore.html", "name": "Illuminate\\Cache\\XCacheStore", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method___construct", "name": "Illuminate\\Cache\\XCacheStore::__construct", "doc": "&quot;Create a new WinCache store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method_get", "name": "Illuminate\\Cache\\XCacheStore::get", "doc": "&quot;Retrieve an item from the cache by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method_put", "name": "Illuminate\\Cache\\XCacheStore::put", "doc": "&quot;Store an item in the cache for a given number of minutes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method_increment", "name": "Illuminate\\Cache\\XCacheStore::increment", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method_decrement", "name": "Illuminate\\Cache\\XCacheStore::decrement", "doc": "&quot;Increment the value of an item in the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method_forever", "name": "Illuminate\\Cache\\XCacheStore::forever", "doc": "&quot;Store an item in the cache indefinitely.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method_forget", "name": "Illuminate\\Cache\\XCacheStore::forget", "doc": "&quot;Remove an item from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method_flush", "name": "Illuminate\\Cache\\XCacheStore::flush", "doc": "&quot;Remove all items from the cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cache\\XCacheStore", "fromLink": "Illuminate/Cache/XCacheStore.html", "link": "Illuminate/Cache/XCacheStore.html#method_getPrefix", "name": "Illuminate\\Cache\\XCacheStore::getPrefix", "doc": "&quot;Get the cache key prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Config", "fromLink": "Illuminate/Config.html", "link": "Illuminate/Config/EnvironmentVariables.html", "name": "Illuminate\\Config\\EnvironmentVariables", "doc": "&quot;PHP $_ENV loader for protecting sensitive configuration options.&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Config\\EnvironmentVariables", "fromLink": "Illuminate/Config/EnvironmentVariables.html", "link": "Illuminate/Config/EnvironmentVariables.html#method___construct", "name": "Illuminate\\Config\\EnvironmentVariables::__construct", "doc": "&quot;The server environment instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\EnvironmentVariables", "fromLink": "Illuminate/Config/EnvironmentVariables.html", "link": "Illuminate/Config/EnvironmentVariables.html#method_load", "name": "Illuminate\\Config\\EnvironmentVariables::load", "doc": "&quot;Load the server variables for a given environment.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Config", "fromLink": "Illuminate/Config.html", "link": "Illuminate/Config/EnvironmentVariablesLoaderInterface.html", "name": "Illuminate\\Config\\EnvironmentVariablesLoaderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Config\\EnvironmentVariablesLoaderInterface", "fromLink": "Illuminate/Config/EnvironmentVariablesLoaderInterface.html", "link": "Illuminate/Config/EnvironmentVariablesLoaderInterface.html#method_load", "name": "Illuminate\\Config\\EnvironmentVariablesLoaderInterface::load", "doc": "&quot;Load the environment variables for the given environment.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Config", "fromLink": "Illuminate/Config.html", "link": "Illuminate/Config/FileEnvironmentVariablesLoader.html", "name": "Illuminate\\Config\\FileEnvironmentVariablesLoader", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Config\\FileEnvironmentVariablesLoader", "fromLink": "Illuminate/Config/FileEnvironmentVariablesLoader.html", "link": "Illuminate/Config/FileEnvironmentVariablesLoader.html#method___construct", "name": "Illuminate\\Config\\FileEnvironmentVariablesLoader::__construct", "doc": "&quot;Create a new file environment loader instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileEnvironmentVariablesLoader", "fromLink": "Illuminate/Config/FileEnvironmentVariablesLoader.html", "link": "Illuminate/Config/FileEnvironmentVariablesLoader.html#method_load", "name": "Illuminate\\Config\\FileEnvironmentVariablesLoader::load", "doc": "&quot;Load the environment variables for the given environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileEnvironmentVariablesLoader", "fromLink": "Illuminate/Config/FileEnvironmentVariablesLoader.html", "link": "Illuminate/Config/FileEnvironmentVariablesLoader.html#method_getFile", "name": "Illuminate\\Config\\FileEnvironmentVariablesLoader::getFile", "doc": "&quot;Get the file for the given environment.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Config", "fromLink": "Illuminate/Config.html", "link": "Illuminate/Config/FileLoader.html", "name": "Illuminate\\Config\\FileLoader", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method___construct", "name": "Illuminate\\Config\\FileLoader::__construct", "doc": "&quot;Create a new file configuration loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_load", "name": "Illuminate\\Config\\FileLoader::load", "doc": "&quot;Load the given configuration group.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_mergeEnvironment", "name": "Illuminate\\Config\\FileLoader::mergeEnvironment", "doc": "&quot;Merge the items in the given file into the items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_exists", "name": "Illuminate\\Config\\FileLoader::exists", "doc": "&quot;Determine if the given group exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_cascadePackage", "name": "Illuminate\\Config\\FileLoader::cascadePackage", "doc": "&quot;Apply any cascades to an array of package options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_getPackagePath", "name": "Illuminate\\Config\\FileLoader::getPackagePath", "doc": "&quot;Get the package path for an environment and group.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_getPath", "name": "Illuminate\\Config\\FileLoader::getPath", "doc": "&quot;Get the configuration path for a namespace.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_addNamespace", "name": "Illuminate\\Config\\FileLoader::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_getNamespaces", "name": "Illuminate\\Config\\FileLoader::getNamespaces", "doc": "&quot;Returns all registered namespaces with the config\nloader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_getRequire", "name": "Illuminate\\Config\\FileLoader::getRequire", "doc": "&quot;Get a file&#039;s contents by requiring it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\FileLoader", "fromLink": "Illuminate/Config/FileLoader.html", "link": "Illuminate/Config/FileLoader.html#method_getFilesystem", "name": "Illuminate\\Config\\FileLoader::getFilesystem", "doc": "&quot;Get the Filesystem instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Config", "fromLink": "Illuminate/Config.html", "link": "Illuminate/Config/LoaderInterface.html", "name": "Illuminate\\Config\\LoaderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_load", "name": "Illuminate\\Config\\LoaderInterface::load", "doc": "&quot;Load the given configuration group.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_exists", "name": "Illuminate\\Config\\LoaderInterface::exists", "doc": "&quot;Determine if the given configuration group exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_addNamespace", "name": "Illuminate\\Config\\LoaderInterface::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_getNamespaces", "name": "Illuminate\\Config\\LoaderInterface::getNamespaces", "doc": "&quot;Returns all registered namespaces with the config\nloader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\LoaderInterface", "fromLink": "Illuminate/Config/LoaderInterface.html", "link": "Illuminate/Config/LoaderInterface.html#method_cascadePackage", "name": "Illuminate\\Config\\LoaderInterface::cascadePackage", "doc": "&quot;Apply any cascades to an array of package options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Config", "fromLink": "Illuminate/Config.html", "link": "Illuminate/Config/Repository.html", "name": "Illuminate\\Config\\Repository", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method___construct", "name": "Illuminate\\Config\\Repository::__construct", "doc": "&quot;Create a new configuration repository.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_has", "name": "Illuminate\\Config\\Repository::has", "doc": "&quot;Determine if the given configuration value exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_hasGroup", "name": "Illuminate\\Config\\Repository::hasGroup", "doc": "&quot;Determine if a configuration group exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_get", "name": "Illuminate\\Config\\Repository::get", "doc": "&quot;Get the specified configuration value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_set", "name": "Illuminate\\Config\\Repository::set", "doc": "&quot;Set a given configuration value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_load", "name": "Illuminate\\Config\\Repository::load", "doc": "&quot;Load the configuration group for the key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_callAfterLoad", "name": "Illuminate\\Config\\Repository::callAfterLoad", "doc": "&quot;Call the after load callback for a namespace.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_parseNamespacedSegments", "name": "Illuminate\\Config\\Repository::parseNamespacedSegments", "doc": "&quot;Parse an array of namespaced segments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_parsePackageSegments", "name": "Illuminate\\Config\\Repository::parsePackageSegments", "doc": "&quot;Parse the segments of a package namespace.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_package", "name": "Illuminate\\Config\\Repository::package", "doc": "&quot;Register a package for cascading configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_getPackageNamespace", "name": "Illuminate\\Config\\Repository::getPackageNamespace", "doc": "&quot;Get the configuration namespace for a package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_afterLoading", "name": "Illuminate\\Config\\Repository::afterLoading", "doc": "&quot;Register an after load callback for a given namespace.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_getCollection", "name": "Illuminate\\Config\\Repository::getCollection", "doc": "&quot;Get the collection identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_addNamespace", "name": "Illuminate\\Config\\Repository::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_getNamespaces", "name": "Illuminate\\Config\\Repository::getNamespaces", "doc": "&quot;Returns all registered namespaces with the config\nloader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_getLoader", "name": "Illuminate\\Config\\Repository::getLoader", "doc": "&quot;Get the loader implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_setLoader", "name": "Illuminate\\Config\\Repository::setLoader", "doc": "&quot;Set the loader implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_getEnvironment", "name": "Illuminate\\Config\\Repository::getEnvironment", "doc": "&quot;Get the current configuration environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_getAfterLoadCallbacks", "name": "Illuminate\\Config\\Repository::getAfterLoadCallbacks", "doc": "&quot;Get the after load callback array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_getItems", "name": "Illuminate\\Config\\Repository::getItems", "doc": "&quot;Get all of the configuration items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_offsetExists", "name": "Illuminate\\Config\\Repository::offsetExists", "doc": "&quot;Determine if the given configuration option exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_offsetGet", "name": "Illuminate\\Config\\Repository::offsetGet", "doc": "&quot;Get a configuration option.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_offsetSet", "name": "Illuminate\\Config\\Repository::offsetSet", "doc": "&quot;Set a configuration option.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Config\\Repository", "fromLink": "Illuminate/Config/Repository.html", "link": "Illuminate/Config/Repository.html#method_offsetUnset", "name": "Illuminate\\Config\\Repository::offsetUnset", "doc": "&quot;Unset a configuration option.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Console", "fromLink": "Illuminate/Console.html", "link": "Illuminate/Console/Application.html", "name": "Illuminate\\Console\\Application", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_start", "name": "Illuminate\\Console\\Application::start", "doc": "&quot;Create and boot a new Console application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_make", "name": "Illuminate\\Console\\Application::make", "doc": "&quot;Create a new Console application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_boot", "name": "Illuminate\\Console\\Application::boot", "doc": "&quot;Boot the Console application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_call", "name": "Illuminate\\Console\\Application::call", "doc": "&quot;Run an Artisan console command by name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_add", "name": "Illuminate\\Console\\Application::add", "doc": "&quot;Add a command to the console.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_addToParent", "name": "Illuminate\\Console\\Application::addToParent", "doc": "&quot;Add the command to the parent instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_resolve", "name": "Illuminate\\Console\\Application::resolve", "doc": "&quot;Add a command, resolving through the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_resolveCommands", "name": "Illuminate\\Console\\Application::resolveCommands", "doc": "&quot;Resolve an array of commands through the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_getDefaultInputDefinition", "name": "Illuminate\\Console\\Application::getDefaultInputDefinition", "doc": "&quot;Get the default input definitions for the applications.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_getEnvironmentOption", "name": "Illuminate\\Console\\Application::getEnvironmentOption", "doc": "&quot;Get the global environment option for the definition.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_renderException", "name": "Illuminate\\Console\\Application::renderException", "doc": "&quot;Render the given exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_setExceptionHandler", "name": "Illuminate\\Console\\Application::setExceptionHandler", "doc": "&quot;Set the exception handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_setLaravel", "name": "Illuminate\\Console\\Application::setLaravel", "doc": "&quot;Set the Laravel application instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Application", "fromLink": "Illuminate/Console/Application.html", "link": "Illuminate/Console/Application.html#method_setAutoExit", "name": "Illuminate\\Console\\Application::setAutoExit", "doc": "&quot;Set whether the Console app should auto-exit when done.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Console", "fromLink": "Illuminate/Console.html", "link": "Illuminate/Console/Command.html", "name": "Illuminate\\Console\\Command", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method___construct", "name": "Illuminate\\Console\\Command::__construct", "doc": "&quot;Create a new console command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_specifyParameters", "name": "Illuminate\\Console\\Command::specifyParameters", "doc": "&quot;Specify the arguments and options on the command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_run", "name": "Illuminate\\Console\\Command::run", "doc": "&quot;Run the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_execute", "name": "Illuminate\\Console\\Command::execute", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_call", "name": "Illuminate\\Console\\Command::call", "doc": "&quot;Call another console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_callSilent", "name": "Illuminate\\Console\\Command::callSilent", "doc": "&quot;Call another console command silently.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_argument", "name": "Illuminate\\Console\\Command::argument", "doc": "&quot;Get the value of a command argument.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_option", "name": "Illuminate\\Console\\Command::option", "doc": "&quot;Get the value of a command option.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_confirm", "name": "Illuminate\\Console\\Command::confirm", "doc": "&quot;Confirm a question with the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_ask", "name": "Illuminate\\Console\\Command::ask", "doc": "&quot;Prompt the user for input.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_askWithCompletion", "name": "Illuminate\\Console\\Command::askWithCompletion", "doc": "&quot;Prompt the user for input with auto completion.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_secret", "name": "Illuminate\\Console\\Command::secret", "doc": "&quot;Prompt the user for input but hide the answer from the console.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_choice", "name": "Illuminate\\Console\\Command::choice", "doc": "&quot;Give the user a single choice from an array of answers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_table", "name": "Illuminate\\Console\\Command::table", "doc": "&quot;Format input to textual table&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_info", "name": "Illuminate\\Console\\Command::info", "doc": "&quot;Write a string as information output.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_line", "name": "Illuminate\\Console\\Command::line", "doc": "&quot;Write a string as standard output.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_comment", "name": "Illuminate\\Console\\Command::comment", "doc": "&quot;Write a string as comment output.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_question", "name": "Illuminate\\Console\\Command::question", "doc": "&quot;Write a string as question output.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_error", "name": "Illuminate\\Console\\Command::error", "doc": "&quot;Write a string as error output.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_getArguments", "name": "Illuminate\\Console\\Command::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_getOptions", "name": "Illuminate\\Console\\Command::getOptions", "doc": "&quot;Get the console command options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_getOutput", "name": "Illuminate\\Console\\Command::getOutput", "doc": "&quot;Get the output implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_getLaravel", "name": "Illuminate\\Console\\Command::getLaravel", "doc": "&quot;Get the Laravel application instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\Command", "fromLink": "Illuminate/Console/Command.html", "link": "Illuminate/Console/Command.html#method_setLaravel", "name": "Illuminate\\Console\\Command::setLaravel", "doc": "&quot;Set the Laravel application instance.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Console", "fromLink": "Illuminate/Console.html", "link": "Illuminate/Console/ConfirmableTrait.html", "name": "Illuminate\\Console\\ConfirmableTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Console\\ConfirmableTrait", "fromLink": "Illuminate/Console/ConfirmableTrait.html", "link": "Illuminate/Console/ConfirmableTrait.html#method_confirmToProceed", "name": "Illuminate\\Console\\ConfirmableTrait::confirmToProceed", "doc": "&quot;Confirm before proceeding with the action&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Console\\ConfirmableTrait", "fromLink": "Illuminate/Console/ConfirmableTrait.html", "link": "Illuminate/Console/ConfirmableTrait.html#method_getDefaultConfirmCallback", "name": "Illuminate\\Console\\ConfirmableTrait::getDefaultConfirmCallback", "doc": "&quot;Get the default confirmation callback.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Container", "fromLink": "Illuminate/Container.html", "link": "Illuminate/Container/BindingResolutionException.html", "name": "Illuminate\\Container\\BindingResolutionException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Illuminate\\Container", "fromLink": "Illuminate/Container.html", "link": "Illuminate/Container/Container.html", "name": "Illuminate\\Container\\Container", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_resolvable", "name": "Illuminate\\Container\\Container::resolvable", "doc": "&quot;Determine if a given string is resolvable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_bound", "name": "Illuminate\\Container\\Container::bound", "doc": "&quot;Determine if the given abstract type has been bound.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_resolved", "name": "Illuminate\\Container\\Container::resolved", "doc": "&quot;Determine if the given abstract type has been resolved.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_isAlias", "name": "Illuminate\\Container\\Container::isAlias", "doc": "&quot;Determine if a given string is an alias.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_bind", "name": "Illuminate\\Container\\Container::bind", "doc": "&quot;Register a binding with the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_getClosure", "name": "Illuminate\\Container\\Container::getClosure", "doc": "&quot;Get the Closure to be used when building a type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_bindIf", "name": "Illuminate\\Container\\Container::bindIf", "doc": "&quot;Register a binding if it hasn&#039;t already been registered.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_singleton", "name": "Illuminate\\Container\\Container::singleton", "doc": "&quot;Register a shared binding in the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_share", "name": "Illuminate\\Container\\Container::share", "doc": "&quot;Wrap a Closure such that it is shared.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_bindShared", "name": "Illuminate\\Container\\Container::bindShared", "doc": "&quot;Bind a shared Closure into the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_extend", "name": "Illuminate\\Container\\Container::extend", "doc": "&quot;\&quot;Extend\&quot; an abstract type in the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_getExtender", "name": "Illuminate\\Container\\Container::getExtender", "doc": "&quot;Get an extender Closure for resolving a type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_instance", "name": "Illuminate\\Container\\Container::instance", "doc": "&quot;Register an existing instance as shared in the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_alias", "name": "Illuminate\\Container\\Container::alias", "doc": "&quot;Alias a type to a shorter name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_extractAlias", "name": "Illuminate\\Container\\Container::extractAlias", "doc": "&quot;Extract the type and alias from a given definition.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_rebinding", "name": "Illuminate\\Container\\Container::rebinding", "doc": "&quot;Bind a new callback to an abstract&#039;s rebind event.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_refresh", "name": "Illuminate\\Container\\Container::refresh", "doc": "&quot;Refresh an instance on the given target and method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_rebound", "name": "Illuminate\\Container\\Container::rebound", "doc": "&quot;Fire the \&quot;rebound\&quot; callbacks for the given abstract type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_getReboundCallbacks", "name": "Illuminate\\Container\\Container::getReboundCallbacks", "doc": "&quot;Get the rebound callbacks for a given type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_make", "name": "Illuminate\\Container\\Container::make", "doc": "&quot;Resolve the given type from the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_getConcrete", "name": "Illuminate\\Container\\Container::getConcrete", "doc": "&quot;Get the concrete type for a given abstract.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_missingLeadingSlash", "name": "Illuminate\\Container\\Container::missingLeadingSlash", "doc": "&quot;Determine if the given abstract has a leading slash.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_build", "name": "Illuminate\\Container\\Container::build", "doc": "&quot;Instantiate a concrete instance of the given type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_getDependencies", "name": "Illuminate\\Container\\Container::getDependencies", "doc": "&quot;Resolve all of the dependencies from the ReflectionParameters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_resolveNonClass", "name": "Illuminate\\Container\\Container::resolveNonClass", "doc": "&quot;Resolve a non-class hinted dependency.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_resolveClass", "name": "Illuminate\\Container\\Container::resolveClass", "doc": "&quot;Resolve a class based dependency from the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_keyParametersByArgument", "name": "Illuminate\\Container\\Container::keyParametersByArgument", "doc": "&quot;If extra parameters are passed by numeric ID, rekey them by argument name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_resolving", "name": "Illuminate\\Container\\Container::resolving", "doc": "&quot;Register a new resolving callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_resolvingAny", "name": "Illuminate\\Container\\Container::resolvingAny", "doc": "&quot;Register a new resolving callback for all types.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_fireResolvingCallbacks", "name": "Illuminate\\Container\\Container::fireResolvingCallbacks", "doc": "&quot;Fire all of the resolving callbacks.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_fireCallbackArray", "name": "Illuminate\\Container\\Container::fireCallbackArray", "doc": "&quot;Fire an array of callbacks with an object.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_isShared", "name": "Illuminate\\Container\\Container::isShared", "doc": "&quot;Determine if a given type is shared.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_isBuildable", "name": "Illuminate\\Container\\Container::isBuildable", "doc": "&quot;Determine if the given concrete is buildable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_getAlias", "name": "Illuminate\\Container\\Container::getAlias", "doc": "&quot;Get the alias for an abstract if available.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_getBindings", "name": "Illuminate\\Container\\Container::getBindings", "doc": "&quot;Get the container&#039;s bindings.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_dropStaleInstances", "name": "Illuminate\\Container\\Container::dropStaleInstances", "doc": "&quot;Drop all of the stale instances and aliases.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_forgetInstance", "name": "Illuminate\\Container\\Container::forgetInstance", "doc": "&quot;Remove a resolved instance from the instance cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_forgetInstances", "name": "Illuminate\\Container\\Container::forgetInstances", "doc": "&quot;Clear all of the instances from the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_offsetExists", "name": "Illuminate\\Container\\Container::offsetExists", "doc": "&quot;Determine if a given offset exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_offsetGet", "name": "Illuminate\\Container\\Container::offsetGet", "doc": "&quot;Get the value at a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_offsetSet", "name": "Illuminate\\Container\\Container::offsetSet", "doc": "&quot;Set the value at a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method_offsetUnset", "name": "Illuminate\\Container\\Container::offsetUnset", "doc": "&quot;Unset the value at a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method___get", "name": "Illuminate\\Container\\Container::__get", "doc": "&quot;Dynamically access container services.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Container\\Container", "fromLink": "Illuminate/Container/Container.html", "link": "Illuminate/Container/Container.html#method___set", "name": "Illuminate\\Container\\Container::__set", "doc": "&quot;Dynamically set container services.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cookie", "fromLink": "Illuminate/Cookie.html", "link": "Illuminate/Cookie/CookieJar.html", "name": "Illuminate\\Cookie\\CookieJar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_make", "name": "Illuminate\\Cookie\\CookieJar::make", "doc": "&quot;Create a new cookie instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_forever", "name": "Illuminate\\Cookie\\CookieJar::forever", "doc": "&quot;Create a cookie that lasts \&quot;forever\&quot; (five years).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_forget", "name": "Illuminate\\Cookie\\CookieJar::forget", "doc": "&quot;Expire the given cookie.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_hasQueued", "name": "Illuminate\\Cookie\\CookieJar::hasQueued", "doc": "&quot;Determine if a cookie has been queued.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_queued", "name": "Illuminate\\Cookie\\CookieJar::queued", "doc": "&quot;Get a queued cookie instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_queue", "name": "Illuminate\\Cookie\\CookieJar::queue", "doc": "&quot;Queue a cookie to send with the next response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_unqueue", "name": "Illuminate\\Cookie\\CookieJar::unqueue", "doc": "&quot;Remove a cookie from the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_getPathAndDomain", "name": "Illuminate\\Cookie\\CookieJar::getPathAndDomain", "doc": "&quot;Get the path and domain, or the default values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_setDefaultPathAndDomain", "name": "Illuminate\\Cookie\\CookieJar::setDefaultPathAndDomain", "doc": "&quot;Set the default path and domain for the jar.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieJar", "fromLink": "Illuminate/Cookie/CookieJar.html", "link": "Illuminate/Cookie/CookieJar.html#method_getQueuedCookies", "name": "Illuminate\\Cookie\\CookieJar::getQueuedCookies", "doc": "&quot;Get the cookies which have been queued for the next request&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cookie", "fromLink": "Illuminate/Cookie.html", "link": "Illuminate/Cookie/CookieServiceProvider.html", "name": "Illuminate\\Cookie\\CookieServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cookie\\CookieServiceProvider", "fromLink": "Illuminate/Cookie/CookieServiceProvider.html", "link": "Illuminate/Cookie/CookieServiceProvider.html#method_register", "name": "Illuminate\\Cookie\\CookieServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cookie", "fromLink": "Illuminate/Cookie.html", "link": "Illuminate/Cookie/Guard.html", "name": "Illuminate\\Cookie\\Guard", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cookie\\Guard", "fromLink": "Illuminate/Cookie/Guard.html", "link": "Illuminate/Cookie/Guard.html#method___construct", "name": "Illuminate\\Cookie\\Guard::__construct", "doc": "&quot;Create a new CookieGuard instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\Guard", "fromLink": "Illuminate/Cookie/Guard.html", "link": "Illuminate/Cookie/Guard.html#method_handle", "name": "Illuminate\\Cookie\\Guard::handle", "doc": "&quot;Handle the given request and get the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\Guard", "fromLink": "Illuminate/Cookie/Guard.html", "link": "Illuminate/Cookie/Guard.html#method_decrypt", "name": "Illuminate\\Cookie\\Guard::decrypt", "doc": "&quot;Decrypt the cookies on the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\Guard", "fromLink": "Illuminate/Cookie/Guard.html", "link": "Illuminate/Cookie/Guard.html#method_decryptCookie", "name": "Illuminate\\Cookie\\Guard::decryptCookie", "doc": "&quot;Decrypt the given cookie and return the value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\Guard", "fromLink": "Illuminate/Cookie/Guard.html", "link": "Illuminate/Cookie/Guard.html#method_decryptArray", "name": "Illuminate\\Cookie\\Guard::decryptArray", "doc": "&quot;Decrypt an array based cookie.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\Guard", "fromLink": "Illuminate/Cookie/Guard.html", "link": "Illuminate/Cookie/Guard.html#method_encrypt", "name": "Illuminate\\Cookie\\Guard::encrypt", "doc": "&quot;Encrypt the cookies on an outgoing response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\Guard", "fromLink": "Illuminate/Cookie/Guard.html", "link": "Illuminate/Cookie/Guard.html#method_duplicate", "name": "Illuminate\\Cookie\\Guard::duplicate", "doc": "&quot;Duplicate a cookie with a new value.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Cookie", "fromLink": "Illuminate/Cookie.html", "link": "Illuminate/Cookie/Queue.html", "name": "Illuminate\\Cookie\\Queue", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Cookie\\Queue", "fromLink": "Illuminate/Cookie/Queue.html", "link": "Illuminate/Cookie/Queue.html#method___construct", "name": "Illuminate\\Cookie\\Queue::__construct", "doc": "&quot;Create a new CookieQueue instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Cookie\\Queue", "fromLink": "Illuminate/Cookie/Queue.html", "link": "Illuminate/Cookie/Queue.html#method_handle", "name": "Illuminate\\Cookie\\Queue::handle", "doc": "&quot;Handle the given request and get the response.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Capsule", "fromLink": "Illuminate/Database/Capsule.html", "link": "Illuminate/Database/Capsule/Manager.html", "name": "Illuminate\\Database\\Capsule\\Manager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method___construct", "name": "Illuminate\\Database\\Capsule\\Manager::__construct", "doc": "&quot;Create a new database capsule manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_setupDefaultConfiguration", "name": "Illuminate\\Database\\Capsule\\Manager::setupDefaultConfiguration", "doc": "&quot;Setup the default database configuration options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_setupManager", "name": "Illuminate\\Database\\Capsule\\Manager::setupManager", "doc": "&quot;Build the database manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_connection", "name": "Illuminate\\Database\\Capsule\\Manager::connection", "doc": "&quot;Get a connection instance from the global manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_table", "name": "Illuminate\\Database\\Capsule\\Manager::table", "doc": "&quot;Get a fluent query builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_schema", "name": "Illuminate\\Database\\Capsule\\Manager::schema", "doc": "&quot;Get a schema builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_getConnection", "name": "Illuminate\\Database\\Capsule\\Manager::getConnection", "doc": "&quot;Get a registered connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_addConnection", "name": "Illuminate\\Database\\Capsule\\Manager::addConnection", "doc": "&quot;Register a connection with the manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_bootEloquent", "name": "Illuminate\\Database\\Capsule\\Manager::bootEloquent", "doc": "&quot;Bootstrap Eloquent so it is ready for usage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_setFetchMode", "name": "Illuminate\\Database\\Capsule\\Manager::setFetchMode", "doc": "&quot;Set the fetch mode for the database connections.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_getDatabaseManager", "name": "Illuminate\\Database\\Capsule\\Manager::getDatabaseManager", "doc": "&quot;Get the database manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_getEventDispatcher", "name": "Illuminate\\Database\\Capsule\\Manager::getEventDispatcher", "doc": "&quot;Get the current event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_setEventDispatcher", "name": "Illuminate\\Database\\Capsule\\Manager::setEventDispatcher", "doc": "&quot;Set the event dispatcher instance to be used by connections.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_getCacheManager", "name": "Illuminate\\Database\\Capsule\\Manager::getCacheManager", "doc": "&quot;Get the current cache manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method_setCacheManager", "name": "Illuminate\\Database\\Capsule\\Manager::setCacheManager", "doc": "&quot;Set the cache manager to be used by connections.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Capsule\\Manager", "fromLink": "Illuminate/Database/Capsule/Manager.html", "link": "Illuminate/Database/Capsule/Manager.html#method___callStatic", "name": "Illuminate\\Database\\Capsule\\Manager::__callStatic", "doc": "&quot;Dynamically pass methods to the default connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/Connection.html", "name": "Illuminate\\Database\\Connection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method___construct", "name": "Illuminate\\Database\\Connection::__construct", "doc": "&quot;Create a new database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_useDefaultQueryGrammar", "name": "Illuminate\\Database\\Connection::useDefaultQueryGrammar", "doc": "&quot;Set the query grammar to the default implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getDefaultQueryGrammar", "name": "Illuminate\\Database\\Connection::getDefaultQueryGrammar", "doc": "&quot;Get the default query grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_useDefaultSchemaGrammar", "name": "Illuminate\\Database\\Connection::useDefaultSchemaGrammar", "doc": "&quot;Set the schema grammar to the default implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getDefaultSchemaGrammar", "name": "Illuminate\\Database\\Connection::getDefaultSchemaGrammar", "doc": "&quot;Get the default schema grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_useDefaultPostProcessor", "name": "Illuminate\\Database\\Connection::useDefaultPostProcessor", "doc": "&quot;Set the query post processor to the default implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getDefaultPostProcessor", "name": "Illuminate\\Database\\Connection::getDefaultPostProcessor", "doc": "&quot;Get the default post processor instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getSchemaBuilder", "name": "Illuminate\\Database\\Connection::getSchemaBuilder", "doc": "&quot;Get a schema builder instance for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_table", "name": "Illuminate\\Database\\Connection::table", "doc": "&quot;Begin a fluent query against a database table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_raw", "name": "Illuminate\\Database\\Connection::raw", "doc": "&quot;Get a new raw query expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_selectOne", "name": "Illuminate\\Database\\Connection::selectOne", "doc": "&quot;Run a select statement and return a single result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_selectFromWriteConnection", "name": "Illuminate\\Database\\Connection::selectFromWriteConnection", "doc": "&quot;Run a select statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_select", "name": "Illuminate\\Database\\Connection::select", "doc": "&quot;Run a select statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getPdoForSelect", "name": "Illuminate\\Database\\Connection::getPdoForSelect", "doc": "&quot;Get the PDO connection to use for a select query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_insert", "name": "Illuminate\\Database\\Connection::insert", "doc": "&quot;Run an insert statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_update", "name": "Illuminate\\Database\\Connection::update", "doc": "&quot;Run an update statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_delete", "name": "Illuminate\\Database\\Connection::delete", "doc": "&quot;Run a delete statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_statement", "name": "Illuminate\\Database\\Connection::statement", "doc": "&quot;Execute an SQL statement and return the boolean result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_affectingStatement", "name": "Illuminate\\Database\\Connection::affectingStatement", "doc": "&quot;Run an SQL statement and get the number of rows affected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_unprepared", "name": "Illuminate\\Database\\Connection::unprepared", "doc": "&quot;Run a raw, unprepared query against the PDO connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_prepareBindings", "name": "Illuminate\\Database\\Connection::prepareBindings", "doc": "&quot;Prepare the query bindings for execution.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_transaction", "name": "Illuminate\\Database\\Connection::transaction", "doc": "&quot;Execute a Closure within a transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_beginTransaction", "name": "Illuminate\\Database\\Connection::beginTransaction", "doc": "&quot;Start a new database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_commit", "name": "Illuminate\\Database\\Connection::commit", "doc": "&quot;Commit the active database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_rollBack", "name": "Illuminate\\Database\\Connection::rollBack", "doc": "&quot;Rollback the active database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_transactionLevel", "name": "Illuminate\\Database\\Connection::transactionLevel", "doc": "&quot;Get the number of active transactions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_pretend", "name": "Illuminate\\Database\\Connection::pretend", "doc": "&quot;Execute the given callback in \&quot;dry run\&quot; mode.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_run", "name": "Illuminate\\Database\\Connection::run", "doc": "&quot;Run a SQL statement and log its execution context.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_runQueryCallback", "name": "Illuminate\\Database\\Connection::runQueryCallback", "doc": "&quot;Run a SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_tryAgainIfCausedByLostConnection", "name": "Illuminate\\Database\\Connection::tryAgainIfCausedByLostConnection", "doc": "&quot;Handle a query exception that occurred during query execution.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_causedByLostConnection", "name": "Illuminate\\Database\\Connection::causedByLostConnection", "doc": "&quot;Determine if the given exception was caused by a lost connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_disconnect", "name": "Illuminate\\Database\\Connection::disconnect", "doc": "&quot;Disconnect from the underlying PDO connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_reconnect", "name": "Illuminate\\Database\\Connection::reconnect", "doc": "&quot;Reconnect to the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_reconnectIfMissingConnection", "name": "Illuminate\\Database\\Connection::reconnectIfMissingConnection", "doc": "&quot;Reconnect to the database if a PDO connection is missing.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_logQuery", "name": "Illuminate\\Database\\Connection::logQuery", "doc": "&quot;Log a query in the connection&#039;s query log.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_listen", "name": "Illuminate\\Database\\Connection::listen", "doc": "&quot;Register a database query listener with the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_fireConnectionEvent", "name": "Illuminate\\Database\\Connection::fireConnectionEvent", "doc": "&quot;Fire an event for this connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getElapsedTime", "name": "Illuminate\\Database\\Connection::getElapsedTime", "doc": "&quot;Get the elapsed time since a given starting point.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getDoctrineColumn", "name": "Illuminate\\Database\\Connection::getDoctrineColumn", "doc": "&quot;Get a Doctrine Schema Column instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getDoctrineSchemaManager", "name": "Illuminate\\Database\\Connection::getDoctrineSchemaManager", "doc": "&quot;Get the Doctrine DBAL schema manager for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getDoctrineConnection", "name": "Illuminate\\Database\\Connection::getDoctrineConnection", "doc": "&quot;Get the Doctrine DBAL database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getPdo", "name": "Illuminate\\Database\\Connection::getPdo", "doc": "&quot;Get the current PDO connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getReadPdo", "name": "Illuminate\\Database\\Connection::getReadPdo", "doc": "&quot;Get the current PDO connection used for reading.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setPdo", "name": "Illuminate\\Database\\Connection::setPdo", "doc": "&quot;Set the PDO connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setReadPdo", "name": "Illuminate\\Database\\Connection::setReadPdo", "doc": "&quot;Set the PDO connection used for reading.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setReconnector", "name": "Illuminate\\Database\\Connection::setReconnector", "doc": "&quot;Set the reconnect instance on the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getName", "name": "Illuminate\\Database\\Connection::getName", "doc": "&quot;Get the database connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getConfig", "name": "Illuminate\\Database\\Connection::getConfig", "doc": "&quot;Get an option from the configuration options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getDriverName", "name": "Illuminate\\Database\\Connection::getDriverName", "doc": "&quot;Get the PDO driver name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getQueryGrammar", "name": "Illuminate\\Database\\Connection::getQueryGrammar", "doc": "&quot;Get the query grammar used by the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setQueryGrammar", "name": "Illuminate\\Database\\Connection::setQueryGrammar", "doc": "&quot;Set the query grammar used by the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getSchemaGrammar", "name": "Illuminate\\Database\\Connection::getSchemaGrammar", "doc": "&quot;Get the schema grammar used by the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setSchemaGrammar", "name": "Illuminate\\Database\\Connection::setSchemaGrammar", "doc": "&quot;Set the schema grammar used by the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getPostProcessor", "name": "Illuminate\\Database\\Connection::getPostProcessor", "doc": "&quot;Get the query post processor used by the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setPostProcessor", "name": "Illuminate\\Database\\Connection::setPostProcessor", "doc": "&quot;Set the query post processor used by the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getEventDispatcher", "name": "Illuminate\\Database\\Connection::getEventDispatcher", "doc": "&quot;Get the event dispatcher used by the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setEventDispatcher", "name": "Illuminate\\Database\\Connection::setEventDispatcher", "doc": "&quot;Set the event dispatcher instance on the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getPaginator", "name": "Illuminate\\Database\\Connection::getPaginator", "doc": "&quot;Get the paginator environment instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setPaginator", "name": "Illuminate\\Database\\Connection::setPaginator", "doc": "&quot;Set the pagination environment instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getCacheManager", "name": "Illuminate\\Database\\Connection::getCacheManager", "doc": "&quot;Get the cache manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setCacheManager", "name": "Illuminate\\Database\\Connection::setCacheManager", "doc": "&quot;Set the cache manager instance on the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_pretending", "name": "Illuminate\\Database\\Connection::pretending", "doc": "&quot;Determine if the connection in a \&quot;dry run\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getFetchMode", "name": "Illuminate\\Database\\Connection::getFetchMode", "doc": "&quot;Get the default fetch mode for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setFetchMode", "name": "Illuminate\\Database\\Connection::setFetchMode", "doc": "&quot;Set the default fetch mode for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getQueryLog", "name": "Illuminate\\Database\\Connection::getQueryLog", "doc": "&quot;Get the connection query log.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_flushQueryLog", "name": "Illuminate\\Database\\Connection::flushQueryLog", "doc": "&quot;Clear the query log.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_enableQueryLog", "name": "Illuminate\\Database\\Connection::enableQueryLog", "doc": "&quot;Enable the query log on the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_disableQueryLog", "name": "Illuminate\\Database\\Connection::disableQueryLog", "doc": "&quot;Disable the query log on the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_logging", "name": "Illuminate\\Database\\Connection::logging", "doc": "&quot;Determine whether we&#039;re logging queries.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getDatabaseName", "name": "Illuminate\\Database\\Connection::getDatabaseName", "doc": "&quot;Get the name of the connected database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setDatabaseName", "name": "Illuminate\\Database\\Connection::setDatabaseName", "doc": "&quot;Set the name of the connected database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_getTablePrefix", "name": "Illuminate\\Database\\Connection::getTablePrefix", "doc": "&quot;Get the table prefix for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_setTablePrefix", "name": "Illuminate\\Database\\Connection::setTablePrefix", "doc": "&quot;Set the table prefix in use by the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connection", "fromLink": "Illuminate/Database/Connection.html", "link": "Illuminate/Database/Connection.html#method_withTablePrefix", "name": "Illuminate\\Database\\Connection::withTablePrefix", "doc": "&quot;Set the table prefix and return the grammar.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/ConnectionInterface.html", "name": "Illuminate\\Database\\ConnectionInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_table", "name": "Illuminate\\Database\\ConnectionInterface::table", "doc": "&quot;Begin a fluent query against a database table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_raw", "name": "Illuminate\\Database\\ConnectionInterface::raw", "doc": "&quot;Get a new raw query expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_selectOne", "name": "Illuminate\\Database\\ConnectionInterface::selectOne", "doc": "&quot;Run a select statement and return a single result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_select", "name": "Illuminate\\Database\\ConnectionInterface::select", "doc": "&quot;Run a select statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_insert", "name": "Illuminate\\Database\\ConnectionInterface::insert", "doc": "&quot;Run an insert statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_update", "name": "Illuminate\\Database\\ConnectionInterface::update", "doc": "&quot;Run an update statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_delete", "name": "Illuminate\\Database\\ConnectionInterface::delete", "doc": "&quot;Run a delete statement against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_statement", "name": "Illuminate\\Database\\ConnectionInterface::statement", "doc": "&quot;Execute an SQL statement and return the boolean result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_affectingStatement", "name": "Illuminate\\Database\\ConnectionInterface::affectingStatement", "doc": "&quot;Run an SQL statement and get the number of rows affected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_unprepared", "name": "Illuminate\\Database\\ConnectionInterface::unprepared", "doc": "&quot;Run a raw, unprepared query against the PDO connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_prepareBindings", "name": "Illuminate\\Database\\ConnectionInterface::prepareBindings", "doc": "&quot;Prepare the query bindings for execution.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_transaction", "name": "Illuminate\\Database\\ConnectionInterface::transaction", "doc": "&quot;Execute a Closure within a transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_beginTransaction", "name": "Illuminate\\Database\\ConnectionInterface::beginTransaction", "doc": "&quot;Start a new database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_commit", "name": "Illuminate\\Database\\ConnectionInterface::commit", "doc": "&quot;Commit the active database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_rollBack", "name": "Illuminate\\Database\\ConnectionInterface::rollBack", "doc": "&quot;Rollback the active database transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_transactionLevel", "name": "Illuminate\\Database\\ConnectionInterface::transactionLevel", "doc": "&quot;Get the number of active transactions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionInterface", "fromLink": "Illuminate/Database/ConnectionInterface.html", "link": "Illuminate/Database/ConnectionInterface.html#method_pretend", "name": "Illuminate\\Database\\ConnectionInterface::pretend", "doc": "&quot;Execute the given callback in \&quot;dry run\&quot; mode.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/ConnectionResolver.html", "name": "Illuminate\\Database\\ConnectionResolver", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolver", "fromLink": "Illuminate/Database/ConnectionResolver.html", "link": "Illuminate/Database/ConnectionResolver.html#method___construct", "name": "Illuminate\\Database\\ConnectionResolver::__construct", "doc": "&quot;Create a new connection resolver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolver", "fromLink": "Illuminate/Database/ConnectionResolver.html", "link": "Illuminate/Database/ConnectionResolver.html#method_connection", "name": "Illuminate\\Database\\ConnectionResolver::connection", "doc": "&quot;Get a database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolver", "fromLink": "Illuminate/Database/ConnectionResolver.html", "link": "Illuminate/Database/ConnectionResolver.html#method_addConnection", "name": "Illuminate\\Database\\ConnectionResolver::addConnection", "doc": "&quot;Add a connection to the resolver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolver", "fromLink": "Illuminate/Database/ConnectionResolver.html", "link": "Illuminate/Database/ConnectionResolver.html#method_hasConnection", "name": "Illuminate\\Database\\ConnectionResolver::hasConnection", "doc": "&quot;Check if a connection has been registered.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolver", "fromLink": "Illuminate/Database/ConnectionResolver.html", "link": "Illuminate/Database/ConnectionResolver.html#method_getDefaultConnection", "name": "Illuminate\\Database\\ConnectionResolver::getDefaultConnection", "doc": "&quot;Get the default connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolver", "fromLink": "Illuminate/Database/ConnectionResolver.html", "link": "Illuminate/Database/ConnectionResolver.html#method_setDefaultConnection", "name": "Illuminate\\Database\\ConnectionResolver::setDefaultConnection", "doc": "&quot;Set the default connection name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/ConnectionResolverInterface.html", "name": "Illuminate\\Database\\ConnectionResolverInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolverInterface", "fromLink": "Illuminate/Database/ConnectionResolverInterface.html", "link": "Illuminate/Database/ConnectionResolverInterface.html#method_connection", "name": "Illuminate\\Database\\ConnectionResolverInterface::connection", "doc": "&quot;Get a database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolverInterface", "fromLink": "Illuminate/Database/ConnectionResolverInterface.html", "link": "Illuminate/Database/ConnectionResolverInterface.html#method_getDefaultConnection", "name": "Illuminate\\Database\\ConnectionResolverInterface::getDefaultConnection", "doc": "&quot;Get the default connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\ConnectionResolverInterface", "fromLink": "Illuminate/Database/ConnectionResolverInterface.html", "link": "Illuminate/Database/ConnectionResolverInterface.html#method_setDefaultConnection", "name": "Illuminate\\Database\\ConnectionResolverInterface::setDefaultConnection", "doc": "&quot;Set the default connection name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Connectors", "fromLink": "Illuminate/Database/Connectors.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method___construct", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::__construct", "doc": "&quot;Create a new connection factory instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_make", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::make", "doc": "&quot;Establish a PDO connection based on the configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_createSingleConnection", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::createSingleConnection", "doc": "&quot;Create a single database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_createReadWriteConnection", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::createReadWriteConnection", "doc": "&quot;Create a single database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_createReadPdo", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::createReadPdo", "doc": "&quot;Create a new PDO instance for reading.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_getReadConfig", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::getReadConfig", "doc": "&quot;Get the read configuration for a read \/ write connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_getWriteConfig", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::getWriteConfig", "doc": "&quot;Get the read configuration for a read \/ write connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_getReadWriteConfig", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::getReadWriteConfig", "doc": "&quot;Get a read \/ write level configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_mergeReadWriteConfig", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::mergeReadWriteConfig", "doc": "&quot;Merge a configuration for a read \/ write connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_parseConfig", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::parseConfig", "doc": "&quot;Parse and prepare the database configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_createConnector", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::createConnector", "doc": "&quot;Create a connector instance based on the configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectionFactory", "fromLink": "Illuminate/Database/Connectors/ConnectionFactory.html", "link": "Illuminate/Database/Connectors/ConnectionFactory.html#method_createConnection", "name": "Illuminate\\Database\\Connectors\\ConnectionFactory::createConnection", "doc": "&quot;Create a new connection instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Connectors", "fromLink": "Illuminate/Database/Connectors.html", "link": "Illuminate/Database/Connectors/Connector.html", "name": "Illuminate\\Database\\Connectors\\Connector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\Connector", "fromLink": "Illuminate/Database/Connectors/Connector.html", "link": "Illuminate/Database/Connectors/Connector.html#method_getOptions", "name": "Illuminate\\Database\\Connectors\\Connector::getOptions", "doc": "&quot;Get the PDO options based on the configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\Connector", "fromLink": "Illuminate/Database/Connectors/Connector.html", "link": "Illuminate/Database/Connectors/Connector.html#method_createConnection", "name": "Illuminate\\Database\\Connectors\\Connector::createConnection", "doc": "&quot;Create a new PDO connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\Connector", "fromLink": "Illuminate/Database/Connectors/Connector.html", "link": "Illuminate/Database/Connectors/Connector.html#method_getDefaultOptions", "name": "Illuminate\\Database\\Connectors\\Connector::getDefaultOptions", "doc": "&quot;Get the default PDO connection options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\Connector", "fromLink": "Illuminate/Database/Connectors/Connector.html", "link": "Illuminate/Database/Connectors/Connector.html#method_setDefaultOptions", "name": "Illuminate\\Database\\Connectors\\Connector::setDefaultOptions", "doc": "&quot;Set the default PDO connection options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Connectors", "fromLink": "Illuminate/Database/Connectors.html", "link": "Illuminate/Database/Connectors/ConnectorInterface.html", "name": "Illuminate\\Database\\Connectors\\ConnectorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\ConnectorInterface", "fromLink": "Illuminate/Database/Connectors/ConnectorInterface.html", "link": "Illuminate/Database/Connectors/ConnectorInterface.html#method_connect", "name": "Illuminate\\Database\\Connectors\\ConnectorInterface::connect", "doc": "&quot;Establish a database connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Connectors", "fromLink": "Illuminate/Database/Connectors.html", "link": "Illuminate/Database/Connectors/MySqlConnector.html", "name": "Illuminate\\Database\\Connectors\\MySqlConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\MySqlConnector", "fromLink": "Illuminate/Database/Connectors/MySqlConnector.html", "link": "Illuminate/Database/Connectors/MySqlConnector.html#method_connect", "name": "Illuminate\\Database\\Connectors\\MySqlConnector::connect", "doc": "&quot;Establish a database connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\MySqlConnector", "fromLink": "Illuminate/Database/Connectors/MySqlConnector.html", "link": "Illuminate/Database/Connectors/MySqlConnector.html#method_getDsn", "name": "Illuminate\\Database\\Connectors\\MySqlConnector::getDsn", "doc": "&quot;Create a DSN string from a configuration. Chooses socket or host\/port based on\nthe &#039;unix_socket&#039; config value&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\MySqlConnector", "fromLink": "Illuminate/Database/Connectors/MySqlConnector.html", "link": "Illuminate/Database/Connectors/MySqlConnector.html#method_configHasSocket", "name": "Illuminate\\Database\\Connectors\\MySqlConnector::configHasSocket", "doc": "&quot;Determine if the given configuration array has a UNIX socket value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\MySqlConnector", "fromLink": "Illuminate/Database/Connectors/MySqlConnector.html", "link": "Illuminate/Database/Connectors/MySqlConnector.html#method_getSocketDsn", "name": "Illuminate\\Database\\Connectors\\MySqlConnector::getSocketDsn", "doc": "&quot;Get the DSN string for a socket configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\MySqlConnector", "fromLink": "Illuminate/Database/Connectors/MySqlConnector.html", "link": "Illuminate/Database/Connectors/MySqlConnector.html#method_getHostDsn", "name": "Illuminate\\Database\\Connectors\\MySqlConnector::getHostDsn", "doc": "&quot;Get the DSN string for a host \/ port configuration.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Connectors", "fromLink": "Illuminate/Database/Connectors.html", "link": "Illuminate/Database/Connectors/PostgresConnector.html", "name": "Illuminate\\Database\\Connectors\\PostgresConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\PostgresConnector", "fromLink": "Illuminate/Database/Connectors/PostgresConnector.html", "link": "Illuminate/Database/Connectors/PostgresConnector.html#method_connect", "name": "Illuminate\\Database\\Connectors\\PostgresConnector::connect", "doc": "&quot;Establish a database connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\PostgresConnector", "fromLink": "Illuminate/Database/Connectors/PostgresConnector.html", "link": "Illuminate/Database/Connectors/PostgresConnector.html#method_getDsn", "name": "Illuminate\\Database\\Connectors\\PostgresConnector::getDsn", "doc": "&quot;Create a DSN string from a configuration.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Connectors", "fromLink": "Illuminate/Database/Connectors.html", "link": "Illuminate/Database/Connectors/SQLiteConnector.html", "name": "Illuminate\\Database\\Connectors\\SQLiteConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\SQLiteConnector", "fromLink": "Illuminate/Database/Connectors/SQLiteConnector.html", "link": "Illuminate/Database/Connectors/SQLiteConnector.html#method_connect", "name": "Illuminate\\Database\\Connectors\\SQLiteConnector::connect", "doc": "&quot;Establish a database connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Connectors", "fromLink": "Illuminate/Database/Connectors.html", "link": "Illuminate/Database/Connectors/SqlServerConnector.html", "name": "Illuminate\\Database\\Connectors\\SqlServerConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\SqlServerConnector", "fromLink": "Illuminate/Database/Connectors/SqlServerConnector.html", "link": "Illuminate/Database/Connectors/SqlServerConnector.html#method_connect", "name": "Illuminate\\Database\\Connectors\\SqlServerConnector::connect", "doc": "&quot;Establish a database connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\SqlServerConnector", "fromLink": "Illuminate/Database/Connectors/SqlServerConnector.html", "link": "Illuminate/Database/Connectors/SqlServerConnector.html#method_getDsn", "name": "Illuminate\\Database\\Connectors\\SqlServerConnector::getDsn", "doc": "&quot;Create a DSN string from a configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Connectors\\SqlServerConnector", "fromLink": "Illuminate/Database/Connectors/SqlServerConnector.html", "link": "Illuminate/Database/Connectors/SqlServerConnector.html#method_getAvailableDrivers", "name": "Illuminate\\Database\\Connectors\\SqlServerConnector::getAvailableDrivers", "doc": "&quot;Get the available PDO drivers.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Console\\Migrations", "fromLink": "Illuminate/Database/Console/Migrations.html", "link": "Illuminate/Database/Console/Migrations/BaseCommand.html", "name": "Illuminate\\Database\\Console\\Migrations\\BaseCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\BaseCommand", "fromLink": "Illuminate/Database/Console/Migrations/BaseCommand.html", "link": "Illuminate/Database/Console/Migrations/BaseCommand.html#method_getMigrationPath", "name": "Illuminate\\Database\\Console\\Migrations\\BaseCommand::getMigrationPath", "doc": "&quot;Get the path to the migration directory.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Console\\Migrations", "fromLink": "Illuminate/Database/Console/Migrations.html", "link": "Illuminate/Database/Console/Migrations/InstallCommand.html", "name": "Illuminate\\Database\\Console\\Migrations\\InstallCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\InstallCommand", "fromLink": "Illuminate/Database/Console/Migrations/InstallCommand.html", "link": "Illuminate/Database/Console/Migrations/InstallCommand.html#method___construct", "name": "Illuminate\\Database\\Console\\Migrations\\InstallCommand::__construct", "doc": "&quot;Create a new migration install command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\InstallCommand", "fromLink": "Illuminate/Database/Console/Migrations/InstallCommand.html", "link": "Illuminate/Database/Console/Migrations/InstallCommand.html#method_fire", "name": "Illuminate\\Database\\Console\\Migrations\\InstallCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\InstallCommand", "fromLink": "Illuminate/Database/Console/Migrations/InstallCommand.html", "link": "Illuminate/Database/Console/Migrations/InstallCommand.html#method_getOptions", "name": "Illuminate\\Database\\Console\\Migrations\\InstallCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Console\\Migrations", "fromLink": "Illuminate/Database/Console/Migrations.html", "link": "Illuminate/Database/Console/Migrations/MigrateCommand.html", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateCommand.html#method___construct", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand::__construct", "doc": "&quot;Create a new migration command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateCommand.html#method_fire", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateCommand.html#method_prepareDatabase", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand::prepareDatabase", "doc": "&quot;Prepare the migration database for running.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateCommand.html#method_getOptions", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Console\\Migrations", "fromLink": "Illuminate/Database/Console/Migrations.html", "link": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method___construct", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::__construct", "doc": "&quot;Create a new migration install command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_fire", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_writeMigration", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::writeMigration", "doc": "&quot;Write the migration file to disk.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_getArguments", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand", "fromLink": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html", "link": "Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_getOptions", "name": "Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Console\\Migrations", "fromLink": "Illuminate/Database/Console/Migrations.html", "link": "Illuminate/Database/Console/Migrations/RefreshCommand.html", "name": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand", "fromLink": "Illuminate/Database/Console/Migrations/RefreshCommand.html", "link": "Illuminate/Database/Console/Migrations/RefreshCommand.html#method_fire", "name": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand", "fromLink": "Illuminate/Database/Console/Migrations/RefreshCommand.html", "link": "Illuminate/Database/Console/Migrations/RefreshCommand.html#method_needsSeeding", "name": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand::needsSeeding", "doc": "&quot;Determine if the developer has requested database seeding.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand", "fromLink": "Illuminate/Database/Console/Migrations/RefreshCommand.html", "link": "Illuminate/Database/Console/Migrations/RefreshCommand.html#method_runSeeder", "name": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand::runSeeder", "doc": "&quot;Run the database seeder command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand", "fromLink": "Illuminate/Database/Console/Migrations/RefreshCommand.html", "link": "Illuminate/Database/Console/Migrations/RefreshCommand.html#method_getOptions", "name": "Illuminate\\Database\\Console\\Migrations\\RefreshCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Console\\Migrations", "fromLink": "Illuminate/Database/Console/Migrations.html", "link": "Illuminate/Database/Console/Migrations/ResetCommand.html", "name": "Illuminate\\Database\\Console\\Migrations\\ResetCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\ResetCommand", "fromLink": "Illuminate/Database/Console/Migrations/ResetCommand.html", "link": "Illuminate/Database/Console/Migrations/ResetCommand.html#method___construct", "name": "Illuminate\\Database\\Console\\Migrations\\ResetCommand::__construct", "doc": "&quot;Create a new migration rollback command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\ResetCommand", "fromLink": "Illuminate/Database/Console/Migrations/ResetCommand.html", "link": "Illuminate/Database/Console/Migrations/ResetCommand.html#method_fire", "name": "Illuminate\\Database\\Console\\Migrations\\ResetCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\ResetCommand", "fromLink": "Illuminate/Database/Console/Migrations/ResetCommand.html", "link": "Illuminate/Database/Console/Migrations/ResetCommand.html#method_getOptions", "name": "Illuminate\\Database\\Console\\Migrations\\ResetCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Console\\Migrations", "fromLink": "Illuminate/Database/Console/Migrations.html", "link": "Illuminate/Database/Console/Migrations/RollbackCommand.html", "name": "Illuminate\\Database\\Console\\Migrations\\RollbackCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\RollbackCommand", "fromLink": "Illuminate/Database/Console/Migrations/RollbackCommand.html", "link": "Illuminate/Database/Console/Migrations/RollbackCommand.html#method___construct", "name": "Illuminate\\Database\\Console\\Migrations\\RollbackCommand::__construct", "doc": "&quot;Create a new migration rollback command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\RollbackCommand", "fromLink": "Illuminate/Database/Console/Migrations/RollbackCommand.html", "link": "Illuminate/Database/Console/Migrations/RollbackCommand.html#method_fire", "name": "Illuminate\\Database\\Console\\Migrations\\RollbackCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\Migrations\\RollbackCommand", "fromLink": "Illuminate/Database/Console/Migrations/RollbackCommand.html", "link": "Illuminate/Database/Console/Migrations/RollbackCommand.html#method_getOptions", "name": "Illuminate\\Database\\Console\\Migrations\\RollbackCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Console", "fromLink": "Illuminate/Database/Console.html", "link": "Illuminate/Database/Console/SeedCommand.html", "name": "Illuminate\\Database\\Console\\SeedCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Console\\SeedCommand", "fromLink": "Illuminate/Database/Console/SeedCommand.html", "link": "Illuminate/Database/Console/SeedCommand.html#method___construct", "name": "Illuminate\\Database\\Console\\SeedCommand::__construct", "doc": "&quot;Create a new database seed command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\SeedCommand", "fromLink": "Illuminate/Database/Console/SeedCommand.html", "link": "Illuminate/Database/Console/SeedCommand.html#method_fire", "name": "Illuminate\\Database\\Console\\SeedCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\SeedCommand", "fromLink": "Illuminate/Database/Console/SeedCommand.html", "link": "Illuminate/Database/Console/SeedCommand.html#method_getSeeder", "name": "Illuminate\\Database\\Console\\SeedCommand::getSeeder", "doc": "&quot;Get a seeder instance from the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\SeedCommand", "fromLink": "Illuminate/Database/Console/SeedCommand.html", "link": "Illuminate/Database/Console/SeedCommand.html#method_getDatabase", "name": "Illuminate\\Database\\Console\\SeedCommand::getDatabase", "doc": "&quot;Get the name of the database connection to use.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Console\\SeedCommand", "fromLink": "Illuminate/Database/Console/SeedCommand.html", "link": "Illuminate/Database/Console/SeedCommand.html#method_getOptions", "name": "Illuminate\\Database\\Console\\SeedCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/DatabaseManager.html", "name": "Illuminate\\Database\\DatabaseManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method___construct", "name": "Illuminate\\Database\\DatabaseManager::__construct", "doc": "&quot;Create a new database manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_connection", "name": "Illuminate\\Database\\DatabaseManager::connection", "doc": "&quot;Get a database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_parseConnectionName", "name": "Illuminate\\Database\\DatabaseManager::parseConnectionName", "doc": "&quot;Parse the connection into an array of the name and read \/ write type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_purge", "name": "Illuminate\\Database\\DatabaseManager::purge", "doc": "&quot;Disconnect from the given database and remove from local cache.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_disconnect", "name": "Illuminate\\Database\\DatabaseManager::disconnect", "doc": "&quot;Disconnect from the given database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_reconnect", "name": "Illuminate\\Database\\DatabaseManager::reconnect", "doc": "&quot;Reconnect to the given database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_refreshPdoConnections", "name": "Illuminate\\Database\\DatabaseManager::refreshPdoConnections", "doc": "&quot;Refresh the PDO connections on a given connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_makeConnection", "name": "Illuminate\\Database\\DatabaseManager::makeConnection", "doc": "&quot;Make the database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_prepare", "name": "Illuminate\\Database\\DatabaseManager::prepare", "doc": "&quot;Prepare the database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_setPdoForType", "name": "Illuminate\\Database\\DatabaseManager::setPdoForType", "doc": "&quot;Prepare the read write mode for database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_getConfig", "name": "Illuminate\\Database\\DatabaseManager::getConfig", "doc": "&quot;Get the configuration for a connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_getDefaultConnection", "name": "Illuminate\\Database\\DatabaseManager::getDefaultConnection", "doc": "&quot;Get the default connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_setDefaultConnection", "name": "Illuminate\\Database\\DatabaseManager::setDefaultConnection", "doc": "&quot;Set the default connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_extend", "name": "Illuminate\\Database\\DatabaseManager::extend", "doc": "&quot;Register an extension connection resolver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method_getConnections", "name": "Illuminate\\Database\\DatabaseManager::getConnections", "doc": "&quot;Return all of the created connections.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseManager", "fromLink": "Illuminate/Database/DatabaseManager.html", "link": "Illuminate/Database/DatabaseManager.html#method___call", "name": "Illuminate\\Database\\DatabaseManager::__call", "doc": "&quot;Dynamically pass methods to the default connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/DatabaseServiceProvider.html", "name": "Illuminate\\Database\\DatabaseServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseServiceProvider", "fromLink": "Illuminate/Database/DatabaseServiceProvider.html", "link": "Illuminate/Database/DatabaseServiceProvider.html#method_boot", "name": "Illuminate\\Database\\DatabaseServiceProvider::boot", "doc": "&quot;Bootstrap the application events.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\DatabaseServiceProvider", "fromLink": "Illuminate/Database/DatabaseServiceProvider.html", "link": "Illuminate/Database/DatabaseServiceProvider.html#method_register", "name": "Illuminate\\Database\\DatabaseServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/Builder.html", "name": "Illuminate\\Database\\Eloquent\\Builder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Builder::__construct", "doc": "&quot;Create a new Eloquent query builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_find", "name": "Illuminate\\Database\\Eloquent\\Builder::find", "doc": "&quot;Find a model by its primary key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_findMany", "name": "Illuminate\\Database\\Eloquent\\Builder::findMany", "doc": "&quot;Find a model by its primary key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_findOrFail", "name": "Illuminate\\Database\\Eloquent\\Builder::findOrFail", "doc": "&quot;Find a model by its primary key or throw an exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_first", "name": "Illuminate\\Database\\Eloquent\\Builder::first", "doc": "&quot;Execute the query and get the first result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_firstOrFail", "name": "Illuminate\\Database\\Eloquent\\Builder::firstOrFail", "doc": "&quot;Execute the query and get the first result or throw an exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_get", "name": "Illuminate\\Database\\Eloquent\\Builder::get", "doc": "&quot;Execute the query as a \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_pluck", "name": "Illuminate\\Database\\Eloquent\\Builder::pluck", "doc": "&quot;Pluck a single column from the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_chunk", "name": "Illuminate\\Database\\Eloquent\\Builder::chunk", "doc": "&quot;Chunk the results of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_lists", "name": "Illuminate\\Database\\Eloquent\\Builder::lists", "doc": "&quot;Get an array with the values of a given column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_paginate", "name": "Illuminate\\Database\\Eloquent\\Builder::paginate", "doc": "&quot;Get a paginator for the \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_groupedPaginate", "name": "Illuminate\\Database\\Eloquent\\Builder::groupedPaginate", "doc": "&quot;Get a paginator for a grouped statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_ungroupedPaginate", "name": "Illuminate\\Database\\Eloquent\\Builder::ungroupedPaginate", "doc": "&quot;Get a paginator for an ungrouped statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_simplePaginate", "name": "Illuminate\\Database\\Eloquent\\Builder::simplePaginate", "doc": "&quot;Get a paginator only supporting simple next and previous links.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_update", "name": "Illuminate\\Database\\Eloquent\\Builder::update", "doc": "&quot;Update a record in the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_increment", "name": "Illuminate\\Database\\Eloquent\\Builder::increment", "doc": "&quot;Increment a column&#039;s value by a given amount.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_decrement", "name": "Illuminate\\Database\\Eloquent\\Builder::decrement", "doc": "&quot;Decrement a column&#039;s value by a given amount.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_addUpdatedAtColumn", "name": "Illuminate\\Database\\Eloquent\\Builder::addUpdatedAtColumn", "doc": "&quot;Add the \&quot;updated at\&quot; column to an array of values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_delete", "name": "Illuminate\\Database\\Eloquent\\Builder::delete", "doc": "&quot;Delete a record from the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_forceDelete", "name": "Illuminate\\Database\\Eloquent\\Builder::forceDelete", "doc": "&quot;Run the default delete function on the builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_onDelete", "name": "Illuminate\\Database\\Eloquent\\Builder::onDelete", "doc": "&quot;Register a replacement for the default delete function.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_getModels", "name": "Illuminate\\Database\\Eloquent\\Builder::getModels", "doc": "&quot;Get the hydrated models without eager loading.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_eagerLoadRelations", "name": "Illuminate\\Database\\Eloquent\\Builder::eagerLoadRelations", "doc": "&quot;Eager load the relationships for the models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_loadRelation", "name": "Illuminate\\Database\\Eloquent\\Builder::loadRelation", "doc": "&quot;Eagerly load the relationship on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_getRelation", "name": "Illuminate\\Database\\Eloquent\\Builder::getRelation", "doc": "&quot;Get the relation instance for the given relation name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_nestedRelations", "name": "Illuminate\\Database\\Eloquent\\Builder::nestedRelations", "doc": "&quot;Get the deeply nested relations for a given top-level relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_isNested", "name": "Illuminate\\Database\\Eloquent\\Builder::isNested", "doc": "&quot;Determine if the relationship is nested.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_where", "name": "Illuminate\\Database\\Eloquent\\Builder::where", "doc": "&quot;Add a basic where clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_orWhere", "name": "Illuminate\\Database\\Eloquent\\Builder::orWhere", "doc": "&quot;Add an \&quot;or where\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_has", "name": "Illuminate\\Database\\Eloquent\\Builder::has", "doc": "&quot;Add a relationship count condition to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_hasNested", "name": "Illuminate\\Database\\Eloquent\\Builder::hasNested", "doc": "&quot;Add nested relationship count conditions to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_doesntHave", "name": "Illuminate\\Database\\Eloquent\\Builder::doesntHave", "doc": "&quot;Add a relationship count condition to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_whereHas", "name": "Illuminate\\Database\\Eloquent\\Builder::whereHas", "doc": "&quot;Add a relationship count condition to the query with where clauses.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_whereDoesntHave", "name": "Illuminate\\Database\\Eloquent\\Builder::whereDoesntHave", "doc": "&quot;Add a relationship count condition to the query with where clauses.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_orHas", "name": "Illuminate\\Database\\Eloquent\\Builder::orHas", "doc": "&quot;Add a relationship count condition to the query with an \&quot;or\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_orWhereHas", "name": "Illuminate\\Database\\Eloquent\\Builder::orWhereHas", "doc": "&quot;Add a relationship count condition to the query with where clauses and an \&quot;or\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_addHasWhere", "name": "Illuminate\\Database\\Eloquent\\Builder::addHasWhere", "doc": "&quot;Add the \&quot;has\&quot; condition where clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_mergeWheresToHas", "name": "Illuminate\\Database\\Eloquent\\Builder::mergeWheresToHas", "doc": "&quot;Merge the \&quot;wheres\&quot; from a relation query to a has query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_getHasRelationQuery", "name": "Illuminate\\Database\\Eloquent\\Builder::getHasRelationQuery", "doc": "&quot;Get the \&quot;has relation\&quot; base query instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_with", "name": "Illuminate\\Database\\Eloquent\\Builder::with", "doc": "&quot;Set the relationships that should be eager loaded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_parseRelations", "name": "Illuminate\\Database\\Eloquent\\Builder::parseRelations", "doc": "&quot;Parse a list of relations into individuals.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_parseNested", "name": "Illuminate\\Database\\Eloquent\\Builder::parseNested", "doc": "&quot;Parse the nested relationships in a relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_callScope", "name": "Illuminate\\Database\\Eloquent\\Builder::callScope", "doc": "&quot;Call the given model scope on the underlying model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_getQuery", "name": "Illuminate\\Database\\Eloquent\\Builder::getQuery", "doc": "&quot;Get the underlying query builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_setQuery", "name": "Illuminate\\Database\\Eloquent\\Builder::setQuery", "doc": "&quot;Set the underlying query builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_getEagerLoads", "name": "Illuminate\\Database\\Eloquent\\Builder::getEagerLoads", "doc": "&quot;Get the relationships being eagerly loaded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_setEagerLoads", "name": "Illuminate\\Database\\Eloquent\\Builder::setEagerLoads", "doc": "&quot;Set the relationships being eagerly loaded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_getModel", "name": "Illuminate\\Database\\Eloquent\\Builder::getModel", "doc": "&quot;Get the model instance being queried.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_setModel", "name": "Illuminate\\Database\\Eloquent\\Builder::setModel", "doc": "&quot;Set a model instance for the model being queried.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_macro", "name": "Illuminate\\Database\\Eloquent\\Builder::macro", "doc": "&quot;Extend the builder with a given callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method_getMacro", "name": "Illuminate\\Database\\Eloquent\\Builder::getMacro", "doc": "&quot;Get the given macro by name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method___call", "name": "Illuminate\\Database\\Eloquent\\Builder::__call", "doc": "&quot;Dynamically handle calls into the query instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Builder", "fromLink": "Illuminate/Database/Eloquent/Builder.html", "link": "Illuminate/Database/Eloquent/Builder.html#method___clone", "name": "Illuminate\\Database\\Eloquent\\Builder::__clone", "doc": "&quot;Force a clone of the underlying query builder when cloning.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/Collection.html", "name": "Illuminate\\Database\\Eloquent\\Collection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_find", "name": "Illuminate\\Database\\Eloquent\\Collection::find", "doc": "&quot;Find a model in the collection by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_load", "name": "Illuminate\\Database\\Eloquent\\Collection::load", "doc": "&quot;Load a set of relationships onto the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_add", "name": "Illuminate\\Database\\Eloquent\\Collection::add", "doc": "&quot;Add an item to the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_contains", "name": "Illuminate\\Database\\Eloquent\\Collection::contains", "doc": "&quot;Determine if a key exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_fetch", "name": "Illuminate\\Database\\Eloquent\\Collection::fetch", "doc": "&quot;Fetch a nested element of the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_max", "name": "Illuminate\\Database\\Eloquent\\Collection::max", "doc": "&quot;Get the max value of a given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_min", "name": "Illuminate\\Database\\Eloquent\\Collection::min", "doc": "&quot;Get the min value of a given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_modelKeys", "name": "Illuminate\\Database\\Eloquent\\Collection::modelKeys", "doc": "&quot;Get the array of primary keys&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_merge", "name": "Illuminate\\Database\\Eloquent\\Collection::merge", "doc": "&quot;Merge the collection with the given items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_diff", "name": "Illuminate\\Database\\Eloquent\\Collection::diff", "doc": "&quot;Diff the collection with the given items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_intersect", "name": "Illuminate\\Database\\Eloquent\\Collection::intersect", "doc": "&quot;Intersect the collection with the given items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_unique", "name": "Illuminate\\Database\\Eloquent\\Collection::unique", "doc": "&quot;Return only unique items from the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_only", "name": "Illuminate\\Database\\Eloquent\\Collection::only", "doc": "&quot;Returns only the models from the collection with the specified keys.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_except", "name": "Illuminate\\Database\\Eloquent\\Collection::except", "doc": "&quot;Returns all models in the collection except the models with specified keys.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_getDictionary", "name": "Illuminate\\Database\\Eloquent\\Collection::getDictionary", "doc": "&quot;Get a dictionary keyed by primary keys.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Collection", "fromLink": "Illuminate/Database/Eloquent/Collection.html", "link": "Illuminate/Database/Eloquent/Collection.html#method_toBase", "name": "Illuminate\\Database\\Eloquent\\Collection::toBase", "doc": "&quot;Get a base Support collection instance from this collection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/MassAssignmentException.html", "name": "Illuminate\\Database\\Eloquent\\MassAssignmentException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/Model.html", "name": "Illuminate\\Database\\Eloquent\\Model", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Model::__construct", "doc": "&quot;Create a new Eloquent model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_bootIfNotBooted", "name": "Illuminate\\Database\\Eloquent\\Model::bootIfNotBooted", "doc": "&quot;Check if the model needs to be booted and if so, do it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_boot", "name": "Illuminate\\Database\\Eloquent\\Model::boot", "doc": "&quot;The \&quot;booting\&quot; method of the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_bootTraits", "name": "Illuminate\\Database\\Eloquent\\Model::bootTraits", "doc": "&quot;Boot all of the bootable traits on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_addGlobalScope", "name": "Illuminate\\Database\\Eloquent\\Model::addGlobalScope", "doc": "&quot;Register a new global scope on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_hasGlobalScope", "name": "Illuminate\\Database\\Eloquent\\Model::hasGlobalScope", "doc": "&quot;Determine if a model has a global scope.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getGlobalScope", "name": "Illuminate\\Database\\Eloquent\\Model::getGlobalScope", "doc": "&quot;Get a global scope registered with the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getGlobalScopes", "name": "Illuminate\\Database\\Eloquent\\Model::getGlobalScopes", "doc": "&quot;Get the global scopes for this class instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_observe", "name": "Illuminate\\Database\\Eloquent\\Model::observe", "doc": "&quot;Register an observer with the Model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_fill", "name": "Illuminate\\Database\\Eloquent\\Model::fill", "doc": "&quot;Fill the model with an array of attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_fillableFromArray", "name": "Illuminate\\Database\\Eloquent\\Model::fillableFromArray", "doc": "&quot;Get the fillable attributes of a given array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newInstance", "name": "Illuminate\\Database\\Eloquent\\Model::newInstance", "doc": "&quot;Create a new instance of the given model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newFromBuilder", "name": "Illuminate\\Database\\Eloquent\\Model::newFromBuilder", "doc": "&quot;Create a new model instance that is existing.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_hydrate", "name": "Illuminate\\Database\\Eloquent\\Model::hydrate", "doc": "&quot;Create a collection of models from plain arrays.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_hydrateRaw", "name": "Illuminate\\Database\\Eloquent\\Model::hydrateRaw", "doc": "&quot;Create a collection of models from a raw query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_create", "name": "Illuminate\\Database\\Eloquent\\Model::create", "doc": "&quot;Save a new model and return the instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_firstOrCreate", "name": "Illuminate\\Database\\Eloquent\\Model::firstOrCreate", "doc": "&quot;Get the first record matching the attributes or create it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_firstOrNew", "name": "Illuminate\\Database\\Eloquent\\Model::firstOrNew", "doc": "&quot;Get the first record matching the attributes or instantiate it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_updateOrCreate", "name": "Illuminate\\Database\\Eloquent\\Model::updateOrCreate", "doc": "&quot;Create or update a record matching the attributes, and fill it with values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_firstByAttributes", "name": "Illuminate\\Database\\Eloquent\\Model::firstByAttributes", "doc": "&quot;Get the first model for the given attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_query", "name": "Illuminate\\Database\\Eloquent\\Model::query", "doc": "&quot;Begin querying the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_on", "name": "Illuminate\\Database\\Eloquent\\Model::on", "doc": "&quot;Begin querying the model on a given connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_onWriteConnection", "name": "Illuminate\\Database\\Eloquent\\Model::onWriteConnection", "doc": "&quot;Begin querying the model on the write connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_all", "name": "Illuminate\\Database\\Eloquent\\Model::all", "doc": "&quot;Get all of the models from the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_find", "name": "Illuminate\\Database\\Eloquent\\Model::find", "doc": "&quot;Find a model by its primary key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_findOrNew", "name": "Illuminate\\Database\\Eloquent\\Model::findOrNew", "doc": "&quot;Find a model by its primary key or return new static.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_findOrFail", "name": "Illuminate\\Database\\Eloquent\\Model::findOrFail", "doc": "&quot;Find a model by its primary key or throw an exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_load", "name": "Illuminate\\Database\\Eloquent\\Model::load", "doc": "&quot;Eager load relations on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_with", "name": "Illuminate\\Database\\Eloquent\\Model::with", "doc": "&quot;Being querying a model with eager loading.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_hasOne", "name": "Illuminate\\Database\\Eloquent\\Model::hasOne", "doc": "&quot;Define a one-to-one relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_morphOne", "name": "Illuminate\\Database\\Eloquent\\Model::morphOne", "doc": "&quot;Define a polymorphic one-to-one relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_belongsTo", "name": "Illuminate\\Database\\Eloquent\\Model::belongsTo", "doc": "&quot;Define an inverse one-to-one or many relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_morphTo", "name": "Illuminate\\Database\\Eloquent\\Model::morphTo", "doc": "&quot;Define a polymorphic, inverse one-to-one or many relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_hasMany", "name": "Illuminate\\Database\\Eloquent\\Model::hasMany", "doc": "&quot;Define a one-to-many relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_hasManyThrough", "name": "Illuminate\\Database\\Eloquent\\Model::hasManyThrough", "doc": "&quot;Define a has-many-through relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_morphMany", "name": "Illuminate\\Database\\Eloquent\\Model::morphMany", "doc": "&quot;Define a polymorphic one-to-many relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_belongsToMany", "name": "Illuminate\\Database\\Eloquent\\Model::belongsToMany", "doc": "&quot;Define a many-to-many relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_morphToMany", "name": "Illuminate\\Database\\Eloquent\\Model::morphToMany", "doc": "&quot;Define a polymorphic many-to-many relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_morphedByMany", "name": "Illuminate\\Database\\Eloquent\\Model::morphedByMany", "doc": "&quot;Define a polymorphic, inverse many-to-many relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getBelongsToManyCaller", "name": "Illuminate\\Database\\Eloquent\\Model::getBelongsToManyCaller", "doc": "&quot;Get the relationship name of the belongs to many.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_joiningTable", "name": "Illuminate\\Database\\Eloquent\\Model::joiningTable", "doc": "&quot;Get the joining table name for a many-to-many relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_destroy", "name": "Illuminate\\Database\\Eloquent\\Model::destroy", "doc": "&quot;Destroy the models for the given IDs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_delete", "name": "Illuminate\\Database\\Eloquent\\Model::delete", "doc": "&quot;Delete the model from the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_forceDelete", "name": "Illuminate\\Database\\Eloquent\\Model::forceDelete", "doc": "&quot;Force a hard delete on a soft deleted model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_performDeleteOnModel", "name": "Illuminate\\Database\\Eloquent\\Model::performDeleteOnModel", "doc": "&quot;Perform the actual delete query on this model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_saving", "name": "Illuminate\\Database\\Eloquent\\Model::saving", "doc": "&quot;Register a saving model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_saved", "name": "Illuminate\\Database\\Eloquent\\Model::saved", "doc": "&quot;Register a saved model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_updating", "name": "Illuminate\\Database\\Eloquent\\Model::updating", "doc": "&quot;Register an updating model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_updated", "name": "Illuminate\\Database\\Eloquent\\Model::updated", "doc": "&quot;Register an updated model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_creating", "name": "Illuminate\\Database\\Eloquent\\Model::creating", "doc": "&quot;Register a creating model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_created", "name": "Illuminate\\Database\\Eloquent\\Model::created", "doc": "&quot;Register a created model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_deleting", "name": "Illuminate\\Database\\Eloquent\\Model::deleting", "doc": "&quot;Register a deleting model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_deleted", "name": "Illuminate\\Database\\Eloquent\\Model::deleted", "doc": "&quot;Register a deleted model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_flushEventListeners", "name": "Illuminate\\Database\\Eloquent\\Model::flushEventListeners", "doc": "&quot;Remove all of the event listeners for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_registerModelEvent", "name": "Illuminate\\Database\\Eloquent\\Model::registerModelEvent", "doc": "&quot;Register a model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getObservableEvents", "name": "Illuminate\\Database\\Eloquent\\Model::getObservableEvents", "doc": "&quot;Get the observable event names.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setObservableEvents", "name": "Illuminate\\Database\\Eloquent\\Model::setObservableEvents", "doc": "&quot;Set the observable event names.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_addObservableEvents", "name": "Illuminate\\Database\\Eloquent\\Model::addObservableEvents", "doc": "&quot;Add an observable event name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_removeObservableEvents", "name": "Illuminate\\Database\\Eloquent\\Model::removeObservableEvents", "doc": "&quot;Remove an observable event name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_increment", "name": "Illuminate\\Database\\Eloquent\\Model::increment", "doc": "&quot;Increment a column&#039;s value by a given amount.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_decrement", "name": "Illuminate\\Database\\Eloquent\\Model::decrement", "doc": "&quot;Decrement a column&#039;s value by a given amount.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_incrementOrDecrement", "name": "Illuminate\\Database\\Eloquent\\Model::incrementOrDecrement", "doc": "&quot;Run the increment or decrement method on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_incrementOrDecrementAttributeValue", "name": "Illuminate\\Database\\Eloquent\\Model::incrementOrDecrementAttributeValue", "doc": "&quot;Increment the underlying attribute value and sync with original.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_update", "name": "Illuminate\\Database\\Eloquent\\Model::update", "doc": "&quot;Update the model in the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_push", "name": "Illuminate\\Database\\Eloquent\\Model::push", "doc": "&quot;Save the model and all of its relationships.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_save", "name": "Illuminate\\Database\\Eloquent\\Model::save", "doc": "&quot;Save the model to the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_finishSave", "name": "Illuminate\\Database\\Eloquent\\Model::finishSave", "doc": "&quot;Finish processing on a successful save operation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_performUpdate", "name": "Illuminate\\Database\\Eloquent\\Model::performUpdate", "doc": "&quot;Perform a model update operation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_performInsert", "name": "Illuminate\\Database\\Eloquent\\Model::performInsert", "doc": "&quot;Perform a model insert operation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_insertAndSetId", "name": "Illuminate\\Database\\Eloquent\\Model::insertAndSetId", "doc": "&quot;Insert the given attributes and set the ID on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_touchOwners", "name": "Illuminate\\Database\\Eloquent\\Model::touchOwners", "doc": "&quot;Touch the owning relations of the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_touches", "name": "Illuminate\\Database\\Eloquent\\Model::touches", "doc": "&quot;Determine if the model touches a given relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_fireModelEvent", "name": "Illuminate\\Database\\Eloquent\\Model::fireModelEvent", "doc": "&quot;Fire the given event for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setKeysForSaveQuery", "name": "Illuminate\\Database\\Eloquent\\Model::setKeysForSaveQuery", "doc": "&quot;Set the keys for a save update query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getKeyForSaveQuery", "name": "Illuminate\\Database\\Eloquent\\Model::getKeyForSaveQuery", "doc": "&quot;Get the primary key value for a save query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_touch", "name": "Illuminate\\Database\\Eloquent\\Model::touch", "doc": "&quot;Update the model&#039;s update timestamp.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_updateTimestamps", "name": "Illuminate\\Database\\Eloquent\\Model::updateTimestamps", "doc": "&quot;Update the creation and update timestamps.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setCreatedAt", "name": "Illuminate\\Database\\Eloquent\\Model::setCreatedAt", "doc": "&quot;Set the value of the \&quot;created at\&quot; attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setUpdatedAt", "name": "Illuminate\\Database\\Eloquent\\Model::setUpdatedAt", "doc": "&quot;Set the value of the \&quot;updated at\&quot; attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getCreatedAtColumn", "name": "Illuminate\\Database\\Eloquent\\Model::getCreatedAtColumn", "doc": "&quot;Get the name of the \&quot;created at\&quot; column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getUpdatedAtColumn", "name": "Illuminate\\Database\\Eloquent\\Model::getUpdatedAtColumn", "doc": "&quot;Get the name of the \&quot;updated at\&quot; column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_freshTimestamp", "name": "Illuminate\\Database\\Eloquent\\Model::freshTimestamp", "doc": "&quot;Get a fresh timestamp for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_freshTimestampString", "name": "Illuminate\\Database\\Eloquent\\Model::freshTimestampString", "doc": "&quot;Get a fresh timestamp for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newQuery", "name": "Illuminate\\Database\\Eloquent\\Model::newQuery", "doc": "&quot;Get a new query builder for the model&#039;s table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newQueryWithoutScope", "name": "Illuminate\\Database\\Eloquent\\Model::newQueryWithoutScope", "doc": "&quot;Get a new query instance without a given scope.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newQueryWithoutScopes", "name": "Illuminate\\Database\\Eloquent\\Model::newQueryWithoutScopes", "doc": "&quot;Get a new query builder that doesn&#039;t have any global scopes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_applyGlobalScopes", "name": "Illuminate\\Database\\Eloquent\\Model::applyGlobalScopes", "doc": "&quot;Apply all of the global scopes to an Eloquent builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_removeGlobalScopes", "name": "Illuminate\\Database\\Eloquent\\Model::removeGlobalScopes", "doc": "&quot;Remove all of the global scopes from an Eloquent builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newEloquentBuilder", "name": "Illuminate\\Database\\Eloquent\\Model::newEloquentBuilder", "doc": "&quot;Create a new Eloquent query builder for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newBaseQueryBuilder", "name": "Illuminate\\Database\\Eloquent\\Model::newBaseQueryBuilder", "doc": "&quot;Get a new query builder instance for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newCollection", "name": "Illuminate\\Database\\Eloquent\\Model::newCollection", "doc": "&quot;Create a new Eloquent Collection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_newPivot", "name": "Illuminate\\Database\\Eloquent\\Model::newPivot", "doc": "&quot;Create a new pivot model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getTable", "name": "Illuminate\\Database\\Eloquent\\Model::getTable", "doc": "&quot;Get the table associated with the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setTable", "name": "Illuminate\\Database\\Eloquent\\Model::setTable", "doc": "&quot;Set the table associated with the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getKey", "name": "Illuminate\\Database\\Eloquent\\Model::getKey", "doc": "&quot;Get the value of the model&#039;s primary key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getKeyName", "name": "Illuminate\\Database\\Eloquent\\Model::getKeyName", "doc": "&quot;Get the primary key for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setKeyName", "name": "Illuminate\\Database\\Eloquent\\Model::setKeyName", "doc": "&quot;Set the primary key for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getQualifiedKeyName", "name": "Illuminate\\Database\\Eloquent\\Model::getQualifiedKeyName", "doc": "&quot;Get the table qualified key name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_usesTimestamps", "name": "Illuminate\\Database\\Eloquent\\Model::usesTimestamps", "doc": "&quot;Determine if the model uses timestamps.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getMorphs", "name": "Illuminate\\Database\\Eloquent\\Model::getMorphs", "doc": "&quot;Get the polymorphic relationship columns.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getMorphClass", "name": "Illuminate\\Database\\Eloquent\\Model::getMorphClass", "doc": "&quot;Get the class name for polymorphic relations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getPerPage", "name": "Illuminate\\Database\\Eloquent\\Model::getPerPage", "doc": "&quot;Get the number of models to return per page.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setPerPage", "name": "Illuminate\\Database\\Eloquent\\Model::setPerPage", "doc": "&quot;Set the number of models to return per page.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getForeignKey", "name": "Illuminate\\Database\\Eloquent\\Model::getForeignKey", "doc": "&quot;Get the default foreign key name for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getHidden", "name": "Illuminate\\Database\\Eloquent\\Model::getHidden", "doc": "&quot;Get the hidden attributes for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setHidden", "name": "Illuminate\\Database\\Eloquent\\Model::setHidden", "doc": "&quot;Set the hidden attributes for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setVisible", "name": "Illuminate\\Database\\Eloquent\\Model::setVisible", "doc": "&quot;Set the visible attributes for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setAppends", "name": "Illuminate\\Database\\Eloquent\\Model::setAppends", "doc": "&quot;Set the accessors to append to model arrays.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getFillable", "name": "Illuminate\\Database\\Eloquent\\Model::getFillable", "doc": "&quot;Get the fillable attributes for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_fillable", "name": "Illuminate\\Database\\Eloquent\\Model::fillable", "doc": "&quot;Set the fillable attributes for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getGuarded", "name": "Illuminate\\Database\\Eloquent\\Model::getGuarded", "doc": "&quot;get the guarded attributes for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_guard", "name": "Illuminate\\Database\\Eloquent\\Model::guard", "doc": "&quot;Set the guarded attributes for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_unguard", "name": "Illuminate\\Database\\Eloquent\\Model::unguard", "doc": "&quot;Disable all mass assignable restrictions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_reguard", "name": "Illuminate\\Database\\Eloquent\\Model::reguard", "doc": "&quot;Enable the mass assignment restrictions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setUnguardState", "name": "Illuminate\\Database\\Eloquent\\Model::setUnguardState", "doc": "&quot;Set \&quot;unguard\&quot; to a given state.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_isFillable", "name": "Illuminate\\Database\\Eloquent\\Model::isFillable", "doc": "&quot;Determine if the given attribute may be mass assigned.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_isGuarded", "name": "Illuminate\\Database\\Eloquent\\Model::isGuarded", "doc": "&quot;Determine if the given key is guarded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_totallyGuarded", "name": "Illuminate\\Database\\Eloquent\\Model::totallyGuarded", "doc": "&quot;Determine if the model is totally guarded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_removeTableFromKey", "name": "Illuminate\\Database\\Eloquent\\Model::removeTableFromKey", "doc": "&quot;Remove the table name from a given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getTouchedRelations", "name": "Illuminate\\Database\\Eloquent\\Model::getTouchedRelations", "doc": "&quot;Get the relationships that are touched on save.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setTouchedRelations", "name": "Illuminate\\Database\\Eloquent\\Model::setTouchedRelations", "doc": "&quot;Set the relationships that are touched on save.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getIncrementing", "name": "Illuminate\\Database\\Eloquent\\Model::getIncrementing", "doc": "&quot;Get the value indicating whether the IDs are incrementing.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setIncrementing", "name": "Illuminate\\Database\\Eloquent\\Model::setIncrementing", "doc": "&quot;Set whether IDs are incrementing.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_toJson", "name": "Illuminate\\Database\\Eloquent\\Model::toJson", "doc": "&quot;Convert the model instance to JSON.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_jsonSerialize", "name": "Illuminate\\Database\\Eloquent\\Model::jsonSerialize", "doc": "&quot;Convert the object into something JSON serializable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_toArray", "name": "Illuminate\\Database\\Eloquent\\Model::toArray", "doc": "&quot;Convert the model instance to an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_attributesToArray", "name": "Illuminate\\Database\\Eloquent\\Model::attributesToArray", "doc": "&quot;Convert the model&#039;s attributes to an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getArrayableAttributes", "name": "Illuminate\\Database\\Eloquent\\Model::getArrayableAttributes", "doc": "&quot;Get an attribute array of all arrayable attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getArrayableAppends", "name": "Illuminate\\Database\\Eloquent\\Model::getArrayableAppends", "doc": "&quot;Get all of the appendable values that are arrayable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_relationsToArray", "name": "Illuminate\\Database\\Eloquent\\Model::relationsToArray", "doc": "&quot;Get the model&#039;s relationships in array form.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getArrayableRelations", "name": "Illuminate\\Database\\Eloquent\\Model::getArrayableRelations", "doc": "&quot;Get an attribute array of all arrayable relations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getArrayableItems", "name": "Illuminate\\Database\\Eloquent\\Model::getArrayableItems", "doc": "&quot;Get an attribute array of all arrayable values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getAttribute", "name": "Illuminate\\Database\\Eloquent\\Model::getAttribute", "doc": "&quot;Get an attribute from the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getAttributeValue", "name": "Illuminate\\Database\\Eloquent\\Model::getAttributeValue", "doc": "&quot;Get a plain attribute (not a relationship).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getAttributeFromArray", "name": "Illuminate\\Database\\Eloquent\\Model::getAttributeFromArray", "doc": "&quot;Get an attribute from the $attributes array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getRelationshipFromMethod", "name": "Illuminate\\Database\\Eloquent\\Model::getRelationshipFromMethod", "doc": "&quot;Get a relationship value from a method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_hasGetMutator", "name": "Illuminate\\Database\\Eloquent\\Model::hasGetMutator", "doc": "&quot;Determine if a get mutator exists for an attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_mutateAttribute", "name": "Illuminate\\Database\\Eloquent\\Model::mutateAttribute", "doc": "&quot;Get the value of an attribute using its mutator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_mutateAttributeForArray", "name": "Illuminate\\Database\\Eloquent\\Model::mutateAttributeForArray", "doc": "&quot;Get the value of an attribute using its mutator for array conversion.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setAttribute", "name": "Illuminate\\Database\\Eloquent\\Model::setAttribute", "doc": "&quot;Set a given attribute on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_hasSetMutator", "name": "Illuminate\\Database\\Eloquent\\Model::hasSetMutator", "doc": "&quot;Determine if a set mutator exists for an attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getDates", "name": "Illuminate\\Database\\Eloquent\\Model::getDates", "doc": "&quot;Get the attributes that should be converted to dates.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_fromDateTime", "name": "Illuminate\\Database\\Eloquent\\Model::fromDateTime", "doc": "&quot;Convert a DateTime to a storable string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_asDateTime", "name": "Illuminate\\Database\\Eloquent\\Model::asDateTime", "doc": "&quot;Return a timestamp as DateTime object.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getDateFormat", "name": "Illuminate\\Database\\Eloquent\\Model::getDateFormat", "doc": "&quot;Get the format for database stored dates.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_replicate", "name": "Illuminate\\Database\\Eloquent\\Model::replicate", "doc": "&quot;Clone the model into a new, non-existing instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getAttributes", "name": "Illuminate\\Database\\Eloquent\\Model::getAttributes", "doc": "&quot;Get all of the current attributes on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setRawAttributes", "name": "Illuminate\\Database\\Eloquent\\Model::setRawAttributes", "doc": "&quot;Set the array of model attributes. No checking is done.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getOriginal", "name": "Illuminate\\Database\\Eloquent\\Model::getOriginal", "doc": "&quot;Get the model&#039;s original attribute values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_syncOriginal", "name": "Illuminate\\Database\\Eloquent\\Model::syncOriginal", "doc": "&quot;Sync the original attributes with the current.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_syncOriginalAttribute", "name": "Illuminate\\Database\\Eloquent\\Model::syncOriginalAttribute", "doc": "&quot;Sync a single original attribute with its current value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_isDirty", "name": "Illuminate\\Database\\Eloquent\\Model::isDirty", "doc": "&quot;Determine if the model or given attribute(s) have been modified.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getDirty", "name": "Illuminate\\Database\\Eloquent\\Model::getDirty", "doc": "&quot;Get the attributes that have been changed since last sync.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_originalIsNumericallyEquivalent", "name": "Illuminate\\Database\\Eloquent\\Model::originalIsNumericallyEquivalent", "doc": "&quot;Determine if the new and old values for a given key are numerically equivalent.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getRelations", "name": "Illuminate\\Database\\Eloquent\\Model::getRelations", "doc": "&quot;Get all the loaded relations for the instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getRelation", "name": "Illuminate\\Database\\Eloquent\\Model::getRelation", "doc": "&quot;Get a specified relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setRelation", "name": "Illuminate\\Database\\Eloquent\\Model::setRelation", "doc": "&quot;Set the specific relationship in the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setRelations", "name": "Illuminate\\Database\\Eloquent\\Model::setRelations", "doc": "&quot;Set the entire relations array on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getConnection", "name": "Illuminate\\Database\\Eloquent\\Model::getConnection", "doc": "&quot;Get the database connection for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getConnectionName", "name": "Illuminate\\Database\\Eloquent\\Model::getConnectionName", "doc": "&quot;Get the current connection name for the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setConnection", "name": "Illuminate\\Database\\Eloquent\\Model::setConnection", "doc": "&quot;Set the connection associated with the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_resolveConnection", "name": "Illuminate\\Database\\Eloquent\\Model::resolveConnection", "doc": "&quot;Resolve a connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getConnectionResolver", "name": "Illuminate\\Database\\Eloquent\\Model::getConnectionResolver", "doc": "&quot;Get the connection resolver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setConnectionResolver", "name": "Illuminate\\Database\\Eloquent\\Model::setConnectionResolver", "doc": "&quot;Set the connection resolver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_unsetConnectionResolver", "name": "Illuminate\\Database\\Eloquent\\Model::unsetConnectionResolver", "doc": "&quot;Unset the connection resolver for models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getEventDispatcher", "name": "Illuminate\\Database\\Eloquent\\Model::getEventDispatcher", "doc": "&quot;Get the event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_setEventDispatcher", "name": "Illuminate\\Database\\Eloquent\\Model::setEventDispatcher", "doc": "&quot;Set the event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_unsetEventDispatcher", "name": "Illuminate\\Database\\Eloquent\\Model::unsetEventDispatcher", "doc": "&quot;Unset the event dispatcher for models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_getMutatedAttributes", "name": "Illuminate\\Database\\Eloquent\\Model::getMutatedAttributes", "doc": "&quot;Get the mutated attributes for a given instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___get", "name": "Illuminate\\Database\\Eloquent\\Model::__get", "doc": "&quot;Dynamically retrieve attributes on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___set", "name": "Illuminate\\Database\\Eloquent\\Model::__set", "doc": "&quot;Dynamically set attributes on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_offsetExists", "name": "Illuminate\\Database\\Eloquent\\Model::offsetExists", "doc": "&quot;Determine if the given attribute exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_offsetGet", "name": "Illuminate\\Database\\Eloquent\\Model::offsetGet", "doc": "&quot;Get the value for a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_offsetSet", "name": "Illuminate\\Database\\Eloquent\\Model::offsetSet", "doc": "&quot;Set the value for a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method_offsetUnset", "name": "Illuminate\\Database\\Eloquent\\Model::offsetUnset", "doc": "&quot;Unset the value for a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___isset", "name": "Illuminate\\Database\\Eloquent\\Model::__isset", "doc": "&quot;Determine if an attribute exists on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___unset", "name": "Illuminate\\Database\\Eloquent\\Model::__unset", "doc": "&quot;Unset an attribute on the model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___call", "name": "Illuminate\\Database\\Eloquent\\Model::__call", "doc": "&quot;Handle dynamic method calls into the method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___callStatic", "name": "Illuminate\\Database\\Eloquent\\Model::__callStatic", "doc": "&quot;Handle dynamic static method calls into the method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___toString", "name": "Illuminate\\Database\\Eloquent\\Model::__toString", "doc": "&quot;Convert the model to its string representation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Model", "fromLink": "Illuminate/Database/Eloquent/Model.html", "link": "Illuminate/Database/Eloquent/Model.html#method___wakeup", "name": "Illuminate\\Database\\Eloquent\\Model::__wakeup", "doc": "&quot;When a model is being unserialized, check if it needs to be booted.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/ModelNotFoundException.html", "name": "Illuminate\\Database\\Eloquent\\ModelNotFoundException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\ModelNotFoundException", "fromLink": "Illuminate/Database/Eloquent/ModelNotFoundException.html", "link": "Illuminate/Database/Eloquent/ModelNotFoundException.html#method_setModel", "name": "Illuminate\\Database\\Eloquent\\ModelNotFoundException::setModel", "doc": "&quot;Set the affected Eloquent model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\ModelNotFoundException", "fromLink": "Illuminate/Database/Eloquent/ModelNotFoundException.html", "link": "Illuminate/Database/Eloquent/ModelNotFoundException.html#method_getModel", "name": "Illuminate\\Database\\Eloquent\\ModelNotFoundException::getModel", "doc": "&quot;Get the affected Eloquent model.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::__construct", "doc": "&quot;Create a new belongs to relationship instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getResults", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getResults", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_addConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::addConstraints", "doc": "&quot;Set the base constraints on the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelationCountQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelationCountQuery", "doc": "&quot;Add the constraints for a relationship count query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_addEagerConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::addEagerConstraints", "doc": "&quot;Set the constraints for an eager load of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getEagerModelKeys", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getEagerModelKeys", "doc": "&quot;Gather the keys from an array of related models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_initRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::initRelation", "doc": "&quot;Initialize the relation on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_associate", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::associate", "doc": "&quot;Associate the model instance to the given parent.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_dissociate", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::dissociate", "doc": "&quot;Dissociate previously associated model from the given parent.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_update", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::update", "doc": "&quot;Update the parent model on the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getForeignKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getForeignKey", "doc": "&quot;Get the foreign key of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getQualifiedForeignKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getQualifiedForeignKey", "doc": "&quot;Get the fully qualified foreign key of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getOtherKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getOtherKey", "doc": "&quot;Get the associated key of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsTo.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getQualifiedOtherKeyName", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getQualifiedOtherKeyName", "doc": "&quot;Get the fully qualified associated key of the relationship.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::__construct", "doc": "&quot;Create a new has many relationship instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getResults", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getResults", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivot", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivot", "doc": "&quot;Set a where clause for a pivot table column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivot", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivot", "doc": "&quot;Set an or where clause for a pivot table column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_first", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::first", "doc": "&quot;Execute the query and get the first result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstOrFail", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstOrFail", "doc": "&quot;Execute the query and get the first result or throw an exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_get", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::get", "doc": "&quot;Execute the query as a \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_paginate", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::paginate", "doc": "&quot;Get a paginator for the \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_hydratePivotRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::hydratePivotRelation", "doc": "&quot;Hydrate the pivot table relationship on the models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_cleanPivotAttributes", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::cleanPivotAttributes", "doc": "&quot;Get the pivot attributes from a model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_addConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::addConstraints", "doc": "&quot;Set the base constraints on the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationCountQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationCountQuery", "doc": "&quot;Add the constraints for a relationship count query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationCountQueryForSelfJoin", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationCountQueryForSelfJoin", "doc": "&quot;Add the constraints for a relationship count query on the same table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationCountHash", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationCountHash", "doc": "&quot;Get a relationship join table hash.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getSelectColumns", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getSelectColumns", "doc": "&quot;Set the select clause for the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getAliasedPivotColumns", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getAliasedPivotColumns", "doc": "&quot;Get the pivot columns for the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_hasPivotColumn", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::hasPivotColumn", "doc": "&quot;Determine whether the given column is defined as a pivot column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_setJoin", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::setJoin", "doc": "&quot;Set the join clause for the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_setWhere", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::setWhere", "doc": "&quot;Set the where clause for the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_addEagerConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::addEagerConstraints", "doc": "&quot;Set the constraints for an eager load of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_initRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::initRelation", "doc": "&quot;Initialize the relation on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_buildDictionary", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::buildDictionary", "doc": "&quot;Build model dictionary keyed by the relation&#039;s foreign key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touch", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touch", "doc": "&quot;Touch all of the related models for the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelatedIds", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelatedIds", "doc": "&quot;Get all of the IDs for the related models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_save", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::save", "doc": "&quot;Save a new model and attach it to the parent model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_saveMany", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::saveMany", "doc": "&quot;Save an array of new models and attach them to the parent model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_create", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::create", "doc": "&quot;Create a new instance of the related model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_createMany", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::createMany", "doc": "&quot;Create an array of new instances of the related models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_sync", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::sync", "doc": "&quot;Sync the intermediate tables with a list of IDs or collection of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_formatSyncList", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::formatSyncList", "doc": "&quot;Format the sync list so that it is keyed by ID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_attachNew", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::attachNew", "doc": "&quot;Attach all of the IDs that aren&#039;t in the current array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_updateExistingPivot", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::updateExistingPivot", "doc": "&quot;Update an existing pivot record on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_attach", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::attach", "doc": "&quot;Attach a model to the parent.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_createAttachRecords", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::createAttachRecords", "doc": "&quot;Create an array of records to insert into the pivot table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_attacher", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::attacher", "doc": "&quot;Create a full attachment record payload.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getAttachId", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getAttachId", "doc": "&quot;Get the attach record ID and extra attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_createAttachRecord", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::createAttachRecord", "doc": "&quot;Create a new pivot attachment record.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_setTimestampsOnAttach", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::setTimestampsOnAttach", "doc": "&quot;Set the creation and update timestamps on an attach record.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_detach", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::detach", "doc": "&quot;Detach models from the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touchIfTouching", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touchIfTouching", "doc": "&quot;If we&#039;re touching the parent model, touch.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touchingParent", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touchingParent", "doc": "&quot;Determine if we should touch the parent on sync.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_guessInverseRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::guessInverseRelation", "doc": "&quot;Attempt to guess the name of the inverse of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_newPivotQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::newPivotQuery", "doc": "&quot;Create a new query builder for the pivot table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_newPivotStatement", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::newPivotStatement", "doc": "&quot;Get a new plain query builder for the pivot table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_newPivotStatementForId", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::newPivotStatementForId", "doc": "&quot;Get a new pivot statement for a given \&quot;other\&quot; ID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_newPivot", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::newPivot", "doc": "&quot;Create a new pivot model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_newExistingPivot", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::newExistingPivot", "doc": "&quot;Create a new existing pivot model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_withPivot", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::withPivot", "doc": "&quot;Set the columns on the pivot table to retrieve.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_withTimestamps", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::withTimestamps", "doc": "&quot;Specify that the pivot table has creation and update timestamps.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelatedFreshUpdate", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelatedFreshUpdate", "doc": "&quot;Get the related model&#039;s updated at column name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getHasCompareKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getHasCompareKey", "doc": "&quot;Get the key for comparing against the parent key in \&quot;has\&quot; query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getForeignKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getForeignKey", "doc": "&quot;Get the fully qualified foreign key for the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getOtherKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getOtherKey", "doc": "&quot;Get the fully qualified \&quot;other key\&quot; for the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getTable", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getTable", "doc": "&quot;Get the intermediate table for the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html", "link": "Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationName", "name": "Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationName", "doc": "&quot;Get the relationship name for the relationship.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/HasMany.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasMany", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasMany.html#method_getResults", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasMany::getResults", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasMany.html#method_initRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasMany::initRelation", "doc": "&quot;Initialize the relation on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasMany.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasMany::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::__construct", "doc": "&quot;Create a new has many relationship instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_addConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::addConstraints", "doc": "&quot;Set the base constraints on the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getRelationCountQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getRelationCountQuery", "doc": "&quot;Add the constraints for a relationship count query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_setJoin", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::setJoin", "doc": "&quot;Set the join clause on the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_addEagerConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::addEagerConstraints", "doc": "&quot;Set the constraints for an eager load of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_initRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::initRelation", "doc": "&quot;Initialize the relation on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_buildDictionary", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::buildDictionary", "doc": "&quot;Build model dictionary keyed by the relation&#039;s foreign key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getResults", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getResults", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_get", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::get", "doc": "&quot;Execute the query as a \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getSelectColumns", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getSelectColumns", "doc": "&quot;Set the select clause for the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_paginate", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::paginate", "doc": "&quot;Get a paginator for the \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough", "fromLink": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html", "link": "Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getHasCompareKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getHasCompareKey", "doc": "&quot;Get the key for comparing against the parent key in \&quot;has\&quot; query.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/HasOne.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOne", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOne", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOne.html", "link": "Illuminate/Database/Eloquent/Relations/HasOne.html#method_getResults", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOne::getResults", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOne", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOne.html", "link": "Illuminate/Database/Eloquent/Relations/HasOne.html#method_initRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOne::initRelation", "doc": "&quot;Initialize the relation on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOne", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOne.html", "link": "Illuminate/Database/Eloquent/Relations/HasOne.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOne::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::__construct", "doc": "&quot;Create a new has many relationship instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_addConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::addConstraints", "doc": "&quot;Set the base constraints on the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_addEagerConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::addEagerConstraints", "doc": "&quot;Set the constraints for an eager load of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchOne", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchOne", "doc": "&quot;Match the eagerly loaded results to their single parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchMany", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchMany", "doc": "&quot;Match the eagerly loaded results to their many parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchOneOrMany", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchOneOrMany", "doc": "&quot;Match the eagerly loaded results to their many parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getRelationValue", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getRelationValue", "doc": "&quot;Get the value of a relationship by one or many type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_buildDictionary", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::buildDictionary", "doc": "&quot;Build model dictionary keyed by the relation&#039;s foreign key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_save", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::save", "doc": "&quot;Attach a model instance to the parent model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_saveMany", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::saveMany", "doc": "&quot;Attach an array of models to the parent instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_create", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::create", "doc": "&quot;Create a new instance of the related model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_createMany", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::createMany", "doc": "&quot;Create an array of new instances of the related model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_update", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::update", "doc": "&quot;Perform an update on all the related models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getHasCompareKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getHasCompareKey", "doc": "&quot;Get the key for comparing against the parent key in \&quot;has\&quot; query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getForeignKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getForeignKey", "doc": "&quot;Get the foreign key for the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getPlainForeignKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getPlainForeignKey", "doc": "&quot;Get the plain foreign key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getParentKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getParentKey", "doc": "&quot;Get the key value of the parent&#039;s local key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getQualifiedParentKeyName", "name": "Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getQualifiedParentKeyName", "doc": "&quot;Get the fully qualified parent key name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/MorphMany.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphMany", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphMany.html#method_getResults", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphMany::getResults", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphMany.html#method_initRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphMany::initRelation", "doc": "&quot;Initialize the relation on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphMany.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphMany::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOne.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOne", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOne", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOne.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOne.html#method_getResults", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOne::getResults", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOne", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOne.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOne.html#method_initRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOne::initRelation", "doc": "&quot;Initialize the relation on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOne", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOne.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOne.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOne::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::__construct", "doc": "&quot;Create a new has many relationship instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_addConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::addConstraints", "doc": "&quot;Set the base constraints on the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getRelationCountQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getRelationCountQuery", "doc": "&quot;Get the relationship count query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_addEagerConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::addEagerConstraints", "doc": "&quot;Set the constraints for an eager load of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_save", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::save", "doc": "&quot;Attach a model instance to the parent model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_create", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::create", "doc": "&quot;Create a new instance of the related model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_setForeignAttributesForCreate", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::setForeignAttributesForCreate", "doc": "&quot;Set the foreign ID and type for creating a related model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getMorphType", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getMorphType", "doc": "&quot;Get the foreign key \&quot;type\&quot; name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getPlainMorphType", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getPlainMorphType", "doc": "&quot;Get the plain morph type name without the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getMorphClass", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getMorphClass", "doc": "&quot;Get the class name of the parent model.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/MorphPivot.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphPivot.html", "link": "Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setKeysForSaveQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setKeysForSaveQuery", "doc": "&quot;Set the keys for a save update query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphPivot.html", "link": "Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_delete", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::delete", "doc": "&quot;Delete the pivot model record from the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphPivot.html", "link": "Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setMorphType", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setMorphType", "doc": "&quot;Set the morph type for the pivot.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphPivot.html", "link": "Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setMorphClass", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setMorphClass", "doc": "&quot;Set the morph class for the pivot.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::__construct", "doc": "&quot;Create a new belongs to relationship instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_addEagerConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::addEagerConstraints", "doc": "&quot;Set the constraints for an eager load of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_buildDictionary", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::buildDictionary", "doc": "&quot;Build a dictionary with the models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_associate", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::associate", "doc": "&quot;Associate the model instance to the given parent.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getEager", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getEager", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_matchToMorphParents", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::matchToMorphParents", "doc": "&quot;Match the results for a given type to their parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getResultsByType", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getResultsByType", "doc": "&quot;Get all of the relation results for a type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_gatherKeysByType", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::gatherKeysByType", "doc": "&quot;Gather all of the foreign keys for a given type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_createModelByType", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::createModelByType", "doc": "&quot;Create a new model instance by type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getMorphType", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getMorphType", "doc": "&quot;Get the foreign key \&quot;type\&quot; name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getDictionary", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getDictionary", "doc": "&quot;Get the dictionary used by the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_withTrashed", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::withTrashed", "doc": "&quot;Fetch soft-deleted model instances with query&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphTo.html", "link": "Illuminate/Database/Eloquent/Relations/MorphTo.html#method_useWithTrashed", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphTo::useWithTrashed", "doc": "&quot;Return trashed models with query if told so&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::__construct", "doc": "&quot;Create a new has many relationship instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_setWhere", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::setWhere", "doc": "&quot;Set the where clause for the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getRelationCountQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getRelationCountQuery", "doc": "&quot;Add the constraints for a relationship count query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_addEagerConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::addEagerConstraints", "doc": "&quot;Set the constraints for an eager load of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_createAttachRecord", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::createAttachRecord", "doc": "&quot;Create a new pivot attachment record.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_newPivotQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::newPivotQuery", "doc": "&quot;Create a new query builder for the pivot table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_newPivot", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::newPivot", "doc": "&quot;Create a new pivot model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getMorphType", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getMorphType", "doc": "&quot;Get the foreign key \&quot;type\&quot; name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany", "fromLink": "Illuminate/Database/Eloquent/Relations/MorphToMany.html", "link": "Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getMorphClass", "name": "Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getMorphClass", "doc": "&quot;Get the class name of the parent model.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::__construct", "doc": "&quot;Create a new pivot model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_setKeysForSaveQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::setKeysForSaveQuery", "doc": "&quot;Set the keys for a save update query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_delete", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::delete", "doc": "&quot;Delete the pivot model record from the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_getDeleteQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::getDeleteQuery", "doc": "&quot;Get the query builder for a delete operation on the pivot.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_getForeignKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::getForeignKey", "doc": "&quot;Get the foreign key column name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_getOtherKey", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::getOtherKey", "doc": "&quot;Get the \&quot;other key\&quot; column name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_setPivotKeys", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::setPivotKeys", "doc": "&quot;Set the key names for the pivot model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_hasTimestampAttributes", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::hasTimestampAttributes", "doc": "&quot;Determine if the pivot model has timestamp attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_getCreatedAtColumn", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::getCreatedAtColumn", "doc": "&quot;Get the name of the \&quot;created at\&quot; column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Pivot", "fromLink": "Illuminate/Database/Eloquent/Relations/Pivot.html", "link": "Illuminate/Database/Eloquent/Relations/Pivot.html#method_getUpdatedAtColumn", "name": "Illuminate\\Database\\Eloquent\\Relations\\Pivot::getUpdatedAtColumn", "doc": "&quot;Get the name of the \&quot;updated at\&quot; column.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent\\Relations", "fromLink": "Illuminate/Database/Eloquent/Relations.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method___construct", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::__construct", "doc": "&quot;Create a new relation instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_addConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::addConstraints", "doc": "&quot;Set the base constraints on the relation query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_addEagerConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::addEagerConstraints", "doc": "&quot;Set the constraints for an eager load of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_initRelation", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::initRelation", "doc": "&quot;Initialize the relation on a set of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_match", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::match", "doc": "&quot;Match the eagerly loaded results to their parents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getResults", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getResults", "doc": "&quot;Get the results of the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getEager", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getEager", "doc": "&quot;Get the relationship for eager loading.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_touch", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::touch", "doc": "&quot;Touch all of the related models for the relationship.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_rawUpdate", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::rawUpdate", "doc": "&quot;Run a raw update against the base query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelationCountQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelationCountQuery", "doc": "&quot;Add the constraints for a relationship count query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_noConstraints", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::noConstraints", "doc": "&quot;Run a callback with constraints disabled on the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getKeys", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getKeys", "doc": "&quot;Get all of the primary keys for an array of models.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getQuery", "doc": "&quot;Get the underlying query for the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getBaseQuery", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getBaseQuery", "doc": "&quot;Get the base query builder driving the Eloquent builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getParent", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getParent", "doc": "&quot;Get the parent model of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getQualifiedParentKeyName", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getQualifiedParentKeyName", "doc": "&quot;Get the fully qualified parent key name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelated", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelated", "doc": "&quot;Get the related model of the relation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_createdAt", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::createdAt", "doc": "&quot;Get the name of the \&quot;created at\&quot; column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_updatedAt", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::updatedAt", "doc": "&quot;Get the name of the \&quot;updated at\&quot; column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_relatedUpdatedAt", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::relatedUpdatedAt", "doc": "&quot;Get the name of the related model&#039;s \&quot;updated at\&quot; column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method_wrap", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::wrap", "doc": "&quot;Wrap the given value with the parent query&#039;s grammar.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\Relations\\Relation", "fromLink": "Illuminate/Database/Eloquent/Relations/Relation.html", "link": "Illuminate/Database/Eloquent/Relations/Relation.html#method___call", "name": "Illuminate\\Database\\Eloquent\\Relations\\Relation::__call", "doc": "&quot;Handle dynamic method calls to the relationship.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/ScopeInterface.html", "name": "Illuminate\\Database\\Eloquent\\ScopeInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\ScopeInterface", "fromLink": "Illuminate/Database/Eloquent/ScopeInterface.html", "link": "Illuminate/Database/Eloquent/ScopeInterface.html#method_apply", "name": "Illuminate\\Database\\Eloquent\\ScopeInterface::apply", "doc": "&quot;Apply the scope to a given Eloquent query builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\ScopeInterface", "fromLink": "Illuminate/Database/Eloquent/ScopeInterface.html", "link": "Illuminate/Database/Eloquent/ScopeInterface.html#method_remove", "name": "Illuminate\\Database\\Eloquent\\ScopeInterface::remove", "doc": "&quot;Remove the scope from the given Eloquent query builder.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_apply", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::apply", "doc": "&quot;Apply the scope to a given Eloquent query builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_remove", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::remove", "doc": "&quot;Remove the scope from the given Eloquent query builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_extend", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::extend", "doc": "&quot;Extend the query builder with the needed functions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_getDeletedAtColumn", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::getDeletedAtColumn", "doc": "&quot;Get the \&quot;deleted at\&quot; column for the builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addForceDelete", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::addForceDelete", "doc": "&quot;Add the force delete extension to the builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addRestore", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::addRestore", "doc": "&quot;Add the restore extension to the builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addWithTrashed", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::addWithTrashed", "doc": "&quot;Add the with-trashed extension to the builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addOnlyTrashed", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::addOnlyTrashed", "doc": "&quot;Add the only-trashed extension to the builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingScope", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingScope.html", "link": "Illuminate/Database/Eloquent/SoftDeletingScope.html#method_isSoftDeleteConstraint", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingScope::isSoftDeleteConstraint", "doc": "&quot;Determine if the given where clause is a soft delete constraint.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Database\\Eloquent", "fromLink": "Illuminate/Database/Eloquent.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_bootSoftDeletingTrait", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::bootSoftDeletingTrait", "doc": "&quot;Boot the soft deleting trait for a model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_forceDelete", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::forceDelete", "doc": "&quot;Force a hard delete on a soft deleted model.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_performDeleteOnModel", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::performDeleteOnModel", "doc": "&quot;Perform the actual delete query on this model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_runSoftDelete", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::runSoftDelete", "doc": "&quot;Perform the actual delete query on this model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_restore", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::restore", "doc": "&quot;Restore a soft-deleted model instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_trashed", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::trashed", "doc": "&quot;Determine if the model instance has been soft-deleted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_withTrashed", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::withTrashed", "doc": "&quot;Get a new query builder that includes soft deletes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_onlyTrashed", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::onlyTrashed", "doc": "&quot;Get a new query builder that only includes soft deletes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_restoring", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::restoring", "doc": "&quot;Register a restoring model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_restored", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::restored", "doc": "&quot;Register a restored model event with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_getDeletedAtColumn", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::getDeletedAtColumn", "doc": "&quot;Get the name of the \&quot;deleted at\&quot; column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait", "fromLink": "Illuminate/Database/Eloquent/SoftDeletingTrait.html", "link": "Illuminate/Database/Eloquent/SoftDeletingTrait.html#method_getQualifiedDeletedAtColumn", "name": "Illuminate\\Database\\Eloquent\\SoftDeletingTrait::getQualifiedDeletedAtColumn", "doc": "&quot;Get the fully qualified \&quot;deleted at\&quot; column.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/Grammar.html", "name": "Illuminate\\Database\\Grammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_wrapArray", "name": "Illuminate\\Database\\Grammar::wrapArray", "doc": "&quot;Wrap an array of values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_wrapTable", "name": "Illuminate\\Database\\Grammar::wrapTable", "doc": "&quot;Wrap a table in keyword identifiers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_wrap", "name": "Illuminate\\Database\\Grammar::wrap", "doc": "&quot;Wrap a value in keyword identifiers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_wrapValue", "name": "Illuminate\\Database\\Grammar::wrapValue", "doc": "&quot;Wrap a single string in keyword identifiers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_columnize", "name": "Illuminate\\Database\\Grammar::columnize", "doc": "&quot;Convert an array of column names into a delimited string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_parameterize", "name": "Illuminate\\Database\\Grammar::parameterize", "doc": "&quot;Create query parameter place-holders for an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_parameter", "name": "Illuminate\\Database\\Grammar::parameter", "doc": "&quot;Get the appropriate query parameter place-holder for a value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_getValue", "name": "Illuminate\\Database\\Grammar::getValue", "doc": "&quot;Get the value of a raw expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_isExpression", "name": "Illuminate\\Database\\Grammar::isExpression", "doc": "&quot;Determine if the given value is a raw expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_getDateFormat", "name": "Illuminate\\Database\\Grammar::getDateFormat", "doc": "&quot;Get the format for database stored dates.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_getTablePrefix", "name": "Illuminate\\Database\\Grammar::getTablePrefix", "doc": "&quot;Get the grammar&#039;s table prefix.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Grammar", "fromLink": "Illuminate/Database/Grammar.html", "link": "Illuminate/Database/Grammar.html#method_setTablePrefix", "name": "Illuminate\\Database\\Grammar::setTablePrefix", "doc": "&quot;Set the grammar&#039;s table prefix.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/MigrationServiceProvider.html", "name": "Illuminate\\Database\\MigrationServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_register", "name": "Illuminate\\Database\\MigrationServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerRepository", "name": "Illuminate\\Database\\MigrationServiceProvider::registerRepository", "doc": "&quot;Register the migration repository service.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerMigrator", "name": "Illuminate\\Database\\MigrationServiceProvider::registerMigrator", "doc": "&quot;Register the migrator service.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerCommands", "name": "Illuminate\\Database\\MigrationServiceProvider::registerCommands", "doc": "&quot;Register all of the migration commands.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateCommand", "name": "Illuminate\\Database\\MigrationServiceProvider::registerMigrateCommand", "doc": "&quot;Register the \&quot;migrate\&quot; migration command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerRollbackCommand", "name": "Illuminate\\Database\\MigrationServiceProvider::registerRollbackCommand", "doc": "&quot;Register the \&quot;rollback\&quot; migration command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerResetCommand", "name": "Illuminate\\Database\\MigrationServiceProvider::registerResetCommand", "doc": "&quot;Register the \&quot;reset\&quot; migration command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerRefreshCommand", "name": "Illuminate\\Database\\MigrationServiceProvider::registerRefreshCommand", "doc": "&quot;Register the \&quot;refresh\&quot; migration command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerInstallCommand", "name": "Illuminate\\Database\\MigrationServiceProvider::registerInstallCommand", "doc": "&quot;Register the \&quot;install\&quot; migration command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerMakeCommand", "name": "Illuminate\\Database\\MigrationServiceProvider::registerMakeCommand", "doc": "&quot;Register the \&quot;install\&quot; migration command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_registerCreator", "name": "Illuminate\\Database\\MigrationServiceProvider::registerCreator", "doc": "&quot;Register the migration creator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MigrationServiceProvider", "fromLink": "Illuminate/Database/MigrationServiceProvider.html", "link": "Illuminate/Database/MigrationServiceProvider.html#method_provides", "name": "Illuminate\\Database\\MigrationServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Migrations", "fromLink": "Illuminate/Database/Migrations.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method___construct", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::__construct", "doc": "&quot;Create a new database migration repository instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getRan", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getRan", "doc": "&quot;Get the ran migrations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getLast", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getLast", "doc": "&quot;Get the last migration batch.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_log", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::log", "doc": "&quot;Log that a migration was run.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_delete", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::delete", "doc": "&quot;Remove a migration from the log.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getNextBatchNumber", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getNextBatchNumber", "doc": "&quot;Get the next migration batch number.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getLastBatchNumber", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getLastBatchNumber", "doc": "&quot;Get the last migration batch number.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_createRepository", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::createRepository", "doc": "&quot;Create the migration repository data store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_repositoryExists", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::repositoryExists", "doc": "&quot;Determine if the migration repository exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_table", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::table", "doc": "&quot;Get a query builder for the migration table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getConnectionResolver", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getConnectionResolver", "doc": "&quot;Get the connection resolver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getConnection", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getConnection", "doc": "&quot;Resolve the database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository", "fromLink": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html", "link": "Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_setSource", "name": "Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::setSource", "doc": "&quot;Set the information source to gather data.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Migrations", "fromLink": "Illuminate/Database/Migrations.html", "link": "Illuminate/Database/Migrations/Migration.html", "name": "Illuminate\\Database\\Migrations\\Migration", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migration", "fromLink": "Illuminate/Database/Migrations/Migration.html", "link": "Illuminate/Database/Migrations/Migration.html#method_getConnection", "name": "Illuminate\\Database\\Migrations\\Migration::getConnection", "doc": "&quot;Get the migration connection name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Migrations", "fromLink": "Illuminate/Database/Migrations.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html", "name": "Illuminate\\Database\\Migrations\\MigrationCreator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method___construct", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::__construct", "doc": "&quot;Create a new migration creator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_create", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::create", "doc": "&quot;Create a new migration at the given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_getStub", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::getStub", "doc": "&quot;Get the migration stub file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_populateStub", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::populateStub", "doc": "&quot;Populate the place-holders in the migration stub.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_getClassName", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::getClassName", "doc": "&quot;Get the class name of a migration name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_firePostCreateHooks", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::firePostCreateHooks", "doc": "&quot;Fire the registered post create hooks.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_afterCreate", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::afterCreate", "doc": "&quot;Register a post migration create hook.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_getPath", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::getPath", "doc": "&quot;Get the full path name to the migration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_getDatePrefix", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::getDatePrefix", "doc": "&quot;Get the date prefix for the migration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_getStubPath", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::getStubPath", "doc": "&quot;Get the path to the stubs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationCreator", "fromLink": "Illuminate/Database/Migrations/MigrationCreator.html", "link": "Illuminate/Database/Migrations/MigrationCreator.html#method_getFilesystem", "name": "Illuminate\\Database\\Migrations\\MigrationCreator::getFilesystem", "doc": "&quot;Get the filesystem instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Migrations", "fromLink": "Illuminate/Database/Migrations.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getRan", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getRan", "doc": "&quot;Get the ran migrations for a given package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getLast", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getLast", "doc": "&quot;Get the last migration batch.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_log", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::log", "doc": "&quot;Log that a migration was run.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_delete", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::delete", "doc": "&quot;Remove a migration from the log.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getNextBatchNumber", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getNextBatchNumber", "doc": "&quot;Get the next migration batch number.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_createRepository", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::createRepository", "doc": "&quot;Create the migration repository data store.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_repositoryExists", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::repositoryExists", "doc": "&quot;Determine if the migration repository exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface", "fromLink": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html", "link": "Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_setSource", "name": "Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::setSource", "doc": "&quot;Set the information source to gather data.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Migrations", "fromLink": "Illuminate/Database/Migrations.html", "link": "Illuminate/Database/Migrations/Migrator.html", "name": "Illuminate\\Database\\Migrations\\Migrator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method___construct", "name": "Illuminate\\Database\\Migrations\\Migrator::__construct", "doc": "&quot;Create a new migrator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_run", "name": "Illuminate\\Database\\Migrations\\Migrator::run", "doc": "&quot;Run the outstanding migrations at a given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_runMigrationList", "name": "Illuminate\\Database\\Migrations\\Migrator::runMigrationList", "doc": "&quot;Run an array of migrations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_runUp", "name": "Illuminate\\Database\\Migrations\\Migrator::runUp", "doc": "&quot;Run \&quot;up\&quot; a migration instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_rollback", "name": "Illuminate\\Database\\Migrations\\Migrator::rollback", "doc": "&quot;Rollback the last migration operation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_runDown", "name": "Illuminate\\Database\\Migrations\\Migrator::runDown", "doc": "&quot;Run \&quot;down\&quot; a migration instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_getMigrationFiles", "name": "Illuminate\\Database\\Migrations\\Migrator::getMigrationFiles", "doc": "&quot;Get all of the migration files in a given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_requireFiles", "name": "Illuminate\\Database\\Migrations\\Migrator::requireFiles", "doc": "&quot;Require in all the migration files in a given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_pretendToRun", "name": "Illuminate\\Database\\Migrations\\Migrator::pretendToRun", "doc": "&quot;Pretend to run the migrations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_getQueries", "name": "Illuminate\\Database\\Migrations\\Migrator::getQueries", "doc": "&quot;Get all of the queries that would be run for a migration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_resolve", "name": "Illuminate\\Database\\Migrations\\Migrator::resolve", "doc": "&quot;Resolve a migration instance from a file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_note", "name": "Illuminate\\Database\\Migrations\\Migrator::note", "doc": "&quot;Raise a note event for the migrator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_getNotes", "name": "Illuminate\\Database\\Migrations\\Migrator::getNotes", "doc": "&quot;Get the notes for the last operation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_resolveConnection", "name": "Illuminate\\Database\\Migrations\\Migrator::resolveConnection", "doc": "&quot;Resolve the database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_setConnection", "name": "Illuminate\\Database\\Migrations\\Migrator::setConnection", "doc": "&quot;Set the default connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_getRepository", "name": "Illuminate\\Database\\Migrations\\Migrator::getRepository", "doc": "&quot;Get the migration repository instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_repositoryExists", "name": "Illuminate\\Database\\Migrations\\Migrator::repositoryExists", "doc": "&quot;Determine if the migration repository exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Migrations\\Migrator", "fromLink": "Illuminate/Database/Migrations/Migrator.html", "link": "Illuminate/Database/Migrations/Migrator.html#method_getFilesystem", "name": "Illuminate\\Database\\Migrations\\Migrator::getFilesystem", "doc": "&quot;Get the file system instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/MySqlConnection.html", "name": "Illuminate\\Database\\MySqlConnection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\MySqlConnection", "fromLink": "Illuminate/Database/MySqlConnection.html", "link": "Illuminate/Database/MySqlConnection.html#method_getSchemaBuilder", "name": "Illuminate\\Database\\MySqlConnection::getSchemaBuilder", "doc": "&quot;Get a schema builder instance for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MySqlConnection", "fromLink": "Illuminate/Database/MySqlConnection.html", "link": "Illuminate/Database/MySqlConnection.html#method_getDefaultQueryGrammar", "name": "Illuminate\\Database\\MySqlConnection::getDefaultQueryGrammar", "doc": "&quot;Get the default query grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MySqlConnection", "fromLink": "Illuminate/Database/MySqlConnection.html", "link": "Illuminate/Database/MySqlConnection.html#method_getDefaultSchemaGrammar", "name": "Illuminate\\Database\\MySqlConnection::getDefaultSchemaGrammar", "doc": "&quot;Get the default schema grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MySqlConnection", "fromLink": "Illuminate/Database/MySqlConnection.html", "link": "Illuminate/Database/MySqlConnection.html#method_getDefaultPostProcessor", "name": "Illuminate\\Database\\MySqlConnection::getDefaultPostProcessor", "doc": "&quot;Get the default post processor instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\MySqlConnection", "fromLink": "Illuminate/Database/MySqlConnection.html", "link": "Illuminate/Database/MySqlConnection.html#method_getDoctrineDriver", "name": "Illuminate\\Database\\MySqlConnection::getDoctrineDriver", "doc": "&quot;Get the Doctrine DBAL driver.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/PostgresConnection.html", "name": "Illuminate\\Database\\PostgresConnection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\PostgresConnection", "fromLink": "Illuminate/Database/PostgresConnection.html", "link": "Illuminate/Database/PostgresConnection.html#method_getDefaultQueryGrammar", "name": "Illuminate\\Database\\PostgresConnection::getDefaultQueryGrammar", "doc": "&quot;Get the default query grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\PostgresConnection", "fromLink": "Illuminate/Database/PostgresConnection.html", "link": "Illuminate/Database/PostgresConnection.html#method_getDefaultSchemaGrammar", "name": "Illuminate\\Database\\PostgresConnection::getDefaultSchemaGrammar", "doc": "&quot;Get the default schema grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\PostgresConnection", "fromLink": "Illuminate/Database/PostgresConnection.html", "link": "Illuminate/Database/PostgresConnection.html#method_getDefaultPostProcessor", "name": "Illuminate\\Database\\PostgresConnection::getDefaultPostProcessor", "doc": "&quot;Get the default post processor instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\PostgresConnection", "fromLink": "Illuminate/Database/PostgresConnection.html", "link": "Illuminate/Database/PostgresConnection.html#method_getDoctrineDriver", "name": "Illuminate\\Database\\PostgresConnection::getDoctrineDriver", "doc": "&quot;Get the Doctrine DBAL driver.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/QueryException.html", "name": "Illuminate\\Database\\QueryException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\QueryException", "fromLink": "Illuminate/Database/QueryException.html", "link": "Illuminate/Database/QueryException.html#method___construct", "name": "Illuminate\\Database\\QueryException::__construct", "doc": "&quot;Create a new query exception instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\QueryException", "fromLink": "Illuminate/Database/QueryException.html", "link": "Illuminate/Database/QueryException.html#method_formatMessage", "name": "Illuminate\\Database\\QueryException::formatMessage", "doc": "&quot;Format the SQL error message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\QueryException", "fromLink": "Illuminate/Database/QueryException.html", "link": "Illuminate/Database/QueryException.html#method_getSql", "name": "Illuminate\\Database\\QueryException::getSql", "doc": "&quot;Get the SQL for the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\QueryException", "fromLink": "Illuminate/Database/QueryException.html", "link": "Illuminate/Database/QueryException.html#method_getBindings", "name": "Illuminate\\Database\\QueryException::getBindings", "doc": "&quot;Get the bindings for the query.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query", "fromLink": "Illuminate/Database/Query.html", "link": "Illuminate/Database/Query/Builder.html", "name": "Illuminate\\Database\\Query\\Builder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method___construct", "name": "Illuminate\\Database\\Query\\Builder::__construct", "doc": "&quot;Create a new query builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_select", "name": "Illuminate\\Database\\Query\\Builder::select", "doc": "&quot;Set the columns to be selected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_selectRaw", "name": "Illuminate\\Database\\Query\\Builder::selectRaw", "doc": "&quot;Add a new \&quot;raw\&quot; select expression to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_addSelect", "name": "Illuminate\\Database\\Query\\Builder::addSelect", "doc": "&quot;Add a new select column to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_distinct", "name": "Illuminate\\Database\\Query\\Builder::distinct", "doc": "&quot;Force the query to only return distinct results.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_from", "name": "Illuminate\\Database\\Query\\Builder::from", "doc": "&quot;Set the table which the query is targeting.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_join", "name": "Illuminate\\Database\\Query\\Builder::join", "doc": "&quot;Add a join clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_joinWhere", "name": "Illuminate\\Database\\Query\\Builder::joinWhere", "doc": "&quot;Add a \&quot;join where\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_leftJoin", "name": "Illuminate\\Database\\Query\\Builder::leftJoin", "doc": "&quot;Add a left join to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_leftJoinWhere", "name": "Illuminate\\Database\\Query\\Builder::leftJoinWhere", "doc": "&quot;Add a \&quot;join where\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_rightJoin", "name": "Illuminate\\Database\\Query\\Builder::rightJoin", "doc": "&quot;Add a right join to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_rightJoinWhere", "name": "Illuminate\\Database\\Query\\Builder::rightJoinWhere", "doc": "&quot;Add a \&quot;right join where\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_where", "name": "Illuminate\\Database\\Query\\Builder::where", "doc": "&quot;Add a basic where clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhere", "name": "Illuminate\\Database\\Query\\Builder::orWhere", "doc": "&quot;Add an \&quot;or where\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_invalidOperatorAndValue", "name": "Illuminate\\Database\\Query\\Builder::invalidOperatorAndValue", "doc": "&quot;Determine if the given operator and value combination is legal.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereRaw", "name": "Illuminate\\Database\\Query\\Builder::whereRaw", "doc": "&quot;Add a raw where clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereRaw", "name": "Illuminate\\Database\\Query\\Builder::orWhereRaw", "doc": "&quot;Add a raw or where clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereBetween", "name": "Illuminate\\Database\\Query\\Builder::whereBetween", "doc": "&quot;Add a where between statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereBetween", "name": "Illuminate\\Database\\Query\\Builder::orWhereBetween", "doc": "&quot;Add an or where between statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereNotBetween", "name": "Illuminate\\Database\\Query\\Builder::whereNotBetween", "doc": "&quot;Add a where not between statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereNotBetween", "name": "Illuminate\\Database\\Query\\Builder::orWhereNotBetween", "doc": "&quot;Add an or where not between statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereNested", "name": "Illuminate\\Database\\Query\\Builder::whereNested", "doc": "&quot;Add a nested where statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_addNestedWhereQuery", "name": "Illuminate\\Database\\Query\\Builder::addNestedWhereQuery", "doc": "&quot;Add another query builder as a nested where to the query builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereSub", "name": "Illuminate\\Database\\Query\\Builder::whereSub", "doc": "&quot;Add a full sub-select to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereExists", "name": "Illuminate\\Database\\Query\\Builder::whereExists", "doc": "&quot;Add an exists clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereExists", "name": "Illuminate\\Database\\Query\\Builder::orWhereExists", "doc": "&quot;Add an or exists clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereNotExists", "name": "Illuminate\\Database\\Query\\Builder::whereNotExists", "doc": "&quot;Add a where not exists clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereNotExists", "name": "Illuminate\\Database\\Query\\Builder::orWhereNotExists", "doc": "&quot;Add a where not exists clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereIn", "name": "Illuminate\\Database\\Query\\Builder::whereIn", "doc": "&quot;Add a \&quot;where in\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereIn", "name": "Illuminate\\Database\\Query\\Builder::orWhereIn", "doc": "&quot;Add an \&quot;or where in\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereNotIn", "name": "Illuminate\\Database\\Query\\Builder::whereNotIn", "doc": "&quot;Add a \&quot;where not in\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereNotIn", "name": "Illuminate\\Database\\Query\\Builder::orWhereNotIn", "doc": "&quot;Add an \&quot;or where not in\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereInSub", "name": "Illuminate\\Database\\Query\\Builder::whereInSub", "doc": "&quot;Add a where in with a sub-select to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereNull", "name": "Illuminate\\Database\\Query\\Builder::whereNull", "doc": "&quot;Add a \&quot;where null\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereNull", "name": "Illuminate\\Database\\Query\\Builder::orWhereNull", "doc": "&quot;Add an \&quot;or where null\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereNotNull", "name": "Illuminate\\Database\\Query\\Builder::whereNotNull", "doc": "&quot;Add a \&quot;where not null\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orWhereNotNull", "name": "Illuminate\\Database\\Query\\Builder::orWhereNotNull", "doc": "&quot;Add an \&quot;or where not null\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereDate", "name": "Illuminate\\Database\\Query\\Builder::whereDate", "doc": "&quot;Add a \&quot;where date\&quot; statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereDay", "name": "Illuminate\\Database\\Query\\Builder::whereDay", "doc": "&quot;Add a \&quot;where day\&quot; statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereMonth", "name": "Illuminate\\Database\\Query\\Builder::whereMonth", "doc": "&quot;Add a \&quot;where month\&quot; statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_whereYear", "name": "Illuminate\\Database\\Query\\Builder::whereYear", "doc": "&quot;Add a \&quot;where year\&quot; statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_addDateBasedWhere", "name": "Illuminate\\Database\\Query\\Builder::addDateBasedWhere", "doc": "&quot;Add a date based (year, month, day) statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_dynamicWhere", "name": "Illuminate\\Database\\Query\\Builder::dynamicWhere", "doc": "&quot;Handles dynamic \&quot;where\&quot; clauses to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_addDynamic", "name": "Illuminate\\Database\\Query\\Builder::addDynamic", "doc": "&quot;Add a single dynamic where clause statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_groupBy", "name": "Illuminate\\Database\\Query\\Builder::groupBy", "doc": "&quot;Add a \&quot;group by\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_having", "name": "Illuminate\\Database\\Query\\Builder::having", "doc": "&quot;Add a \&quot;having\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orHaving", "name": "Illuminate\\Database\\Query\\Builder::orHaving", "doc": "&quot;Add a \&quot;or having\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_havingRaw", "name": "Illuminate\\Database\\Query\\Builder::havingRaw", "doc": "&quot;Add a raw having clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orHavingRaw", "name": "Illuminate\\Database\\Query\\Builder::orHavingRaw", "doc": "&quot;Add a raw or having clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orderBy", "name": "Illuminate\\Database\\Query\\Builder::orderBy", "doc": "&quot;Add an \&quot;order by\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_latest", "name": "Illuminate\\Database\\Query\\Builder::latest", "doc": "&quot;Add an \&quot;order by\&quot; clause for a timestamp to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_oldest", "name": "Illuminate\\Database\\Query\\Builder::oldest", "doc": "&quot;Add an \&quot;order by\&quot; clause for a timestamp to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_orderByRaw", "name": "Illuminate\\Database\\Query\\Builder::orderByRaw", "doc": "&quot;Add a raw \&quot;order by\&quot; clause to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_offset", "name": "Illuminate\\Database\\Query\\Builder::offset", "doc": "&quot;Set the \&quot;offset\&quot; value of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_skip", "name": "Illuminate\\Database\\Query\\Builder::skip", "doc": "&quot;Alias to set the \&quot;offset\&quot; value of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_limit", "name": "Illuminate\\Database\\Query\\Builder::limit", "doc": "&quot;Set the \&quot;limit\&quot; value of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_take", "name": "Illuminate\\Database\\Query\\Builder::take", "doc": "&quot;Alias to set the \&quot;limit\&quot; value of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_forPage", "name": "Illuminate\\Database\\Query\\Builder::forPage", "doc": "&quot;Set the limit and offset for a given page.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_union", "name": "Illuminate\\Database\\Query\\Builder::union", "doc": "&quot;Add a union statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_unionAll", "name": "Illuminate\\Database\\Query\\Builder::unionAll", "doc": "&quot;Add a union all statement to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_lock", "name": "Illuminate\\Database\\Query\\Builder::lock", "doc": "&quot;Lock the selected rows in the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_lockForUpdate", "name": "Illuminate\\Database\\Query\\Builder::lockForUpdate", "doc": "&quot;Lock the selected rows in the table for updating.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_sharedLock", "name": "Illuminate\\Database\\Query\\Builder::sharedLock", "doc": "&quot;Share lock the selected rows in the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_toSql", "name": "Illuminate\\Database\\Query\\Builder::toSql", "doc": "&quot;Get the SQL representation of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_remember", "name": "Illuminate\\Database\\Query\\Builder::remember", "doc": "&quot;Indicate that the query results should be cached.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_rememberForever", "name": "Illuminate\\Database\\Query\\Builder::rememberForever", "doc": "&quot;Indicate that the query results should be cached forever.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_cacheTags", "name": "Illuminate\\Database\\Query\\Builder::cacheTags", "doc": "&quot;Indicate that the results, if cached, should use the given cache tags.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_cacheDriver", "name": "Illuminate\\Database\\Query\\Builder::cacheDriver", "doc": "&quot;Indicate that the results, if cached, should use the given cache driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_find", "name": "Illuminate\\Database\\Query\\Builder::find", "doc": "&quot;Execute a query for a single record by ID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_pluck", "name": "Illuminate\\Database\\Query\\Builder::pluck", "doc": "&quot;Pluck a single column&#039;s value from the first result of a query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_first", "name": "Illuminate\\Database\\Query\\Builder::first", "doc": "&quot;Execute the query and get the first result.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_get", "name": "Illuminate\\Database\\Query\\Builder::get", "doc": "&quot;Execute the query as a \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getFresh", "name": "Illuminate\\Database\\Query\\Builder::getFresh", "doc": "&quot;Execute the query as a fresh \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_runSelect", "name": "Illuminate\\Database\\Query\\Builder::runSelect", "doc": "&quot;Run the query as a \&quot;select\&quot; statement against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getCached", "name": "Illuminate\\Database\\Query\\Builder::getCached", "doc": "&quot;Execute the query as a cached \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getCache", "name": "Illuminate\\Database\\Query\\Builder::getCache", "doc": "&quot;Get the cache object with tags assigned, if applicable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getCacheInfo", "name": "Illuminate\\Database\\Query\\Builder::getCacheInfo", "doc": "&quot;Get the cache key and cache minutes as an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getCacheKey", "name": "Illuminate\\Database\\Query\\Builder::getCacheKey", "doc": "&quot;Get a unique cache key for the complete query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_generateCacheKey", "name": "Illuminate\\Database\\Query\\Builder::generateCacheKey", "doc": "&quot;Generate the unique cache key for the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getCacheCallback", "name": "Illuminate\\Database\\Query\\Builder::getCacheCallback", "doc": "&quot;Get the Closure callback used when caching queries.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_chunk", "name": "Illuminate\\Database\\Query\\Builder::chunk", "doc": "&quot;Chunk the results of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_lists", "name": "Illuminate\\Database\\Query\\Builder::lists", "doc": "&quot;Get an array with the values of a given column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getListSelect", "name": "Illuminate\\Database\\Query\\Builder::getListSelect", "doc": "&quot;Get the columns that should be used in a list array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_implode", "name": "Illuminate\\Database\\Query\\Builder::implode", "doc": "&quot;Concatenate values of a given column as a string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_paginate", "name": "Illuminate\\Database\\Query\\Builder::paginate", "doc": "&quot;Get a paginator for the \&quot;select\&quot; statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_groupedPaginate", "name": "Illuminate\\Database\\Query\\Builder::groupedPaginate", "doc": "&quot;Create a paginator for a grouped pagination statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_buildRawPaginator", "name": "Illuminate\\Database\\Query\\Builder::buildRawPaginator", "doc": "&quot;Build a paginator instance from a raw result array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_ungroupedPaginate", "name": "Illuminate\\Database\\Query\\Builder::ungroupedPaginate", "doc": "&quot;Create a paginator for an un-grouped pagination statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getPaginationCount", "name": "Illuminate\\Database\\Query\\Builder::getPaginationCount", "doc": "&quot;Get the count of the total records for pagination.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_simplePaginate", "name": "Illuminate\\Database\\Query\\Builder::simplePaginate", "doc": "&quot;Get a paginator only supporting simple next and previous links.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_backupFieldsForCount", "name": "Illuminate\\Database\\Query\\Builder::backupFieldsForCount", "doc": "&quot;Backup certain fields for a pagination count.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_restoreFieldsForCount", "name": "Illuminate\\Database\\Query\\Builder::restoreFieldsForCount", "doc": "&quot;Restore certain fields for a pagination count.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_exists", "name": "Illuminate\\Database\\Query\\Builder::exists", "doc": "&quot;Determine if any rows exist for the current query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_count", "name": "Illuminate\\Database\\Query\\Builder::count", "doc": "&quot;Retrieve the \&quot;count\&quot; result of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_min", "name": "Illuminate\\Database\\Query\\Builder::min", "doc": "&quot;Retrieve the minimum value of a given column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_max", "name": "Illuminate\\Database\\Query\\Builder::max", "doc": "&quot;Retrieve the maximum value of a given column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_sum", "name": "Illuminate\\Database\\Query\\Builder::sum", "doc": "&quot;Retrieve the sum of the values of a given column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_avg", "name": "Illuminate\\Database\\Query\\Builder::avg", "doc": "&quot;Retrieve the average of the values of a given column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_aggregate", "name": "Illuminate\\Database\\Query\\Builder::aggregate", "doc": "&quot;Execute an aggregate function on the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_insert", "name": "Illuminate\\Database\\Query\\Builder::insert", "doc": "&quot;Insert a new record into the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_insertGetId", "name": "Illuminate\\Database\\Query\\Builder::insertGetId", "doc": "&quot;Insert a new record and get the value of the primary key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_update", "name": "Illuminate\\Database\\Query\\Builder::update", "doc": "&quot;Update a record in the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_increment", "name": "Illuminate\\Database\\Query\\Builder::increment", "doc": "&quot;Increment a column&#039;s value by a given amount.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_decrement", "name": "Illuminate\\Database\\Query\\Builder::decrement", "doc": "&quot;Decrement a column&#039;s value by a given amount.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_delete", "name": "Illuminate\\Database\\Query\\Builder::delete", "doc": "&quot;Delete a record from the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_truncate", "name": "Illuminate\\Database\\Query\\Builder::truncate", "doc": "&quot;Run a truncate statement on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_newQuery", "name": "Illuminate\\Database\\Query\\Builder::newQuery", "doc": "&quot;Get a new instance of the query builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_mergeWheres", "name": "Illuminate\\Database\\Query\\Builder::mergeWheres", "doc": "&quot;Merge an array of where clauses and bindings.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_cleanBindings", "name": "Illuminate\\Database\\Query\\Builder::cleanBindings", "doc": "&quot;Remove all of the expressions from a list of bindings.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_raw", "name": "Illuminate\\Database\\Query\\Builder::raw", "doc": "&quot;Create a raw database expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getBindings", "name": "Illuminate\\Database\\Query\\Builder::getBindings", "doc": "&quot;Get the current query value bindings in a flattened array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getRawBindings", "name": "Illuminate\\Database\\Query\\Builder::getRawBindings", "doc": "&quot;Get the raw array of bindings.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_setBindings", "name": "Illuminate\\Database\\Query\\Builder::setBindings", "doc": "&quot;Set the bindings on the query builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_addBinding", "name": "Illuminate\\Database\\Query\\Builder::addBinding", "doc": "&quot;Add a binding to the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_mergeBindings", "name": "Illuminate\\Database\\Query\\Builder::mergeBindings", "doc": "&quot;Merge an array of bindings into our bindings.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getConnection", "name": "Illuminate\\Database\\Query\\Builder::getConnection", "doc": "&quot;Get the database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getProcessor", "name": "Illuminate\\Database\\Query\\Builder::getProcessor", "doc": "&quot;Get the database query processor instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_getGrammar", "name": "Illuminate\\Database\\Query\\Builder::getGrammar", "doc": "&quot;Get the query grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method_useWritePdo", "name": "Illuminate\\Database\\Query\\Builder::useWritePdo", "doc": "&quot;Use the write pdo for query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Builder", "fromLink": "Illuminate/Database/Query/Builder.html", "link": "Illuminate/Database/Query/Builder.html#method___call", "name": "Illuminate\\Database\\Query\\Builder::__call", "doc": "&quot;Handle dynamic method calls into the method.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query", "fromLink": "Illuminate/Database/Query.html", "link": "Illuminate/Database/Query/Expression.html", "name": "Illuminate\\Database\\Query\\Expression", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Expression", "fromLink": "Illuminate/Database/Query/Expression.html", "link": "Illuminate/Database/Query/Expression.html#method___construct", "name": "Illuminate\\Database\\Query\\Expression::__construct", "doc": "&quot;Create a new raw query expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Expression", "fromLink": "Illuminate/Database/Query/Expression.html", "link": "Illuminate/Database/Query/Expression.html#method_getValue", "name": "Illuminate\\Database\\Query\\Expression::getValue", "doc": "&quot;Get the value of the expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Expression", "fromLink": "Illuminate/Database/Query/Expression.html", "link": "Illuminate/Database/Query/Expression.html#method___toString", "name": "Illuminate\\Database\\Query\\Expression::__toString", "doc": "&quot;Get the value of the expression.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Grammars", "fromLink": "Illuminate/Database/Query/Grammars.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileSelect", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileSelect", "doc": "&quot;Compile a select query into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileComponents", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileComponents", "doc": "&quot;Compile the components necessary for a select clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileAggregate", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileAggregate", "doc": "&quot;Compile an aggregated select clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileColumns", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileColumns", "doc": "&quot;Compile the \&quot;select *\&quot; portion of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileFrom", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileFrom", "doc": "&quot;Compile the \&quot;from\&quot; portion of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileJoins", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileJoins", "doc": "&quot;Compile the \&quot;join\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileJoinConstraint", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileJoinConstraint", "doc": "&quot;Create a join clause constraint segment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileWheres", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileWheres", "doc": "&quot;Compile the \&quot;where\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereNested", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereNested", "doc": "&quot;Compile a nested where clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereSub", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereSub", "doc": "&quot;Compile a where condition with a sub-select.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereBasic", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereBasic", "doc": "&quot;Compile a basic where clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereBetween", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereBetween", "doc": "&quot;Compile a \&quot;between\&quot; where clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereExists", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereExists", "doc": "&quot;Compile a where exists clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotExists", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotExists", "doc": "&quot;Compile a where exists clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereIn", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereIn", "doc": "&quot;Compile a \&quot;where in\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotIn", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotIn", "doc": "&quot;Compile a \&quot;where not in\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereInSub", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereInSub", "doc": "&quot;Compile a where in sub-select clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotInSub", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotInSub", "doc": "&quot;Compile a where not in sub-select clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereNull", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereNull", "doc": "&quot;Compile a \&quot;where null\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotNull", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotNull", "doc": "&quot;Compile a \&quot;where not null\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereDate", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereDate", "doc": "&quot;Compile a \&quot;where date\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereDay", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereDay", "doc": "&quot;Compile a \&quot;where day\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereMonth", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereMonth", "doc": "&quot;Compile a \&quot;where month\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereYear", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereYear", "doc": "&quot;Compile a \&quot;where year\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_dateBasedWhere", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::dateBasedWhere", "doc": "&quot;Compile a date based where clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_whereRaw", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::whereRaw", "doc": "&quot;Compile a raw where clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileGroups", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileGroups", "doc": "&quot;Compile the \&quot;group by\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileHavings", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileHavings", "doc": "&quot;Compile the \&quot;having\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileHaving", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileHaving", "doc": "&quot;Compile a single having clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileBasicHaving", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileBasicHaving", "doc": "&quot;Compile a basic having clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileOrders", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileOrders", "doc": "&quot;Compile the \&quot;order by\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileLimit", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileLimit", "doc": "&quot;Compile the \&quot;limit\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileOffset", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileOffset", "doc": "&quot;Compile the \&quot;offset\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileUnions", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileUnions", "doc": "&quot;Compile the \&quot;union\&quot; queries attached to the main query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileUnion", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileUnion", "doc": "&quot;Compile a single union statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileInsert", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileInsert", "doc": "&quot;Compile an insert statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileInsertGetId", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileInsertGetId", "doc": "&quot;Compile an insert and get ID statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileUpdate", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileUpdate", "doc": "&quot;Compile an update statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileDelete", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileDelete", "doc": "&quot;Compile a delete statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileTruncate", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileTruncate", "doc": "&quot;Compile a truncate table statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_compileLock", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::compileLock", "doc": "&quot;Compile the lock into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_concatenate", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::concatenate", "doc": "&quot;Concatenate an array of segments, removing empties.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Query/Grammars/Grammar.html", "link": "Illuminate/Database/Query/Grammars/Grammar.html#method_removeLeadingBoolean", "name": "Illuminate\\Database\\Query\\Grammars\\Grammar::removeLeadingBoolean", "doc": "&quot;Remove the leading boolean from a statement.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Grammars", "fromLink": "Illuminate/Database/Query/Grammars.html", "link": "Illuminate/Database/Query/Grammars/MySqlGrammar.html", "name": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Query/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileSelect", "name": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileSelect", "doc": "&quot;Compile a select query into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Query/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileUnion", "name": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileUnion", "doc": "&quot;Compile a single union statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Query/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileLock", "name": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileLock", "doc": "&quot;Compile the lock into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Query/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileUpdate", "name": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileUpdate", "doc": "&quot;Compile an update statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Query/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileDelete", "name": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileDelete", "doc": "&quot;Compile a delete statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Query/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_wrapValue", "name": "Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::wrapValue", "doc": "&quot;Wrap a single string in keyword identifiers.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Grammars", "fromLink": "Illuminate/Database/Query/Grammars.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileLock", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileLock", "doc": "&quot;Compile the lock into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdate", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdate", "doc": "&quot;Compile an update statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateColumns", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateColumns", "doc": "&quot;Compile the columns for the update statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateFrom", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateFrom", "doc": "&quot;Compile the \&quot;from\&quot; clause for an update with a join.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateWheres", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateWheres", "doc": "&quot;Compile the additional where clauses for updates with joins.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateJoinWheres", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateJoinWheres", "doc": "&quot;Compile the \&quot;join\&quot; clauses for an update.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileInsertGetId", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileInsertGetId", "doc": "&quot;Compile an insert and get ID statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Query/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileTruncate", "name": "Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileTruncate", "doc": "&quot;Compile a truncate table statement into SQL.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Grammars", "fromLink": "Illuminate/Database/Query/Grammars.html", "link": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html", "name": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileInsert", "name": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileInsert", "doc": "&quot;Compile an insert statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileTruncate", "name": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileTruncate", "doc": "&quot;Compile a truncate table statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereDay", "name": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereDay", "doc": "&quot;Compile a \&quot;where day\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereMonth", "name": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereMonth", "doc": "&quot;Compile a \&quot;where month\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereYear", "name": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereYear", "doc": "&quot;Compile a \&quot;where year\&quot; clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_dateBasedWhere", "name": "Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::dateBasedWhere", "doc": "&quot;Compile a date based where clause.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Grammars", "fromLink": "Illuminate/Database/Query/Grammars.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileSelect", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileSelect", "doc": "&quot;Compile a select query into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileColumns", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileColumns", "doc": "&quot;Compile the \&quot;select *\&quot; portion of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileFrom", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileFrom", "doc": "&quot;Compile the \&quot;from\&quot; portion of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileAnsiOffset", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileAnsiOffset", "doc": "&quot;Create a full ANSI offset clause for the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileOver", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileOver", "doc": "&quot;Compile the over statement for a table expression.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileRowConstraint", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileRowConstraint", "doc": "&quot;Compile the limit \/ offset row constraint for a query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileTableExpression", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileTableExpression", "doc": "&quot;Compile a common table expression for a query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileLimit", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileLimit", "doc": "&quot;Compile the \&quot;limit\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileOffset", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileOffset", "doc": "&quot;Compile the \&quot;offset\&quot; portions of the query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileTruncate", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileTruncate", "doc": "&quot;Compile a truncate table statement into SQL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_getDateFormat", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::getDateFormat", "doc": "&quot;Get the format for database stored dates.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapValue", "name": "Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapValue", "doc": "&quot;Wrap a single string in keyword identifiers.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query", "fromLink": "Illuminate/Database/Query.html", "link": "Illuminate/Database/Query/JoinClause.html", "name": "Illuminate\\Database\\Query\\JoinClause", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\JoinClause", "fromLink": "Illuminate/Database/Query/JoinClause.html", "link": "Illuminate/Database/Query/JoinClause.html#method___construct", "name": "Illuminate\\Database\\Query\\JoinClause::__construct", "doc": "&quot;Create a new join clause instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\JoinClause", "fromLink": "Illuminate/Database/Query/JoinClause.html", "link": "Illuminate/Database/Query/JoinClause.html#method_on", "name": "Illuminate\\Database\\Query\\JoinClause::on", "doc": "&quot;Add an \&quot;on\&quot; clause to the join.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\JoinClause", "fromLink": "Illuminate/Database/Query/JoinClause.html", "link": "Illuminate/Database/Query/JoinClause.html#method_orOn", "name": "Illuminate\\Database\\Query\\JoinClause::orOn", "doc": "&quot;Add an \&quot;or on\&quot; clause to the join.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\JoinClause", "fromLink": "Illuminate/Database/Query/JoinClause.html", "link": "Illuminate/Database/Query/JoinClause.html#method_where", "name": "Illuminate\\Database\\Query\\JoinClause::where", "doc": "&quot;Add an \&quot;on where\&quot; clause to the join.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\JoinClause", "fromLink": "Illuminate/Database/Query/JoinClause.html", "link": "Illuminate/Database/Query/JoinClause.html#method_orWhere", "name": "Illuminate\\Database\\Query\\JoinClause::orWhere", "doc": "&quot;Add an \&quot;or on where\&quot; clause to the join.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\JoinClause", "fromLink": "Illuminate/Database/Query/JoinClause.html", "link": "Illuminate/Database/Query/JoinClause.html#method_whereNull", "name": "Illuminate\\Database\\Query\\JoinClause::whereNull", "doc": "&quot;Add an \&quot;on where is null\&quot; clause to the join&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Processors", "fromLink": "Illuminate/Database/Query/Processors.html", "link": "Illuminate/Database/Query/Processors/MySqlProcessor.html", "name": "Illuminate\\Database\\Query\\Processors\\MySqlProcessor", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\MySqlProcessor", "fromLink": "Illuminate/Database/Query/Processors/MySqlProcessor.html", "link": "Illuminate/Database/Query/Processors/MySqlProcessor.html#method_processColumnListing", "name": "Illuminate\\Database\\Query\\Processors\\MySqlProcessor::processColumnListing", "doc": "&quot;Process the results of a column listing query.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Processors", "fromLink": "Illuminate/Database/Query/Processors.html", "link": "Illuminate/Database/Query/Processors/PostgresProcessor.html", "name": "Illuminate\\Database\\Query\\Processors\\PostgresProcessor", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\PostgresProcessor", "fromLink": "Illuminate/Database/Query/Processors/PostgresProcessor.html", "link": "Illuminate/Database/Query/Processors/PostgresProcessor.html#method_processInsertGetId", "name": "Illuminate\\Database\\Query\\Processors\\PostgresProcessor::processInsertGetId", "doc": "&quot;Process an \&quot;insert get ID\&quot; query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\PostgresProcessor", "fromLink": "Illuminate/Database/Query/Processors/PostgresProcessor.html", "link": "Illuminate/Database/Query/Processors/PostgresProcessor.html#method_processColumnListing", "name": "Illuminate\\Database\\Query\\Processors\\PostgresProcessor::processColumnListing", "doc": "&quot;Process the results of a column listing query.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Processors", "fromLink": "Illuminate/Database/Query/Processors.html", "link": "Illuminate/Database/Query/Processors/Processor.html", "name": "Illuminate\\Database\\Query\\Processors\\Processor", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\Processor", "fromLink": "Illuminate/Database/Query/Processors/Processor.html", "link": "Illuminate/Database/Query/Processors/Processor.html#method_processSelect", "name": "Illuminate\\Database\\Query\\Processors\\Processor::processSelect", "doc": "&quot;Process the results of a \&quot;select\&quot; query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\Processor", "fromLink": "Illuminate/Database/Query/Processors/Processor.html", "link": "Illuminate/Database/Query/Processors/Processor.html#method_processInsertGetId", "name": "Illuminate\\Database\\Query\\Processors\\Processor::processInsertGetId", "doc": "&quot;Process an  \&quot;insert get ID\&quot; query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\Processor", "fromLink": "Illuminate/Database/Query/Processors/Processor.html", "link": "Illuminate/Database/Query/Processors/Processor.html#method_processColumnListing", "name": "Illuminate\\Database\\Query\\Processors\\Processor::processColumnListing", "doc": "&quot;Process the results of a column listing query.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Processors", "fromLink": "Illuminate/Database/Query/Processors.html", "link": "Illuminate/Database/Query/Processors/SQLiteProcessor.html", "name": "Illuminate\\Database\\Query\\Processors\\SQLiteProcessor", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\SQLiteProcessor", "fromLink": "Illuminate/Database/Query/Processors/SQLiteProcessor.html", "link": "Illuminate/Database/Query/Processors/SQLiteProcessor.html#method_processColumnListing", "name": "Illuminate\\Database\\Query\\Processors\\SQLiteProcessor::processColumnListing", "doc": "&quot;Process the results of a column listing query.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Query\\Processors", "fromLink": "Illuminate/Database/Query/Processors.html", "link": "Illuminate/Database/Query/Processors/SqlServerProcessor.html", "name": "Illuminate\\Database\\Query\\Processors\\SqlServerProcessor", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\SqlServerProcessor", "fromLink": "Illuminate/Database/Query/Processors/SqlServerProcessor.html", "link": "Illuminate/Database/Query/Processors/SqlServerProcessor.html#method_processInsertGetId", "name": "Illuminate\\Database\\Query\\Processors\\SqlServerProcessor::processInsertGetId", "doc": "&quot;Process an \&quot;insert get ID\&quot; query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Query\\Processors\\SqlServerProcessor", "fromLink": "Illuminate/Database/Query/Processors/SqlServerProcessor.html", "link": "Illuminate/Database/Query/Processors/SqlServerProcessor.html#method_processColumnListing", "name": "Illuminate\\Database\\Query\\Processors\\SqlServerProcessor::processColumnListing", "doc": "&quot;Process the results of a column listing query.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/SQLiteConnection.html", "name": "Illuminate\\Database\\SQLiteConnection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\SQLiteConnection", "fromLink": "Illuminate/Database/SQLiteConnection.html", "link": "Illuminate/Database/SQLiteConnection.html#method_getDefaultQueryGrammar", "name": "Illuminate\\Database\\SQLiteConnection::getDefaultQueryGrammar", "doc": "&quot;Get the default query grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SQLiteConnection", "fromLink": "Illuminate/Database/SQLiteConnection.html", "link": "Illuminate/Database/SQLiteConnection.html#method_getDefaultSchemaGrammar", "name": "Illuminate\\Database\\SQLiteConnection::getDefaultSchemaGrammar", "doc": "&quot;Get the default schema grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SQLiteConnection", "fromLink": "Illuminate/Database/SQLiteConnection.html", "link": "Illuminate/Database/SQLiteConnection.html#method_getDefaultPostProcessor", "name": "Illuminate\\Database\\SQLiteConnection::getDefaultPostProcessor", "doc": "&quot;Get the default post processor instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SQLiteConnection", "fromLink": "Illuminate/Database/SQLiteConnection.html", "link": "Illuminate/Database/SQLiteConnection.html#method_getDoctrineDriver", "name": "Illuminate\\Database\\SQLiteConnection::getDoctrineDriver", "doc": "&quot;Get the Doctrine DBAL driver.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Schema", "fromLink": "Illuminate/Database/Schema.html", "link": "Illuminate/Database/Schema/Blueprint.html", "name": "Illuminate\\Database\\Schema\\Blueprint", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method___construct", "name": "Illuminate\\Database\\Schema\\Blueprint::__construct", "doc": "&quot;Create a new schema blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_build", "name": "Illuminate\\Database\\Schema\\Blueprint::build", "doc": "&quot;Execute the blueprint against the database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_toSql", "name": "Illuminate\\Database\\Schema\\Blueprint::toSql", "doc": "&quot;Get the raw SQL statements for the blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_addImpliedCommands", "name": "Illuminate\\Database\\Schema\\Blueprint::addImpliedCommands", "doc": "&quot;Add the commands that are implied by the blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_addFluentIndexes", "name": "Illuminate\\Database\\Schema\\Blueprint::addFluentIndexes", "doc": "&quot;Add the index commands fluently specified on columns.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_creating", "name": "Illuminate\\Database\\Schema\\Blueprint::creating", "doc": "&quot;Determine if the blueprint has a create command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_create", "name": "Illuminate\\Database\\Schema\\Blueprint::create", "doc": "&quot;Indicate that the table needs to be created.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_drop", "name": "Illuminate\\Database\\Schema\\Blueprint::drop", "doc": "&quot;Indicate that the table should be dropped.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropIfExists", "name": "Illuminate\\Database\\Schema\\Blueprint::dropIfExists", "doc": "&quot;Indicate that the table should be dropped if it exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropColumn", "name": "Illuminate\\Database\\Schema\\Blueprint::dropColumn", "doc": "&quot;Indicate that the given columns should be dropped.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_renameColumn", "name": "Illuminate\\Database\\Schema\\Blueprint::renameColumn", "doc": "&quot;Indicate that the given columns should be renamed.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropPrimary", "name": "Illuminate\\Database\\Schema\\Blueprint::dropPrimary", "doc": "&quot;Indicate that the given primary key should be dropped.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropUnique", "name": "Illuminate\\Database\\Schema\\Blueprint::dropUnique", "doc": "&quot;Indicate that the given unique key should be dropped.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropIndex", "name": "Illuminate\\Database\\Schema\\Blueprint::dropIndex", "doc": "&quot;Indicate that the given index should be dropped.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropForeign", "name": "Illuminate\\Database\\Schema\\Blueprint::dropForeign", "doc": "&quot;Indicate that the given foreign key should be dropped.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropTimestamps", "name": "Illuminate\\Database\\Schema\\Blueprint::dropTimestamps", "doc": "&quot;Indicate that the timestamp columns should be dropped.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropSoftDeletes", "name": "Illuminate\\Database\\Schema\\Blueprint::dropSoftDeletes", "doc": "&quot;Indicate that the soft delete column should be dropped.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_rename", "name": "Illuminate\\Database\\Schema\\Blueprint::rename", "doc": "&quot;Rename the table to a given name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_primary", "name": "Illuminate\\Database\\Schema\\Blueprint::primary", "doc": "&quot;Specify the primary key(s) for the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_unique", "name": "Illuminate\\Database\\Schema\\Blueprint::unique", "doc": "&quot;Specify a unique index for the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_index", "name": "Illuminate\\Database\\Schema\\Blueprint::index", "doc": "&quot;Specify an index for the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_foreign", "name": "Illuminate\\Database\\Schema\\Blueprint::foreign", "doc": "&quot;Specify a foreign key for the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_increments", "name": "Illuminate\\Database\\Schema\\Blueprint::increments", "doc": "&quot;Create a new auto-incrementing integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_bigIncrements", "name": "Illuminate\\Database\\Schema\\Blueprint::bigIncrements", "doc": "&quot;Create a new auto-incrementing big integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_char", "name": "Illuminate\\Database\\Schema\\Blueprint::char", "doc": "&quot;Create a new char column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_string", "name": "Illuminate\\Database\\Schema\\Blueprint::string", "doc": "&quot;Create a new string column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_text", "name": "Illuminate\\Database\\Schema\\Blueprint::text", "doc": "&quot;Create a new text column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_mediumText", "name": "Illuminate\\Database\\Schema\\Blueprint::mediumText", "doc": "&quot;Create a new medium text column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_longText", "name": "Illuminate\\Database\\Schema\\Blueprint::longText", "doc": "&quot;Create a new long text column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_integer", "name": "Illuminate\\Database\\Schema\\Blueprint::integer", "doc": "&quot;Create a new integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_bigInteger", "name": "Illuminate\\Database\\Schema\\Blueprint::bigInteger", "doc": "&quot;Create a new big integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_mediumInteger", "name": "Illuminate\\Database\\Schema\\Blueprint::mediumInteger", "doc": "&quot;Create a new medium integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_tinyInteger", "name": "Illuminate\\Database\\Schema\\Blueprint::tinyInteger", "doc": "&quot;Create a new tiny integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_smallInteger", "name": "Illuminate\\Database\\Schema\\Blueprint::smallInteger", "doc": "&quot;Create a new small integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_unsignedInteger", "name": "Illuminate\\Database\\Schema\\Blueprint::unsignedInteger", "doc": "&quot;Create a new unsigned integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_unsignedBigInteger", "name": "Illuminate\\Database\\Schema\\Blueprint::unsignedBigInteger", "doc": "&quot;Create a new unsigned big integer column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_float", "name": "Illuminate\\Database\\Schema\\Blueprint::float", "doc": "&quot;Create a new float column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_double", "name": "Illuminate\\Database\\Schema\\Blueprint::double", "doc": "&quot;Create a new double column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_decimal", "name": "Illuminate\\Database\\Schema\\Blueprint::decimal", "doc": "&quot;Create a new decimal column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_boolean", "name": "Illuminate\\Database\\Schema\\Blueprint::boolean", "doc": "&quot;Create a new boolean column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_enum", "name": "Illuminate\\Database\\Schema\\Blueprint::enum", "doc": "&quot;Create a new enum column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_date", "name": "Illuminate\\Database\\Schema\\Blueprint::date", "doc": "&quot;Create a new date column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dateTime", "name": "Illuminate\\Database\\Schema\\Blueprint::dateTime", "doc": "&quot;Create a new date-time column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_time", "name": "Illuminate\\Database\\Schema\\Blueprint::time", "doc": "&quot;Create a new time column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_timestamp", "name": "Illuminate\\Database\\Schema\\Blueprint::timestamp", "doc": "&quot;Create a new timestamp column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_nullableTimestamps", "name": "Illuminate\\Database\\Schema\\Blueprint::nullableTimestamps", "doc": "&quot;Add nullable creation and update timestamps to the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_timestamps", "name": "Illuminate\\Database\\Schema\\Blueprint::timestamps", "doc": "&quot;Add creation and update timestamps to the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_softDeletes", "name": "Illuminate\\Database\\Schema\\Blueprint::softDeletes", "doc": "&quot;Add a \&quot;deleted at\&quot; timestamp for the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_binary", "name": "Illuminate\\Database\\Schema\\Blueprint::binary", "doc": "&quot;Create a new binary column on the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_morphs", "name": "Illuminate\\Database\\Schema\\Blueprint::morphs", "doc": "&quot;Add the proper columns for a polymorphic table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_rememberToken", "name": "Illuminate\\Database\\Schema\\Blueprint::rememberToken", "doc": "&quot;Adds the &lt;code&gt;remember_token&lt;\/code&gt; column to the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_dropIndexCommand", "name": "Illuminate\\Database\\Schema\\Blueprint::dropIndexCommand", "doc": "&quot;Create a new drop index command on the blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_indexCommand", "name": "Illuminate\\Database\\Schema\\Blueprint::indexCommand", "doc": "&quot;Add a new index command to the blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_createIndexName", "name": "Illuminate\\Database\\Schema\\Blueprint::createIndexName", "doc": "&quot;Create a default index name for the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_addColumn", "name": "Illuminate\\Database\\Schema\\Blueprint::addColumn", "doc": "&quot;Add a new column to the blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_removeColumn", "name": "Illuminate\\Database\\Schema\\Blueprint::removeColumn", "doc": "&quot;Remove a column from the schema blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_addCommand", "name": "Illuminate\\Database\\Schema\\Blueprint::addCommand", "doc": "&quot;Add a new command to the blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_createCommand", "name": "Illuminate\\Database\\Schema\\Blueprint::createCommand", "doc": "&quot;Create a new Fluent command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_getTable", "name": "Illuminate\\Database\\Schema\\Blueprint::getTable", "doc": "&quot;Get the table the blueprint describes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_getColumns", "name": "Illuminate\\Database\\Schema\\Blueprint::getColumns", "doc": "&quot;Get the columns that should be added.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Blueprint", "fromLink": "Illuminate/Database/Schema/Blueprint.html", "link": "Illuminate/Database/Schema/Blueprint.html#method_getCommands", "name": "Illuminate\\Database\\Schema\\Blueprint::getCommands", "doc": "&quot;Get the commands on the blueprint.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Schema", "fromLink": "Illuminate/Database/Schema.html", "link": "Illuminate/Database/Schema/Builder.html", "name": "Illuminate\\Database\\Schema\\Builder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method___construct", "name": "Illuminate\\Database\\Schema\\Builder::__construct", "doc": "&quot;Create a new database Schema manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_hasTable", "name": "Illuminate\\Database\\Schema\\Builder::hasTable", "doc": "&quot;Determine if the given table exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_hasColumn", "name": "Illuminate\\Database\\Schema\\Builder::hasColumn", "doc": "&quot;Determine if the given table has a given column.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_getColumnListing", "name": "Illuminate\\Database\\Schema\\Builder::getColumnListing", "doc": "&quot;Get the column listing for a given table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_table", "name": "Illuminate\\Database\\Schema\\Builder::table", "doc": "&quot;Modify a table on the schema.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_create", "name": "Illuminate\\Database\\Schema\\Builder::create", "doc": "&quot;Create a new table on the schema.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_drop", "name": "Illuminate\\Database\\Schema\\Builder::drop", "doc": "&quot;Drop a table from the schema.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_dropIfExists", "name": "Illuminate\\Database\\Schema\\Builder::dropIfExists", "doc": "&quot;Drop a table from the schema if it exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_rename", "name": "Illuminate\\Database\\Schema\\Builder::rename", "doc": "&quot;Rename a table on the schema.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_build", "name": "Illuminate\\Database\\Schema\\Builder::build", "doc": "&quot;Execute the blueprint to build \/ modify the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_createBlueprint", "name": "Illuminate\\Database\\Schema\\Builder::createBlueprint", "doc": "&quot;Create a new command set with a Closure.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_getConnection", "name": "Illuminate\\Database\\Schema\\Builder::getConnection", "doc": "&quot;Get the database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_setConnection", "name": "Illuminate\\Database\\Schema\\Builder::setConnection", "doc": "&quot;Set the database connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Builder", "fromLink": "Illuminate/Database/Schema/Builder.html", "link": "Illuminate/Database/Schema/Builder.html#method_blueprintResolver", "name": "Illuminate\\Database\\Schema\\Builder::blueprintResolver", "doc": "&quot;Set the Schema Blueprint resolver callback.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Schema\\Grammars", "fromLink": "Illuminate/Database/Schema/Grammars.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_compileRenameColumn", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::compileRenameColumn", "doc": "&quot;Compile a rename column command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_getRenamedDiff", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::getRenamedDiff", "doc": "&quot;Get a new column instance with the new column name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_setRenamedColumns", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::setRenamedColumns", "doc": "&quot;Set the renamed columns on the table diff.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_compileForeign", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::compileForeign", "doc": "&quot;Compile a foreign key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_getColumns", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::getColumns", "doc": "&quot;Compile the blueprint&#039;s column definitions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_addModifiers", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::addModifiers", "doc": "&quot;Add the column modifiers to the definition.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_getCommandByName", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::getCommandByName", "doc": "&quot;Get the primary key command if it exists on the blueprint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_getCommandsByName", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::getCommandsByName", "doc": "&quot;Get all of the commands with a given name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_getType", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::getType", "doc": "&quot;Get the SQL for the column data type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_prefixArray", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::prefixArray", "doc": "&quot;Add a prefix to an array of values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_wrapTable", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::wrapTable", "doc": "&quot;Wrap a table in keyword identifiers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_wrap", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::wrap", "doc": "&quot;Wrap a value in keyword identifiers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_getDefaultValue", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::getDefaultValue", "doc": "&quot;Format a value so that it can be used in \&quot;default\&quot; clauses.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\Grammar", "fromLink": "Illuminate/Database/Schema/Grammars/Grammar.html", "link": "Illuminate/Database/Schema/Grammars/Grammar.html#method_getDoctrineTableDiff", "name": "Illuminate\\Database\\Schema\\Grammars\\Grammar::getDoctrineTableDiff", "doc": "&quot;Create an empty Doctrine DBAL TableDiff from the Blueprint.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Schema\\Grammars", "fromLink": "Illuminate/Database/Schema/Grammars.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileTableExists", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileTableExists", "doc": "&quot;Compile the query to determine the list of tables.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileColumnExists", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileColumnExists", "doc": "&quot;Compile the query to determine the list of columns.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreate", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreate", "doc": "&quot;Compile a create table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreateEncoding", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreateEncoding", "doc": "&quot;Append the character set specifications to a command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileAdd", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileAdd", "doc": "&quot;Compile an add column command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compilePrimary", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compilePrimary", "doc": "&quot;Compile a primary key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileUnique", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileUnique", "doc": "&quot;Compile a unique key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileIndex", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileIndex", "doc": "&quot;Compile a plain index key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileKey", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileKey", "doc": "&quot;Compile an index creation command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDrop", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDrop", "doc": "&quot;Compile a drop table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropIfExists", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropIfExists", "doc": "&quot;Compile a drop table (if exists) command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropColumn", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropColumn", "doc": "&quot;Compile a drop column command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropPrimary", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropPrimary", "doc": "&quot;Compile a drop primary key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropUnique", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropUnique", "doc": "&quot;Compile a drop unique key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropIndex", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropIndex", "doc": "&quot;Compile a drop index command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropForeign", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropForeign", "doc": "&quot;Compile a drop foreign key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileRename", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileRename", "doc": "&quot;Compile a rename table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeChar", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeChar", "doc": "&quot;Create the column definition for a char type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeString", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeString", "doc": "&quot;Create the column definition for a string type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeText", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeText", "doc": "&quot;Create the column definition for a text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMediumText", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMediumText", "doc": "&quot;Create the column definition for a medium text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeLongText", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeLongText", "doc": "&quot;Create the column definition for a long text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBigInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBigInteger", "doc": "&quot;Create the column definition for a big integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeInteger", "doc": "&quot;Create the column definition for a integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMediumInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMediumInteger", "doc": "&quot;Create the column definition for a medium integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTinyInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTinyInteger", "doc": "&quot;Create the column definition for a tiny integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeSmallInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeSmallInteger", "doc": "&quot;Create the column definition for a small integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeFloat", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeFloat", "doc": "&quot;Create the column definition for a float type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDouble", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDouble", "doc": "&quot;Create the column definition for a double type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDecimal", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDecimal", "doc": "&quot;Create the column definition for a decimal type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBoolean", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBoolean", "doc": "&quot;Create the column definition for a boolean type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeEnum", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeEnum", "doc": "&quot;Create the column definition for an enum type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDate", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDate", "doc": "&quot;Create the column definition for a date type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDateTime", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDateTime", "doc": "&quot;Create the column definition for a date-time type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTime", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTime", "doc": "&quot;Create the column definition for a time type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTimestamp", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTimestamp", "doc": "&quot;Create the column definition for a timestamp type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBinary", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBinary", "doc": "&quot;Create the column definition for a binary type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyUnsigned", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyUnsigned", "doc": "&quot;Get the SQL for an unsigned column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyNullable", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyNullable", "doc": "&quot;Get the SQL for a nullable column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyDefault", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyDefault", "doc": "&quot;Get the SQL for a default column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyIncrement", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyIncrement", "doc": "&quot;Get the SQL for an auto-increment column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyAfter", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyAfter", "doc": "&quot;Get the SQL for an \&quot;after\&quot; column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyComment", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyComment", "doc": "&quot;Get the SQL for an \&quot;comment\&quot; column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html", "link": "Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_wrapValue", "name": "Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::wrapValue", "doc": "&quot;Wrap a single string in keyword identifiers.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Schema\\Grammars", "fromLink": "Illuminate/Database/Schema/Grammars.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileTableExists", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileTableExists", "doc": "&quot;Compile the query to determine if a table exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileColumnExists", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileColumnExists", "doc": "&quot;Compile the query to determine the list of columns.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileCreate", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileCreate", "doc": "&quot;Compile a create table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileAdd", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileAdd", "doc": "&quot;Compile a create table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compilePrimary", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compilePrimary", "doc": "&quot;Compile a primary key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileUnique", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileUnique", "doc": "&quot;Compile a unique key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileIndex", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileIndex", "doc": "&quot;Compile a plain index key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDrop", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDrop", "doc": "&quot;Compile a drop table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropIfExists", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropIfExists", "doc": "&quot;Compile a drop table (if exists) command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropColumn", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropColumn", "doc": "&quot;Compile a drop column command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropPrimary", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropPrimary", "doc": "&quot;Compile a drop primary key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropUnique", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropUnique", "doc": "&quot;Compile a drop unique key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropIndex", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropIndex", "doc": "&quot;Compile a drop index command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropForeign", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropForeign", "doc": "&quot;Compile a drop foreign key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileRename", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileRename", "doc": "&quot;Compile a rename table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeChar", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeChar", "doc": "&quot;Create the column definition for a char type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeString", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeString", "doc": "&quot;Create the column definition for a string type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeText", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeText", "doc": "&quot;Create the column definition for a text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMediumText", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMediumText", "doc": "&quot;Create the column definition for a medium text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeLongText", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeLongText", "doc": "&quot;Create the column definition for a long text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeInteger", "doc": "&quot;Create the column definition for a integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBigInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBigInteger", "doc": "&quot;Create the column definition for a big integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMediumInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMediumInteger", "doc": "&quot;Create the column definition for a medium integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTinyInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTinyInteger", "doc": "&quot;Create the column definition for a tiny integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeSmallInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeSmallInteger", "doc": "&quot;Create the column definition for a small integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeFloat", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeFloat", "doc": "&quot;Create the column definition for a float type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDouble", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDouble", "doc": "&quot;Create the column definition for a double type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDecimal", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDecimal", "doc": "&quot;Create the column definition for a decimal type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBoolean", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBoolean", "doc": "&quot;Create the column definition for a boolean type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeEnum", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeEnum", "doc": "&quot;Create the column definition for an enum type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDate", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDate", "doc": "&quot;Create the column definition for a date type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDateTime", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDateTime", "doc": "&quot;Create the column definition for a date-time type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTime", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTime", "doc": "&quot;Create the column definition for a time type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTimestamp", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTimestamp", "doc": "&quot;Create the column definition for a timestamp type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBinary", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBinary", "doc": "&quot;Create the column definition for a binary type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyNullable", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyNullable", "doc": "&quot;Get the SQL for a nullable column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyDefault", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyDefault", "doc": "&quot;Get the SQL for a default column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html", "link": "Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyIncrement", "name": "Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyIncrement", "doc": "&quot;Get the SQL for an auto-increment column modifier.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Schema\\Grammars", "fromLink": "Illuminate/Database/Schema/Grammars.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileTableExists", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileTableExists", "doc": "&quot;Compile the query to determine if a table exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileColumnExists", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileColumnExists", "doc": "&quot;Compile the query to determine the list of columns.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileCreate", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileCreate", "doc": "&quot;Compile a create table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_addForeignKeys", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::addForeignKeys", "doc": "&quot;Get the foreign key syntax for a table creation statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_getForeignKey", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::getForeignKey", "doc": "&quot;Get the SQL for the foreign key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_addPrimaryKeys", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::addPrimaryKeys", "doc": "&quot;Get the primary key syntax for a table creation statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileAdd", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileAdd", "doc": "&quot;Compile alter table commands for adding columns&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileUnique", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileUnique", "doc": "&quot;Compile a unique key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileIndex", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileIndex", "doc": "&quot;Compile a plain index key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileForeign", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileForeign", "doc": "&quot;Compile a foreign key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDrop", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDrop", "doc": "&quot;Compile a drop table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropIfExists", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropIfExists", "doc": "&quot;Compile a drop table (if exists) command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropColumn", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropColumn", "doc": "&quot;Compile a drop column command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropUnique", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropUnique", "doc": "&quot;Compile a drop unique key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropIndex", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropIndex", "doc": "&quot;Compile a drop index command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileRename", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileRename", "doc": "&quot;Compile a rename table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeChar", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeChar", "doc": "&quot;Create the column definition for a char type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeString", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeString", "doc": "&quot;Create the column definition for a string type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeText", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeText", "doc": "&quot;Create the column definition for a text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMediumText", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMediumText", "doc": "&quot;Create the column definition for a medium text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeLongText", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeLongText", "doc": "&quot;Create the column definition for a long text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeInteger", "doc": "&quot;Create the column definition for a integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBigInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBigInteger", "doc": "&quot;Create the column definition for a big integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMediumInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMediumInteger", "doc": "&quot;Create the column definition for a medium integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTinyInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTinyInteger", "doc": "&quot;Create the column definition for a tiny integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeSmallInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeSmallInteger", "doc": "&quot;Create the column definition for a small integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeFloat", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeFloat", "doc": "&quot;Create the column definition for a float type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDouble", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDouble", "doc": "&quot;Create the column definition for a double type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDecimal", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDecimal", "doc": "&quot;Create the column definition for a decimal type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBoolean", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBoolean", "doc": "&quot;Create the column definition for a boolean type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeEnum", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeEnum", "doc": "&quot;Create the column definition for an enum type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDate", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDate", "doc": "&quot;Create the column definition for a date type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDateTime", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDateTime", "doc": "&quot;Create the column definition for a date-time type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTime", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTime", "doc": "&quot;Create the column definition for a time type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTimestamp", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTimestamp", "doc": "&quot;Create the column definition for a timestamp type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBinary", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBinary", "doc": "&quot;Create the column definition for a binary type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyNullable", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyNullable", "doc": "&quot;Get the SQL for a nullable column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyDefault", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyDefault", "doc": "&quot;Get the SQL for a default column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyIncrement", "name": "Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyIncrement", "doc": "&quot;Get the SQL for an auto-increment column modifier.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Schema\\Grammars", "fromLink": "Illuminate/Database/Schema/Grammars.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileTableExists", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileTableExists", "doc": "&quot;Compile the query to determine if a table exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileColumnExists", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileColumnExists", "doc": "&quot;Compile the query to determine the list of columns.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileCreate", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileCreate", "doc": "&quot;Compile a create table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileAdd", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileAdd", "doc": "&quot;Compile a create table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compilePrimary", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compilePrimary", "doc": "&quot;Compile a primary key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileUnique", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileUnique", "doc": "&quot;Compile a unique key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileIndex", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileIndex", "doc": "&quot;Compile a plain index key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDrop", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDrop", "doc": "&quot;Compile a drop table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropColumn", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropColumn", "doc": "&quot;Compile a drop column command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropPrimary", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropPrimary", "doc": "&quot;Compile a drop primary key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropUnique", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropUnique", "doc": "&quot;Compile a drop unique key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropIndex", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropIndex", "doc": "&quot;Compile a drop index command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropForeign", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropForeign", "doc": "&quot;Compile a drop foreign key command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileRename", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileRename", "doc": "&quot;Compile a rename table command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeChar", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeChar", "doc": "&quot;Create the column definition for a char type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeString", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeString", "doc": "&quot;Create the column definition for a string type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeText", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeText", "doc": "&quot;Create the column definition for a text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMediumText", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMediumText", "doc": "&quot;Create the column definition for a medium text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeLongText", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeLongText", "doc": "&quot;Create the column definition for a long text type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeInteger", "doc": "&quot;Create the column definition for a integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBigInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBigInteger", "doc": "&quot;Create the column definition for a big integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMediumInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMediumInteger", "doc": "&quot;Create the column definition for a medium integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTinyInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTinyInteger", "doc": "&quot;Create the column definition for a tiny integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeSmallInteger", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeSmallInteger", "doc": "&quot;Create the column definition for a small integer type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeFloat", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeFloat", "doc": "&quot;Create the column definition for a float type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDouble", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDouble", "doc": "&quot;Create the column definition for a double type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDecimal", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDecimal", "doc": "&quot;Create the column definition for a decimal type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBoolean", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBoolean", "doc": "&quot;Create the column definition for a boolean type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeEnum", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeEnum", "doc": "&quot;Create the column definition for an enum type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDate", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDate", "doc": "&quot;Create the column definition for a date type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDateTime", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDateTime", "doc": "&quot;Create the column definition for a date-time type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTime", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTime", "doc": "&quot;Create the column definition for a time type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTimestamp", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTimestamp", "doc": "&quot;Create the column definition for a timestamp type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBinary", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBinary", "doc": "&quot;Create the column definition for a binary type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyNullable", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyNullable", "doc": "&quot;Get the SQL for a nullable column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyDefault", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyDefault", "doc": "&quot;Get the SQL for a default column modifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar", "fromLink": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html", "link": "Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyIncrement", "name": "Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyIncrement", "doc": "&quot;Get the SQL for an auto-increment column modifier.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database\\Schema", "fromLink": "Illuminate/Database/Schema.html", "link": "Illuminate/Database/Schema/MySqlBuilder.html", "name": "Illuminate\\Database\\Schema\\MySqlBuilder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\MySqlBuilder", "fromLink": "Illuminate/Database/Schema/MySqlBuilder.html", "link": "Illuminate/Database/Schema/MySqlBuilder.html#method_hasTable", "name": "Illuminate\\Database\\Schema\\MySqlBuilder::hasTable", "doc": "&quot;Determine if the given table exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Schema\\MySqlBuilder", "fromLink": "Illuminate/Database/Schema/MySqlBuilder.html", "link": "Illuminate/Database/Schema/MySqlBuilder.html#method_getColumnListing", "name": "Illuminate\\Database\\Schema\\MySqlBuilder::getColumnListing", "doc": "&quot;Get the column listing for a given table.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/SeedServiceProvider.html", "name": "Illuminate\\Database\\SeedServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\SeedServiceProvider", "fromLink": "Illuminate/Database/SeedServiceProvider.html", "link": "Illuminate/Database/SeedServiceProvider.html#method_register", "name": "Illuminate\\Database\\SeedServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SeedServiceProvider", "fromLink": "Illuminate/Database/SeedServiceProvider.html", "link": "Illuminate/Database/SeedServiceProvider.html#method_registerSeedCommand", "name": "Illuminate\\Database\\SeedServiceProvider::registerSeedCommand", "doc": "&quot;Register the seed console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SeedServiceProvider", "fromLink": "Illuminate/Database/SeedServiceProvider.html", "link": "Illuminate/Database/SeedServiceProvider.html#method_provides", "name": "Illuminate\\Database\\SeedServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/Seeder.html", "name": "Illuminate\\Database\\Seeder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\Seeder", "fromLink": "Illuminate/Database/Seeder.html", "link": "Illuminate/Database/Seeder.html#method_run", "name": "Illuminate\\Database\\Seeder::run", "doc": "&quot;Run the database seeds.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Seeder", "fromLink": "Illuminate/Database/Seeder.html", "link": "Illuminate/Database/Seeder.html#method_call", "name": "Illuminate\\Database\\Seeder::call", "doc": "&quot;Seed the given connection from the given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Seeder", "fromLink": "Illuminate/Database/Seeder.html", "link": "Illuminate/Database/Seeder.html#method_resolve", "name": "Illuminate\\Database\\Seeder::resolve", "doc": "&quot;Resolve an instance of the given seeder class.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Seeder", "fromLink": "Illuminate/Database/Seeder.html", "link": "Illuminate/Database/Seeder.html#method_setContainer", "name": "Illuminate\\Database\\Seeder::setContainer", "doc": "&quot;Set the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\Seeder", "fromLink": "Illuminate/Database/Seeder.html", "link": "Illuminate/Database/Seeder.html#method_setCommand", "name": "Illuminate\\Database\\Seeder::setCommand", "doc": "&quot;Set the console command instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Database", "fromLink": "Illuminate/Database.html", "link": "Illuminate/Database/SqlServerConnection.html", "name": "Illuminate\\Database\\SqlServerConnection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Database\\SqlServerConnection", "fromLink": "Illuminate/Database/SqlServerConnection.html", "link": "Illuminate/Database/SqlServerConnection.html#method_transaction", "name": "Illuminate\\Database\\SqlServerConnection::transaction", "doc": "&quot;Execute a Closure within a transaction.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SqlServerConnection", "fromLink": "Illuminate/Database/SqlServerConnection.html", "link": "Illuminate/Database/SqlServerConnection.html#method_getDefaultQueryGrammar", "name": "Illuminate\\Database\\SqlServerConnection::getDefaultQueryGrammar", "doc": "&quot;Get the default query grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SqlServerConnection", "fromLink": "Illuminate/Database/SqlServerConnection.html", "link": "Illuminate/Database/SqlServerConnection.html#method_getDefaultSchemaGrammar", "name": "Illuminate\\Database\\SqlServerConnection::getDefaultSchemaGrammar", "doc": "&quot;Get the default schema grammar instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SqlServerConnection", "fromLink": "Illuminate/Database/SqlServerConnection.html", "link": "Illuminate/Database/SqlServerConnection.html#method_getDefaultPostProcessor", "name": "Illuminate\\Database\\SqlServerConnection::getDefaultPostProcessor", "doc": "&quot;Get the default post processor instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Database\\SqlServerConnection", "fromLink": "Illuminate/Database/SqlServerConnection.html", "link": "Illuminate/Database/SqlServerConnection.html#method_getDoctrineDriver", "name": "Illuminate\\Database\\SqlServerConnection::getDoctrineDriver", "doc": "&quot;Get the Doctrine DBAL Driver.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Encryption", "fromLink": "Illuminate/Encryption.html", "link": "Illuminate/Encryption/DecryptException.html", "name": "Illuminate\\Encryption\\DecryptException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Illuminate\\Encryption", "fromLink": "Illuminate/Encryption.html", "link": "Illuminate/Encryption/Encrypter.html", "name": "Illuminate\\Encryption\\Encrypter", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method___construct", "name": "Illuminate\\Encryption\\Encrypter::__construct", "doc": "&quot;Create a new encrypter instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_encrypt", "name": "Illuminate\\Encryption\\Encrypter::encrypt", "doc": "&quot;Encrypt the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_padAndMcrypt", "name": "Illuminate\\Encryption\\Encrypter::padAndMcrypt", "doc": "&quot;Pad and use mcrypt on the given value and input vector.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_decrypt", "name": "Illuminate\\Encryption\\Encrypter::decrypt", "doc": "&quot;Decrypt the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_mcryptDecrypt", "name": "Illuminate\\Encryption\\Encrypter::mcryptDecrypt", "doc": "&quot;Run the mcrypt decryption routine for the value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_getJsonPayload", "name": "Illuminate\\Encryption\\Encrypter::getJsonPayload", "doc": "&quot;Get the JSON array from the given payload.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_validMac", "name": "Illuminate\\Encryption\\Encrypter::validMac", "doc": "&quot;Determine if the MAC for the given payload is valid.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_hash", "name": "Illuminate\\Encryption\\Encrypter::hash", "doc": "&quot;Create a MAC for the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_addPadding", "name": "Illuminate\\Encryption\\Encrypter::addPadding", "doc": "&quot;Add PKCS7 padding to a given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_stripPadding", "name": "Illuminate\\Encryption\\Encrypter::stripPadding", "doc": "&quot;Remove the padding from the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_paddingIsValid", "name": "Illuminate\\Encryption\\Encrypter::paddingIsValid", "doc": "&quot;Determine if the given padding for a value is valid.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_invalidPayload", "name": "Illuminate\\Encryption\\Encrypter::invalidPayload", "doc": "&quot;Verify that the encryption payload is valid.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_getIvSize", "name": "Illuminate\\Encryption\\Encrypter::getIvSize", "doc": "&quot;Get the IV size for the cipher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_getRandomizer", "name": "Illuminate\\Encryption\\Encrypter::getRandomizer", "doc": "&quot;Get the random data source available for the OS.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_setKey", "name": "Illuminate\\Encryption\\Encrypter::setKey", "doc": "&quot;Set the encryption key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_setCipher", "name": "Illuminate\\Encryption\\Encrypter::setCipher", "doc": "&quot;Set the encryption cipher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_setMode", "name": "Illuminate\\Encryption\\Encrypter::setMode", "doc": "&quot;Set the encryption mode.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Encryption\\Encrypter", "fromLink": "Illuminate/Encryption/Encrypter.html", "link": "Illuminate/Encryption/Encrypter.html#method_updateBlockSize", "name": "Illuminate\\Encryption\\Encrypter::updateBlockSize", "doc": "&quot;Update the block size for the current cipher and mode.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Encryption", "fromLink": "Illuminate/Encryption.html", "link": "Illuminate/Encryption/EncryptionServiceProvider.html", "name": "Illuminate\\Encryption\\EncryptionServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Encryption\\EncryptionServiceProvider", "fromLink": "Illuminate/Encryption/EncryptionServiceProvider.html", "link": "Illuminate/Encryption/EncryptionServiceProvider.html#method_register", "name": "Illuminate\\Encryption\\EncryptionServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Encryption", "fromLink": "Illuminate/Encryption.html", "link": "Illuminate/Encryption/InvalidKeyException.html", "name": "Illuminate\\Encryption\\InvalidKeyException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Illuminate\\Events", "fromLink": "Illuminate/Events.html", "link": "Illuminate/Events/Dispatcher.html", "name": "Illuminate\\Events\\Dispatcher", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method___construct", "name": "Illuminate\\Events\\Dispatcher::__construct", "doc": "&quot;Create a new event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_listen", "name": "Illuminate\\Events\\Dispatcher::listen", "doc": "&quot;Register an event listener with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_setupWildcardListen", "name": "Illuminate\\Events\\Dispatcher::setupWildcardListen", "doc": "&quot;Setup a wildcard listener callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_hasListeners", "name": "Illuminate\\Events\\Dispatcher::hasListeners", "doc": "&quot;Determine if a given event has listeners.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_queue", "name": "Illuminate\\Events\\Dispatcher::queue", "doc": "&quot;Register a queued event and payload.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_subscribe", "name": "Illuminate\\Events\\Dispatcher::subscribe", "doc": "&quot;Register an event subscriber with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_resolveSubscriber", "name": "Illuminate\\Events\\Dispatcher::resolveSubscriber", "doc": "&quot;Resolve the subscriber instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_until", "name": "Illuminate\\Events\\Dispatcher::until", "doc": "&quot;Fire an event until the first non-null response is returned.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_flush", "name": "Illuminate\\Events\\Dispatcher::flush", "doc": "&quot;Flush a set of queued events.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_firing", "name": "Illuminate\\Events\\Dispatcher::firing", "doc": "&quot;Get the event that is currently firing.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_fire", "name": "Illuminate\\Events\\Dispatcher::fire", "doc": "&quot;Fire an event and call the listeners.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_getListeners", "name": "Illuminate\\Events\\Dispatcher::getListeners", "doc": "&quot;Get all of the listeners for a given event name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_getWildcardListeners", "name": "Illuminate\\Events\\Dispatcher::getWildcardListeners", "doc": "&quot;Get the wildcard listeners for the event.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_sortListeners", "name": "Illuminate\\Events\\Dispatcher::sortListeners", "doc": "&quot;Sort the listeners for a given event by priority.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_makeListener", "name": "Illuminate\\Events\\Dispatcher::makeListener", "doc": "&quot;Register an event listener with the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_createClassListener", "name": "Illuminate\\Events\\Dispatcher::createClassListener", "doc": "&quot;Create a class based listener using the IoC container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_forget", "name": "Illuminate\\Events\\Dispatcher::forget", "doc": "&quot;Remove a set of listeners from the dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Events\\Dispatcher", "fromLink": "Illuminate/Events/Dispatcher.html", "link": "Illuminate/Events/Dispatcher.html#method_forgetQueued", "name": "Illuminate\\Events\\Dispatcher::forgetQueued", "doc": "&quot;Forget all of the queued listeners.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Events", "fromLink": "Illuminate/Events.html", "link": "Illuminate/Events/EventServiceProvider.html", "name": "Illuminate\\Events\\EventServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Events\\EventServiceProvider", "fromLink": "Illuminate/Events/EventServiceProvider.html", "link": "Illuminate/Events/EventServiceProvider.html#method_register", "name": "Illuminate\\Events\\EventServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Exception", "fromLink": "Illuminate/Exception.html", "link": "Illuminate/Exception/ExceptionDisplayerInterface.html", "name": "Illuminate\\Exception\\ExceptionDisplayerInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionDisplayerInterface", "fromLink": "Illuminate/Exception/ExceptionDisplayerInterface.html", "link": "Illuminate/Exception/ExceptionDisplayerInterface.html#method_display", "name": "Illuminate\\Exception\\ExceptionDisplayerInterface::display", "doc": "&quot;Display the given exception to the user.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Exception", "fromLink": "Illuminate/Exception.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html", "name": "Illuminate\\Exception\\ExceptionServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_register", "name": "Illuminate\\Exception\\ExceptionServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_registerDisplayers", "name": "Illuminate\\Exception\\ExceptionServiceProvider::registerDisplayers", "doc": "&quot;Register the exception displayers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_registerHandler", "name": "Illuminate\\Exception\\ExceptionServiceProvider::registerHandler", "doc": "&quot;Register the exception handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_registerPlainDisplayer", "name": "Illuminate\\Exception\\ExceptionServiceProvider::registerPlainDisplayer", "doc": "&quot;Register the plain exception displayer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_registerDebugDisplayer", "name": "Illuminate\\Exception\\ExceptionServiceProvider::registerDebugDisplayer", "doc": "&quot;Register the Whoops exception displayer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_registerWhoops", "name": "Illuminate\\Exception\\ExceptionServiceProvider::registerWhoops", "doc": "&quot;Register the Whoops error display service.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_registerWhoopsHandler", "name": "Illuminate\\Exception\\ExceptionServiceProvider::registerWhoopsHandler", "doc": "&quot;Register the Whoops handler for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_shouldReturnJson", "name": "Illuminate\\Exception\\ExceptionServiceProvider::shouldReturnJson", "doc": "&quot;Determine if the error provider should return JSON.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_requestWantsJson", "name": "Illuminate\\Exception\\ExceptionServiceProvider::requestWantsJson", "doc": "&quot;Determine if the request warrants a JSON response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\ExceptionServiceProvider", "fromLink": "Illuminate/Exception/ExceptionServiceProvider.html", "link": "Illuminate/Exception/ExceptionServiceProvider.html#method_registerPrettyWhoopsHandler", "name": "Illuminate\\Exception\\ExceptionServiceProvider::registerPrettyWhoopsHandler", "doc": "&quot;Register the \&quot;pretty\&quot; Whoops handler.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Exception", "fromLink": "Illuminate/Exception.html", "link": "Illuminate/Exception/Handler.html", "name": "Illuminate\\Exception\\Handler", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method___construct", "name": "Illuminate\\Exception\\Handler::__construct", "doc": "&quot;Create a new error handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_register", "name": "Illuminate\\Exception\\Handler::register", "doc": "&quot;Register the exception \/ error handlers for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_registerErrorHandler", "name": "Illuminate\\Exception\\Handler::registerErrorHandler", "doc": "&quot;Register the PHP error handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_registerExceptionHandler", "name": "Illuminate\\Exception\\Handler::registerExceptionHandler", "doc": "&quot;Register the PHP exception handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_registerShutdownHandler", "name": "Illuminate\\Exception\\Handler::registerShutdownHandler", "doc": "&quot;Register the PHP shutdown handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_handleError", "name": "Illuminate\\Exception\\Handler::handleError", "doc": "&quot;Handle a PHP error for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_handleException", "name": "Illuminate\\Exception\\Handler::handleException", "doc": "&quot;Handle an exception for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_handleUncaughtException", "name": "Illuminate\\Exception\\Handler::handleUncaughtException", "doc": "&quot;Handle an uncaught exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_handleShutdown", "name": "Illuminate\\Exception\\Handler::handleShutdown", "doc": "&quot;Handle the PHP shutdown event.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_isFatal", "name": "Illuminate\\Exception\\Handler::isFatal", "doc": "&quot;Determine if the error type is fatal.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_handleConsole", "name": "Illuminate\\Exception\\Handler::handleConsole", "doc": "&quot;Handle a console exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_callCustomHandlers", "name": "Illuminate\\Exception\\Handler::callCustomHandlers", "doc": "&quot;Handle the given exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_displayException", "name": "Illuminate\\Exception\\Handler::displayException", "doc": "&quot;Display the given exception to the user.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_handlesException", "name": "Illuminate\\Exception\\Handler::handlesException", "doc": "&quot;Determine if the given handler handles this exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_hints", "name": "Illuminate\\Exception\\Handler::hints", "doc": "&quot;Determine if the given handler type hints the exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_formatException", "name": "Illuminate\\Exception\\Handler::formatException", "doc": "&quot;Format an exception thrown by a handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_error", "name": "Illuminate\\Exception\\Handler::error", "doc": "&quot;Register an application error handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_pushError", "name": "Illuminate\\Exception\\Handler::pushError", "doc": "&quot;Register an application error handler at the bottom of the stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_prepareResponse", "name": "Illuminate\\Exception\\Handler::prepareResponse", "doc": "&quot;Prepare the given response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_runningInConsole", "name": "Illuminate\\Exception\\Handler::runningInConsole", "doc": "&quot;Determine if we are running in the console.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\Handler", "fromLink": "Illuminate/Exception/Handler.html", "link": "Illuminate/Exception/Handler.html#method_setDebug", "name": "Illuminate\\Exception\\Handler::setDebug", "doc": "&quot;Set the debug level for the handler.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Exception", "fromLink": "Illuminate/Exception.html", "link": "Illuminate/Exception/PlainDisplayer.html", "name": "Illuminate\\Exception\\PlainDisplayer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Exception\\PlainDisplayer", "fromLink": "Illuminate/Exception/PlainDisplayer.html", "link": "Illuminate/Exception/PlainDisplayer.html#method_display", "name": "Illuminate\\Exception\\PlainDisplayer::display", "doc": "&quot;Display the given exception to the user.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Exception", "fromLink": "Illuminate/Exception.html", "link": "Illuminate/Exception/SymfonyDisplayer.html", "name": "Illuminate\\Exception\\SymfonyDisplayer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Exception\\SymfonyDisplayer", "fromLink": "Illuminate/Exception/SymfonyDisplayer.html", "link": "Illuminate/Exception/SymfonyDisplayer.html#method___construct", "name": "Illuminate\\Exception\\SymfonyDisplayer::__construct", "doc": "&quot;Create a new Symfony exception displayer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\SymfonyDisplayer", "fromLink": "Illuminate/Exception/SymfonyDisplayer.html", "link": "Illuminate/Exception/SymfonyDisplayer.html#method_display", "name": "Illuminate\\Exception\\SymfonyDisplayer::display", "doc": "&quot;Display the given exception to the user.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Exception", "fromLink": "Illuminate/Exception.html", "link": "Illuminate/Exception/WhoopsDisplayer.html", "name": "Illuminate\\Exception\\WhoopsDisplayer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Exception\\WhoopsDisplayer", "fromLink": "Illuminate/Exception/WhoopsDisplayer.html", "link": "Illuminate/Exception/WhoopsDisplayer.html#method___construct", "name": "Illuminate\\Exception\\WhoopsDisplayer::__construct", "doc": "&quot;Create a new Whoops exception displayer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Exception\\WhoopsDisplayer", "fromLink": "Illuminate/Exception/WhoopsDisplayer.html", "link": "Illuminate/Exception/WhoopsDisplayer.html#method_display", "name": "Illuminate\\Exception\\WhoopsDisplayer::display", "doc": "&quot;Display the given exception to the user.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Filesystem", "fromLink": "Illuminate/Filesystem.html", "link": "Illuminate/Filesystem/FileNotFoundException.html", "name": "Illuminate\\Filesystem\\FileNotFoundException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Illuminate\\Filesystem", "fromLink": "Illuminate/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html", "name": "Illuminate\\Filesystem\\Filesystem", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_exists", "name": "Illuminate\\Filesystem\\Filesystem::exists", "doc": "&quot;Determine if a file exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_get", "name": "Illuminate\\Filesystem\\Filesystem::get", "doc": "&quot;Get the contents of a file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_getRequire", "name": "Illuminate\\Filesystem\\Filesystem::getRequire", "doc": "&quot;Get the returned value of a file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_requireOnce", "name": "Illuminate\\Filesystem\\Filesystem::requireOnce", "doc": "&quot;Require the given file once.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_put", "name": "Illuminate\\Filesystem\\Filesystem::put", "doc": "&quot;Write the contents of a file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_prepend", "name": "Illuminate\\Filesystem\\Filesystem::prepend", "doc": "&quot;Prepend to a file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_append", "name": "Illuminate\\Filesystem\\Filesystem::append", "doc": "&quot;Append to a file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_delete", "name": "Illuminate\\Filesystem\\Filesystem::delete", "doc": "&quot;Delete the file at a given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_move", "name": "Illuminate\\Filesystem\\Filesystem::move", "doc": "&quot;Move a file to a new location.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_copy", "name": "Illuminate\\Filesystem\\Filesystem::copy", "doc": "&quot;Copy a file to a new location.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_name", "name": "Illuminate\\Filesystem\\Filesystem::name", "doc": "&quot;Extract the file name from a file path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_extension", "name": "Illuminate\\Filesystem\\Filesystem::extension", "doc": "&quot;Extract the file extension from a file path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_type", "name": "Illuminate\\Filesystem\\Filesystem::type", "doc": "&quot;Get the file type of a given file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_size", "name": "Illuminate\\Filesystem\\Filesystem::size", "doc": "&quot;Get the file size of a given file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_lastModified", "name": "Illuminate\\Filesystem\\Filesystem::lastModified", "doc": "&quot;Get the file&#039;s last modification time.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_isDirectory", "name": "Illuminate\\Filesystem\\Filesystem::isDirectory", "doc": "&quot;Determine if the given path is a directory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_isWritable", "name": "Illuminate\\Filesystem\\Filesystem::isWritable", "doc": "&quot;Determine if the given path is writable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_isFile", "name": "Illuminate\\Filesystem\\Filesystem::isFile", "doc": "&quot;Determine if the given path is a file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_glob", "name": "Illuminate\\Filesystem\\Filesystem::glob", "doc": "&quot;Find path names matching a given pattern.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_files", "name": "Illuminate\\Filesystem\\Filesystem::files", "doc": "&quot;Get an array of all files in a directory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_allFiles", "name": "Illuminate\\Filesystem\\Filesystem::allFiles", "doc": "&quot;Get all of the files from the given directory (recursive).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_directories", "name": "Illuminate\\Filesystem\\Filesystem::directories", "doc": "&quot;Get all of the directories within a given directory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_makeDirectory", "name": "Illuminate\\Filesystem\\Filesystem::makeDirectory", "doc": "&quot;Create a directory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_copyDirectory", "name": "Illuminate\\Filesystem\\Filesystem::copyDirectory", "doc": "&quot;Copy a directory from one location to another.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_deleteDirectory", "name": "Illuminate\\Filesystem\\Filesystem::deleteDirectory", "doc": "&quot;Recursively delete a directory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Filesystem\\Filesystem", "fromLink": "Illuminate/Filesystem/Filesystem.html", "link": "Illuminate/Filesystem/Filesystem.html#method_cleanDirectory", "name": "Illuminate\\Filesystem\\Filesystem::cleanDirectory", "doc": "&quot;Empty the specified directory of all files and folders.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Filesystem", "fromLink": "Illuminate/Filesystem.html", "link": "Illuminate/Filesystem/FilesystemServiceProvider.html", "name": "Illuminate\\Filesystem\\FilesystemServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Filesystem\\FilesystemServiceProvider", "fromLink": "Illuminate/Filesystem/FilesystemServiceProvider.html", "link": "Illuminate/Filesystem/FilesystemServiceProvider.html#method_register", "name": "Illuminate\\Filesystem\\FilesystemServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/AliasLoader.html", "name": "Illuminate\\Foundation\\AliasLoader", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method___construct", "name": "Illuminate\\Foundation\\AliasLoader::__construct", "doc": "&quot;Create a new class alias loader instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_getInstance", "name": "Illuminate\\Foundation\\AliasLoader::getInstance", "doc": "&quot;Get or create the singleton alias loader instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_load", "name": "Illuminate\\Foundation\\AliasLoader::load", "doc": "&quot;Load a class alias if it is registered.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_alias", "name": "Illuminate\\Foundation\\AliasLoader::alias", "doc": "&quot;Add an alias to the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_register", "name": "Illuminate\\Foundation\\AliasLoader::register", "doc": "&quot;Register the loader on the auto-loader stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_prependToLoaderStack", "name": "Illuminate\\Foundation\\AliasLoader::prependToLoaderStack", "doc": "&quot;Prepend the load method to the auto-loader stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_getAliases", "name": "Illuminate\\Foundation\\AliasLoader::getAliases", "doc": "&quot;Get the registered aliases.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_setAliases", "name": "Illuminate\\Foundation\\AliasLoader::setAliases", "doc": "&quot;Set the registered aliases.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_isRegistered", "name": "Illuminate\\Foundation\\AliasLoader::isRegistered", "doc": "&quot;Indicates if the loader has been registered.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_setRegistered", "name": "Illuminate\\Foundation\\AliasLoader::setRegistered", "doc": "&quot;Set the \&quot;registered\&quot; state of the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AliasLoader", "fromLink": "Illuminate/Foundation/AliasLoader.html", "link": "Illuminate/Foundation/AliasLoader.html#method_setInstance", "name": "Illuminate\\Foundation\\AliasLoader::setInstance", "doc": "&quot;Set the value of the singleton alias loader.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/Application.html", "name": "Illuminate\\Foundation\\Application", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method___construct", "name": "Illuminate\\Foundation\\Application::__construct", "doc": "&quot;Create a new Illuminate application instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_createNewRequest", "name": "Illuminate\\Foundation\\Application::createNewRequest", "doc": "&quot;Create a new request instance from the request class.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_registerBaseBindings", "name": "Illuminate\\Foundation\\Application::registerBaseBindings", "doc": "&quot;Register the basic bindings into the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_registerBaseServiceProviders", "name": "Illuminate\\Foundation\\Application::registerBaseServiceProviders", "doc": "&quot;Register all of the base service providers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_registerExceptionProvider", "name": "Illuminate\\Foundation\\Application::registerExceptionProvider", "doc": "&quot;Register the exception service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_registerRoutingProvider", "name": "Illuminate\\Foundation\\Application::registerRoutingProvider", "doc": "&quot;Register the routing service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_registerEventProvider", "name": "Illuminate\\Foundation\\Application::registerEventProvider", "doc": "&quot;Register the event service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_bindInstallPaths", "name": "Illuminate\\Foundation\\Application::bindInstallPaths", "doc": "&quot;Bind the installation paths to the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_getBootstrapFile", "name": "Illuminate\\Foundation\\Application::getBootstrapFile", "doc": "&quot;Get the application bootstrap file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_startExceptionHandling", "name": "Illuminate\\Foundation\\Application::startExceptionHandling", "doc": "&quot;Start the exception handling for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_environment", "name": "Illuminate\\Foundation\\Application::environment", "doc": "&quot;Get or check the current application environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_isLocal", "name": "Illuminate\\Foundation\\Application::isLocal", "doc": "&quot;Determine if application is in local environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_detectEnvironment", "name": "Illuminate\\Foundation\\Application::detectEnvironment", "doc": "&quot;Detect the application&#039;s current environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_runningInConsole", "name": "Illuminate\\Foundation\\Application::runningInConsole", "doc": "&quot;Determine if we are running in the console.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_runningUnitTests", "name": "Illuminate\\Foundation\\Application::runningUnitTests", "doc": "&quot;Determine if we are running unit tests.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_forceRegister", "name": "Illuminate\\Foundation\\Application::forceRegister", "doc": "&quot;Force register a service provider with the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_register", "name": "Illuminate\\Foundation\\Application::register", "doc": "&quot;Register a service provider with the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_getRegistered", "name": "Illuminate\\Foundation\\Application::getRegistered", "doc": "&quot;Get the registered service provider instance if it exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_resolveProviderClass", "name": "Illuminate\\Foundation\\Application::resolveProviderClass", "doc": "&quot;Resolve a service provider instance from the class name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_markAsRegistered", "name": "Illuminate\\Foundation\\Application::markAsRegistered", "doc": "&quot;Mark the given provider as registered.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_loadDeferredProviders", "name": "Illuminate\\Foundation\\Application::loadDeferredProviders", "doc": "&quot;Load and boot all of the remaining deferred providers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_loadDeferredProvider", "name": "Illuminate\\Foundation\\Application::loadDeferredProvider", "doc": "&quot;Load the provider for a deferred service.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_registerDeferredProvider", "name": "Illuminate\\Foundation\\Application::registerDeferredProvider", "doc": "&quot;Register a deferred provider and service.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_make", "name": "Illuminate\\Foundation\\Application::make", "doc": "&quot;Resolve the given type from the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_bound", "name": "Illuminate\\Foundation\\Application::bound", "doc": "&quot;Determine if the given abstract type has been bound.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_extend", "name": "Illuminate\\Foundation\\Application::extend", "doc": "&quot;\&quot;Extend\&quot; an abstract type in the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_before", "name": "Illuminate\\Foundation\\Application::before", "doc": "&quot;Register a \&quot;before\&quot; application filter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_after", "name": "Illuminate\\Foundation\\Application::after", "doc": "&quot;Register an \&quot;after\&quot; application filter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_finish", "name": "Illuminate\\Foundation\\Application::finish", "doc": "&quot;Register a \&quot;finish\&quot; application filter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_shutdown", "name": "Illuminate\\Foundation\\Application::shutdown", "doc": "&quot;Register a \&quot;shutdown\&quot; callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_useArraySessions", "name": "Illuminate\\Foundation\\Application::useArraySessions", "doc": "&quot;Register a function for determining when to use array sessions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_isBooted", "name": "Illuminate\\Foundation\\Application::isBooted", "doc": "&quot;Determine if the application has booted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_boot", "name": "Illuminate\\Foundation\\Application::boot", "doc": "&quot;Boot the application&#039;s service providers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_bootApplication", "name": "Illuminate\\Foundation\\Application::bootApplication", "doc": "&quot;Boot the application and fire app callbacks.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_booting", "name": "Illuminate\\Foundation\\Application::booting", "doc": "&quot;Register a new boot listener.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_booted", "name": "Illuminate\\Foundation\\Application::booted", "doc": "&quot;Register a new \&quot;booted\&quot; listener.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_run", "name": "Illuminate\\Foundation\\Application::run", "doc": "&quot;Run the application and send the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_getStackedClient", "name": "Illuminate\\Foundation\\Application::getStackedClient", "doc": "&quot;Get the stacked HTTP kernel for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_mergeCustomMiddlewares", "name": "Illuminate\\Foundation\\Application::mergeCustomMiddlewares", "doc": "&quot;Merge the developer defined middlewares onto the stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_registerBaseMiddlewares", "name": "Illuminate\\Foundation\\Application::registerBaseMiddlewares", "doc": "&quot;Register the default, but optional middlewares.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_middleware", "name": "Illuminate\\Foundation\\Application::middleware", "doc": "&quot;Add a HttpKernel middleware onto the stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_forgetMiddleware", "name": "Illuminate\\Foundation\\Application::forgetMiddleware", "doc": "&quot;Remove a custom middleware from the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_handle", "name": "Illuminate\\Foundation\\Application::handle", "doc": "&quot;Handle the given request and get the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_dispatch", "name": "Illuminate\\Foundation\\Application::dispatch", "doc": "&quot;Handle the given request and get the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_terminate", "name": "Illuminate\\Foundation\\Application::terminate", "doc": "&quot;Call the \&quot;finish\&quot; and \&quot;shutdown\&quot; callbacks assigned to the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_refreshRequest", "name": "Illuminate\\Foundation\\Application::refreshRequest", "doc": "&quot;Refresh the bound request instance in the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_callFinishCallbacks", "name": "Illuminate\\Foundation\\Application::callFinishCallbacks", "doc": "&quot;Call the \&quot;finish\&quot; callbacks assigned to the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_fireAppCallbacks", "name": "Illuminate\\Foundation\\Application::fireAppCallbacks", "doc": "&quot;Call the booting callbacks for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_prepareRequest", "name": "Illuminate\\Foundation\\Application::prepareRequest", "doc": "&quot;Prepare the request by injecting any services.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_prepareResponse", "name": "Illuminate\\Foundation\\Application::prepareResponse", "doc": "&quot;Prepare the given value as a Response object.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_readyForResponses", "name": "Illuminate\\Foundation\\Application::readyForResponses", "doc": "&quot;Determine if the application is ready for responses.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_isDownForMaintenance", "name": "Illuminate\\Foundation\\Application::isDownForMaintenance", "doc": "&quot;Determine if the application is currently down for maintenance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_down", "name": "Illuminate\\Foundation\\Application::down", "doc": "&quot;Register a maintenance mode event listener.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_abort", "name": "Illuminate\\Foundation\\Application::abort", "doc": "&quot;Throw an HttpException with the given data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_missing", "name": "Illuminate\\Foundation\\Application::missing", "doc": "&quot;Register a 404 error handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_error", "name": "Illuminate\\Foundation\\Application::error", "doc": "&quot;Register an application error handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_pushError", "name": "Illuminate\\Foundation\\Application::pushError", "doc": "&quot;Register an error handler at the bottom of the stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_fatal", "name": "Illuminate\\Foundation\\Application::fatal", "doc": "&quot;Register an error handler for fatal errors.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_getConfigLoader", "name": "Illuminate\\Foundation\\Application::getConfigLoader", "doc": "&quot;Get the configuration loader instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_getEnvironmentVariablesLoader", "name": "Illuminate\\Foundation\\Application::getEnvironmentVariablesLoader", "doc": "&quot;Get the environment variables loader instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_getProviderRepository", "name": "Illuminate\\Foundation\\Application::getProviderRepository", "doc": "&quot;Get the service provider repository instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_getLoadedProviders", "name": "Illuminate\\Foundation\\Application::getLoadedProviders", "doc": "&quot;Get the service providers that have been loaded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_setDeferredServices", "name": "Illuminate\\Foundation\\Application::setDeferredServices", "doc": "&quot;Set the application&#039;s deferred services.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_isDeferredService", "name": "Illuminate\\Foundation\\Application::isDeferredService", "doc": "&quot;Determine if the given service is a deferred service.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_requestClass", "name": "Illuminate\\Foundation\\Application::requestClass", "doc": "&quot;Get or set the request class for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_setRequestForConsoleEnvironment", "name": "Illuminate\\Foundation\\Application::setRequestForConsoleEnvironment", "doc": "&quot;Set the application request for the console environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_onRequest", "name": "Illuminate\\Foundation\\Application::onRequest", "doc": "&quot;Call a method on the default request class.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_getLocale", "name": "Illuminate\\Foundation\\Application::getLocale", "doc": "&quot;Get the current application locale.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_setLocale", "name": "Illuminate\\Foundation\\Application::setLocale", "doc": "&quot;Set the current application locale.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Application", "fromLink": "Illuminate/Foundation/Application.html", "link": "Illuminate/Foundation/Application.html#method_registerCoreContainerAliases", "name": "Illuminate\\Foundation\\Application::registerCoreContainerAliases", "doc": "&quot;Register the core class aliases in the container.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/Artisan.html", "name": "Illuminate\\Foundation\\Artisan", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Artisan", "fromLink": "Illuminate/Foundation/Artisan.html", "link": "Illuminate/Foundation/Artisan.html#method___construct", "name": "Illuminate\\Foundation\\Artisan::__construct", "doc": "&quot;Create a new Artisan command runner instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Artisan", "fromLink": "Illuminate/Foundation/Artisan.html", "link": "Illuminate/Foundation/Artisan.html#method_getArtisan", "name": "Illuminate\\Foundation\\Artisan::getArtisan", "doc": "&quot;Get the Artisan console instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Artisan", "fromLink": "Illuminate/Foundation/Artisan.html", "link": "Illuminate/Foundation/Artisan.html#method___call", "name": "Illuminate\\Foundation\\Artisan::__call", "doc": "&quot;Dynamically pass all missing methods to console Artisan.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/AssetPublisher.html", "name": "Illuminate\\Foundation\\AssetPublisher", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\AssetPublisher", "fromLink": "Illuminate/Foundation/AssetPublisher.html", "link": "Illuminate/Foundation/AssetPublisher.html#method___construct", "name": "Illuminate\\Foundation\\AssetPublisher::__construct", "doc": "&quot;Create a new asset publisher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AssetPublisher", "fromLink": "Illuminate/Foundation/AssetPublisher.html", "link": "Illuminate/Foundation/AssetPublisher.html#method_publish", "name": "Illuminate\\Foundation\\AssetPublisher::publish", "doc": "&quot;Copy all assets from a given path to the publish path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AssetPublisher", "fromLink": "Illuminate/Foundation/AssetPublisher.html", "link": "Illuminate/Foundation/AssetPublisher.html#method_publishPackage", "name": "Illuminate\\Foundation\\AssetPublisher::publishPackage", "doc": "&quot;Publish a given package&#039;s assets to the publish path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\AssetPublisher", "fromLink": "Illuminate/Foundation/AssetPublisher.html", "link": "Illuminate/Foundation/AssetPublisher.html#method_setPackagePath", "name": "Illuminate\\Foundation\\AssetPublisher::setPackagePath", "doc": "&quot;Set the default package path.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/Composer.html", "name": "Illuminate\\Foundation\\Composer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Composer", "fromLink": "Illuminate/Foundation/Composer.html", "link": "Illuminate/Foundation/Composer.html#method___construct", "name": "Illuminate\\Foundation\\Composer::__construct", "doc": "&quot;Create a new Composer manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Composer", "fromLink": "Illuminate/Foundation/Composer.html", "link": "Illuminate/Foundation/Composer.html#method_dumpAutoloads", "name": "Illuminate\\Foundation\\Composer::dumpAutoloads", "doc": "&quot;Regenerate the Composer autoloader files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Composer", "fromLink": "Illuminate/Foundation/Composer.html", "link": "Illuminate/Foundation/Composer.html#method_dumpOptimized", "name": "Illuminate\\Foundation\\Composer::dumpOptimized", "doc": "&quot;Regenerate the optimized Composer autoloader files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Composer", "fromLink": "Illuminate/Foundation/Composer.html", "link": "Illuminate/Foundation/Composer.html#method_findComposer", "name": "Illuminate\\Foundation\\Composer::findComposer", "doc": "&quot;Get the composer command for the environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Composer", "fromLink": "Illuminate/Foundation/Composer.html", "link": "Illuminate/Foundation/Composer.html#method_getProcess", "name": "Illuminate\\Foundation\\Composer::getProcess", "doc": "&quot;Get a new Symfony process instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Composer", "fromLink": "Illuminate/Foundation/Composer.html", "link": "Illuminate/Foundation/Composer.html#method_setWorkingPath", "name": "Illuminate\\Foundation\\Composer::setWorkingPath", "doc": "&quot;Set the working path used by the class.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/ConfigPublisher.html", "name": "Illuminate\\Foundation\\ConfigPublisher", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\ConfigPublisher", "fromLink": "Illuminate/Foundation/ConfigPublisher.html", "link": "Illuminate/Foundation/ConfigPublisher.html#method___construct", "name": "Illuminate\\Foundation\\ConfigPublisher::__construct", "doc": "&quot;Create a new configuration publisher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ConfigPublisher", "fromLink": "Illuminate/Foundation/ConfigPublisher.html", "link": "Illuminate/Foundation/ConfigPublisher.html#method_publish", "name": "Illuminate\\Foundation\\ConfigPublisher::publish", "doc": "&quot;Publish configuration files from a given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ConfigPublisher", "fromLink": "Illuminate/Foundation/ConfigPublisher.html", "link": "Illuminate/Foundation/ConfigPublisher.html#method_publishPackage", "name": "Illuminate\\Foundation\\ConfigPublisher::publishPackage", "doc": "&quot;Publish the configuration files for a package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ConfigPublisher", "fromLink": "Illuminate/Foundation/ConfigPublisher.html", "link": "Illuminate/Foundation/ConfigPublisher.html#method_getSource", "name": "Illuminate\\Foundation\\ConfigPublisher::getSource", "doc": "&quot;Get the source configuration directory to publish.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ConfigPublisher", "fromLink": "Illuminate/Foundation/ConfigPublisher.html", "link": "Illuminate/Foundation/ConfigPublisher.html#method_makeDestination", "name": "Illuminate\\Foundation\\ConfigPublisher::makeDestination", "doc": "&quot;Create the destination directory if it doesn&#039;t exist.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ConfigPublisher", "fromLink": "Illuminate/Foundation/ConfigPublisher.html", "link": "Illuminate/Foundation/ConfigPublisher.html#method_alreadyPublished", "name": "Illuminate\\Foundation\\ConfigPublisher::alreadyPublished", "doc": "&quot;Determine if a given package has already been published.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ConfigPublisher", "fromLink": "Illuminate/Foundation/ConfigPublisher.html", "link": "Illuminate/Foundation/ConfigPublisher.html#method_getDestinationPath", "name": "Illuminate\\Foundation\\ConfigPublisher::getDestinationPath", "doc": "&quot;Get the target destination path for the configuration files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ConfigPublisher", "fromLink": "Illuminate/Foundation/ConfigPublisher.html", "link": "Illuminate/Foundation/ConfigPublisher.html#method_setPackagePath", "name": "Illuminate\\Foundation\\ConfigPublisher::setPackagePath", "doc": "&quot;Set the default package path.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "fromLink": "Illuminate/Foundation/Console/AssetPublishCommand.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html#method___construct", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand::__construct", "doc": "&quot;Create a new asset publish command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "fromLink": "Illuminate/Foundation/Console/AssetPublishCommand.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "fromLink": "Illuminate/Foundation/Console/AssetPublishCommand.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html#method_publishAssets", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand::publishAssets", "doc": "&quot;Publish the assets for a given package name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "fromLink": "Illuminate/Foundation/Console/AssetPublishCommand.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html#method_getPackages", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand::getPackages", "doc": "&quot;Get the name of the package being published.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "fromLink": "Illuminate/Foundation/Console/AssetPublishCommand.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html#method_findAllAssetPackages", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand::findAllAssetPackages", "doc": "&quot;Find all the asset hosting packages in the system.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "fromLink": "Illuminate/Foundation/Console/AssetPublishCommand.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html#method_getPath", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand::getPath", "doc": "&quot;Get the specified path to the files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "fromLink": "Illuminate/Foundation/Console/AssetPublishCommand.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html#method_getArguments", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AssetPublishCommand", "fromLink": "Illuminate/Foundation/Console/AssetPublishCommand.html", "link": "Illuminate/Foundation/Console/AssetPublishCommand.html#method_getOptions", "name": "Illuminate\\Foundation\\Console\\AssetPublishCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/AutoloadCommand.html", "name": "Illuminate\\Foundation\\Console\\AutoloadCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AutoloadCommand", "fromLink": "Illuminate/Foundation/Console/AutoloadCommand.html", "link": "Illuminate/Foundation/Console/AutoloadCommand.html#method___construct", "name": "Illuminate\\Foundation\\Console\\AutoloadCommand::__construct", "doc": "&quot;Create a new optimize command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AutoloadCommand", "fromLink": "Illuminate/Foundation/Console/AutoloadCommand.html", "link": "Illuminate/Foundation/Console/AutoloadCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\AutoloadCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AutoloadCommand", "fromLink": "Illuminate/Foundation/Console/AutoloadCommand.html", "link": "Illuminate/Foundation/Console/AutoloadCommand.html#method_findWorkbenches", "name": "Illuminate\\Foundation\\Console\\AutoloadCommand::findWorkbenches", "doc": "&quot;Get all of the workbench directories.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\AutoloadCommand", "fromLink": "Illuminate/Foundation/Console/AutoloadCommand.html", "link": "Illuminate/Foundation/Console/AutoloadCommand.html#method_getWorkbenchComposers", "name": "Illuminate\\Foundation\\Console\\AutoloadCommand::getWorkbenchComposers", "doc": "&quot;Get all of the workbench composer files.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/ChangesCommand.html", "name": "Illuminate\\Foundation\\Console\\ChangesCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ChangesCommand", "fromLink": "Illuminate/Foundation/Console/ChangesCommand.html", "link": "Illuminate/Foundation/Console/ChangesCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\ChangesCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ChangesCommand", "fromLink": "Illuminate/Foundation/Console/ChangesCommand.html", "link": "Illuminate/Foundation/Console/ChangesCommand.html#method_writeHeader", "name": "Illuminate\\Foundation\\Console\\ChangesCommand::writeHeader", "doc": "&quot;Write the heading for the change log.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ChangesCommand", "fromLink": "Illuminate/Foundation/Console/ChangesCommand.html", "link": "Illuminate/Foundation/Console/ChangesCommand.html#method_formatMessage", "name": "Illuminate\\Foundation\\Console\\ChangesCommand::formatMessage", "doc": "&quot;Format the given change message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ChangesCommand", "fromLink": "Illuminate/Foundation/Console/ChangesCommand.html", "link": "Illuminate/Foundation/Console/ChangesCommand.html#method_getChangeVersion", "name": "Illuminate\\Foundation\\Console\\ChangesCommand::getChangeVersion", "doc": "&quot;Get the change list for the specified version.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ChangesCommand", "fromLink": "Illuminate/Foundation/Console/ChangesCommand.html", "link": "Illuminate/Foundation/Console/ChangesCommand.html#method_getChangesArray", "name": "Illuminate\\Foundation\\Console\\ChangesCommand::getChangesArray", "doc": "&quot;Get the changes array from disk.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ChangesCommand", "fromLink": "Illuminate/Foundation/Console/ChangesCommand.html", "link": "Illuminate/Foundation/Console/ChangesCommand.html#method_getArguments", "name": "Illuminate\\Foundation\\Console\\ChangesCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/ClearCompiledCommand.html", "name": "Illuminate\\Foundation\\Console\\ClearCompiledCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ClearCompiledCommand", "fromLink": "Illuminate/Foundation/Console/ClearCompiledCommand.html", "link": "Illuminate/Foundation/Console/ClearCompiledCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\ClearCompiledCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "fromLink": "Illuminate/Foundation/Console/CommandMakeCommand.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html#method___construct", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand::__construct", "doc": "&quot;Create a new command creator command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "fromLink": "Illuminate/Foundation/Console/CommandMakeCommand.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "fromLink": "Illuminate/Foundation/Console/CommandMakeCommand.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html#method_writeCommand", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand::writeCommand", "doc": "&quot;Write the finished command file to disk.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "fromLink": "Illuminate/Foundation/Console/CommandMakeCommand.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html#method_formatStub", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand::formatStub", "doc": "&quot;Format the command class stub.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "fromLink": "Illuminate/Foundation/Console/CommandMakeCommand.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html#method_addNamespace", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand::addNamespace", "doc": "&quot;Add the proper namespace to the command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "fromLink": "Illuminate/Foundation/Console/CommandMakeCommand.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html#method_getPath", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand::getPath", "doc": "&quot;Get the path where the command should be stored.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "fromLink": "Illuminate/Foundation/Console/CommandMakeCommand.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html#method_getArguments", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\CommandMakeCommand", "fromLink": "Illuminate/Foundation/Console/CommandMakeCommand.html", "link": "Illuminate/Foundation/Console/CommandMakeCommand.html#method_getOptions", "name": "Illuminate\\Foundation\\Console\\CommandMakeCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/ConfigPublishCommand.html", "name": "Illuminate\\Foundation\\Console\\ConfigPublishCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ConfigPublishCommand", "fromLink": "Illuminate/Foundation/Console/ConfigPublishCommand.html", "link": "Illuminate/Foundation/Console/ConfigPublishCommand.html#method___construct", "name": "Illuminate\\Foundation\\Console\\ConfigPublishCommand::__construct", "doc": "&quot;Create a new configuration publish command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ConfigPublishCommand", "fromLink": "Illuminate/Foundation/Console/ConfigPublishCommand.html", "link": "Illuminate/Foundation/Console/ConfigPublishCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\ConfigPublishCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ConfigPublishCommand", "fromLink": "Illuminate/Foundation/Console/ConfigPublishCommand.html", "link": "Illuminate/Foundation/Console/ConfigPublishCommand.html#method_getPath", "name": "Illuminate\\Foundation\\Console\\ConfigPublishCommand::getPath", "doc": "&quot;Get the specified path to the files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ConfigPublishCommand", "fromLink": "Illuminate/Foundation/Console/ConfigPublishCommand.html", "link": "Illuminate/Foundation/Console/ConfigPublishCommand.html#method_getArguments", "name": "Illuminate\\Foundation\\Console\\ConfigPublishCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ConfigPublishCommand", "fromLink": "Illuminate/Foundation/Console/ConfigPublishCommand.html", "link": "Illuminate/Foundation/Console/ConfigPublishCommand.html#method_getOptions", "name": "Illuminate\\Foundation\\Console\\ConfigPublishCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/DownCommand.html", "name": "Illuminate\\Foundation\\Console\\DownCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\DownCommand", "fromLink": "Illuminate/Foundation/Console/DownCommand.html", "link": "Illuminate/Foundation/Console/DownCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\DownCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/EnvironmentCommand.html", "name": "Illuminate\\Foundation\\Console\\EnvironmentCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\EnvironmentCommand", "fromLink": "Illuminate/Foundation/Console/EnvironmentCommand.html", "link": "Illuminate/Foundation/Console/EnvironmentCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\EnvironmentCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/KeyGenerateCommand.html", "name": "Illuminate\\Foundation\\Console\\KeyGenerateCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\KeyGenerateCommand", "fromLink": "Illuminate/Foundation/Console/KeyGenerateCommand.html", "link": "Illuminate/Foundation/Console/KeyGenerateCommand.html#method___construct", "name": "Illuminate\\Foundation\\Console\\KeyGenerateCommand::__construct", "doc": "&quot;Create a new key generator command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\KeyGenerateCommand", "fromLink": "Illuminate/Foundation/Console/KeyGenerateCommand.html", "link": "Illuminate/Foundation/Console/KeyGenerateCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\KeyGenerateCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\KeyGenerateCommand", "fromLink": "Illuminate/Foundation/Console/KeyGenerateCommand.html", "link": "Illuminate/Foundation/Console/KeyGenerateCommand.html#method_getKeyFile", "name": "Illuminate\\Foundation\\Console\\KeyGenerateCommand::getKeyFile", "doc": "&quot;Get the key file and contents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\KeyGenerateCommand", "fromLink": "Illuminate/Foundation/Console/KeyGenerateCommand.html", "link": "Illuminate/Foundation/Console/KeyGenerateCommand.html#method_getRandomKey", "name": "Illuminate\\Foundation\\Console\\KeyGenerateCommand::getRandomKey", "doc": "&quot;Generate a random key for the application.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/MigratePublishCommand.html", "name": "Illuminate\\Foundation\\Console\\MigratePublishCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\MigratePublishCommand", "fromLink": "Illuminate/Foundation/Console/MigratePublishCommand.html", "link": "Illuminate/Foundation/Console/MigratePublishCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\MigratePublishCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\MigratePublishCommand", "fromLink": "Illuminate/Foundation/Console/MigratePublishCommand.html", "link": "Illuminate/Foundation/Console/MigratePublishCommand.html#method_getSourcePath", "name": "Illuminate\\Foundation\\Console\\MigratePublishCommand::getSourcePath", "doc": "&quot;Get the path to the source files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\MigratePublishCommand", "fromLink": "Illuminate/Foundation/Console/MigratePublishCommand.html", "link": "Illuminate/Foundation/Console/MigratePublishCommand.html#method_getArguments", "name": "Illuminate\\Foundation\\Console\\MigratePublishCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/OptimizeCommand.html", "name": "Illuminate\\Foundation\\Console\\OptimizeCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\OptimizeCommand", "fromLink": "Illuminate/Foundation/Console/OptimizeCommand.html", "link": "Illuminate/Foundation/Console/OptimizeCommand.html#method___construct", "name": "Illuminate\\Foundation\\Console\\OptimizeCommand::__construct", "doc": "&quot;Create a new optimize command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\OptimizeCommand", "fromLink": "Illuminate/Foundation/Console/OptimizeCommand.html", "link": "Illuminate/Foundation/Console/OptimizeCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\OptimizeCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\OptimizeCommand", "fromLink": "Illuminate/Foundation/Console/OptimizeCommand.html", "link": "Illuminate/Foundation/Console/OptimizeCommand.html#method_compileClasses", "name": "Illuminate\\Foundation\\Console\\OptimizeCommand::compileClasses", "doc": "&quot;Generate the compiled class file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\OptimizeCommand", "fromLink": "Illuminate/Foundation/Console/OptimizeCommand.html", "link": "Illuminate/Foundation/Console/OptimizeCommand.html#method_getClassFiles", "name": "Illuminate\\Foundation\\Console\\OptimizeCommand::getClassFiles", "doc": "&quot;Get the classes that should be combined and compiled.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\OptimizeCommand", "fromLink": "Illuminate/Foundation/Console/OptimizeCommand.html", "link": "Illuminate/Foundation/Console/OptimizeCommand.html#method_registerClassPreloaderCommand", "name": "Illuminate\\Foundation\\Console\\OptimizeCommand::registerClassPreloaderCommand", "doc": "&quot;Register the pre-compiler command instance with Artisan.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\OptimizeCommand", "fromLink": "Illuminate/Foundation/Console/OptimizeCommand.html", "link": "Illuminate/Foundation/Console/OptimizeCommand.html#method_compileViews", "name": "Illuminate\\Foundation\\Console\\OptimizeCommand::compileViews", "doc": "&quot;Compile all view files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\OptimizeCommand", "fromLink": "Illuminate/Foundation/Console/OptimizeCommand.html", "link": "Illuminate/Foundation/Console/OptimizeCommand.html#method_getOptions", "name": "Illuminate\\Foundation\\Console\\OptimizeCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html", "name": "Illuminate\\Foundation\\Console\\RoutesCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method___construct", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::__construct", "doc": "&quot;Create a new route command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_getRoutes", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::getRoutes", "doc": "&quot;Compile the routes into a displayable format.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_getRouteInformation", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::getRouteInformation", "doc": "&quot;Get the route information for a given route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_displayRoutes", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::displayRoutes", "doc": "&quot;Display the route information on the console.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_getBeforeFilters", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::getBeforeFilters", "doc": "&quot;Get before filters&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_getPatternFilters", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::getPatternFilters", "doc": "&quot;Get all of the pattern filters matching the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_getMethodPatterns", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::getMethodPatterns", "doc": "&quot;Get the pattern filters for a given URI and method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_getAfterFilters", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::getAfterFilters", "doc": "&quot;Get after filters&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_filterRoute", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::filterRoute", "doc": "&quot;Filter the route by URI and \/ or name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\RoutesCommand", "fromLink": "Illuminate/Foundation/Console/RoutesCommand.html", "link": "Illuminate/Foundation/Console/RoutesCommand.html#method_getOptions", "name": "Illuminate\\Foundation\\Console\\RoutesCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/ServeCommand.html", "name": "Illuminate\\Foundation\\Console\\ServeCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ServeCommand", "fromLink": "Illuminate/Foundation/Console/ServeCommand.html", "link": "Illuminate/Foundation/Console/ServeCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\ServeCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ServeCommand", "fromLink": "Illuminate/Foundation/Console/ServeCommand.html", "link": "Illuminate/Foundation/Console/ServeCommand.html#method_checkPhpVersion", "name": "Illuminate\\Foundation\\Console\\ServeCommand::checkPhpVersion", "doc": "&quot;Check the current PHP version is &gt;= 5.4.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ServeCommand", "fromLink": "Illuminate/Foundation/Console/ServeCommand.html", "link": "Illuminate/Foundation/Console/ServeCommand.html#method_getOptions", "name": "Illuminate\\Foundation\\Console\\ServeCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/TailCommand.html", "name": "Illuminate\\Foundation\\Console\\TailCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\TailCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_tailLogFile", "name": "Illuminate\\Foundation\\Console\\TailCommand::tailLogFile", "doc": "&quot;Tail the given log file for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_tailLocalLogs", "name": "Illuminate\\Foundation\\Console\\TailCommand::tailLocalLogs", "doc": "&quot;Tail a local log file for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_tailRemoteLogs", "name": "Illuminate\\Foundation\\Console\\TailCommand::tailRemoteLogs", "doc": "&quot;Tail a remote log file at the given path and connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_getRemote", "name": "Illuminate\\Foundation\\Console\\TailCommand::getRemote", "doc": "&quot;Get a connection to the remote server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_getPath", "name": "Illuminate\\Foundation\\Console\\TailCommand::getPath", "doc": "&quot;Get the path to the Laravel log file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_getRoot", "name": "Illuminate\\Foundation\\Console\\TailCommand::getRoot", "doc": "&quot;Get the path to the Laravel install root.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_getArguments", "name": "Illuminate\\Foundation\\Console\\TailCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TailCommand", "fromLink": "Illuminate/Foundation/Console/TailCommand.html", "link": "Illuminate/Foundation/Console/TailCommand.html#method_getOptions", "name": "Illuminate\\Foundation\\Console\\TailCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/TinkerCommand.html", "name": "Illuminate\\Foundation\\Console\\TinkerCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TinkerCommand", "fromLink": "Illuminate/Foundation/Console/TinkerCommand.html", "link": "Illuminate/Foundation/Console/TinkerCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\TinkerCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TinkerCommand", "fromLink": "Illuminate/Foundation/Console/TinkerCommand.html", "link": "Illuminate/Foundation/Console/TinkerCommand.html#method_runBorisShell", "name": "Illuminate\\Foundation\\Console\\TinkerCommand::runBorisShell", "doc": "&quot;Run the Boris REPL with the current context.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TinkerCommand", "fromLink": "Illuminate/Foundation/Console/TinkerCommand.html", "link": "Illuminate/Foundation/Console/TinkerCommand.html#method_setupBorisErrorHandling", "name": "Illuminate\\Foundation\\Console\\TinkerCommand::setupBorisErrorHandling", "doc": "&quot;Setup the Boris exception handling.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TinkerCommand", "fromLink": "Illuminate/Foundation/Console/TinkerCommand.html", "link": "Illuminate/Foundation/Console/TinkerCommand.html#method_runPlainShell", "name": "Illuminate\\Foundation\\Console\\TinkerCommand::runPlainShell", "doc": "&quot;Run the plain Artisan tinker shell.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TinkerCommand", "fromLink": "Illuminate/Foundation/Console/TinkerCommand.html", "link": "Illuminate/Foundation/Console/TinkerCommand.html#method_prompt", "name": "Illuminate\\Foundation\\Console\\TinkerCommand::prompt", "doc": "&quot;Prompt the developer for a command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\TinkerCommand", "fromLink": "Illuminate/Foundation/Console/TinkerCommand.html", "link": "Illuminate/Foundation/Console/TinkerCommand.html#method_supportsBoris", "name": "Illuminate\\Foundation\\Console\\TinkerCommand::supportsBoris", "doc": "&quot;Determine if the current environment supports Boris.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/UpCommand.html", "name": "Illuminate\\Foundation\\Console\\UpCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\UpCommand", "fromLink": "Illuminate/Foundation/Console/UpCommand.html", "link": "Illuminate/Foundation/Console/UpCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\UpCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Console", "fromLink": "Illuminate/Foundation/Console.html", "link": "Illuminate/Foundation/Console/ViewPublishCommand.html", "name": "Illuminate\\Foundation\\Console\\ViewPublishCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ViewPublishCommand", "fromLink": "Illuminate/Foundation/Console/ViewPublishCommand.html", "link": "Illuminate/Foundation/Console/ViewPublishCommand.html#method___construct", "name": "Illuminate\\Foundation\\Console\\ViewPublishCommand::__construct", "doc": "&quot;Create a new view publish command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ViewPublishCommand", "fromLink": "Illuminate/Foundation/Console/ViewPublishCommand.html", "link": "Illuminate/Foundation/Console/ViewPublishCommand.html#method_fire", "name": "Illuminate\\Foundation\\Console\\ViewPublishCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ViewPublishCommand", "fromLink": "Illuminate/Foundation/Console/ViewPublishCommand.html", "link": "Illuminate/Foundation/Console/ViewPublishCommand.html#method_getPath", "name": "Illuminate\\Foundation\\Console\\ViewPublishCommand::getPath", "doc": "&quot;Get the specified path to the files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ViewPublishCommand", "fromLink": "Illuminate/Foundation/Console/ViewPublishCommand.html", "link": "Illuminate/Foundation/Console/ViewPublishCommand.html#method_getArguments", "name": "Illuminate\\Foundation\\Console\\ViewPublishCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Console\\ViewPublishCommand", "fromLink": "Illuminate/Foundation/Console/ViewPublishCommand.html", "link": "Illuminate/Foundation/Console/ViewPublishCommand.html#method_getOptions", "name": "Illuminate\\Foundation\\Console\\ViewPublishCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/EnvironmentDetector.html", "name": "Illuminate\\Foundation\\EnvironmentDetector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\EnvironmentDetector", "fromLink": "Illuminate/Foundation/EnvironmentDetector.html", "link": "Illuminate/Foundation/EnvironmentDetector.html#method_detect", "name": "Illuminate\\Foundation\\EnvironmentDetector::detect", "doc": "&quot;Detect the application&#039;s current environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\EnvironmentDetector", "fromLink": "Illuminate/Foundation/EnvironmentDetector.html", "link": "Illuminate/Foundation/EnvironmentDetector.html#method_detectWebEnvironment", "name": "Illuminate\\Foundation\\EnvironmentDetector::detectWebEnvironment", "doc": "&quot;Set the application environment for a web request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\EnvironmentDetector", "fromLink": "Illuminate/Foundation/EnvironmentDetector.html", "link": "Illuminate/Foundation/EnvironmentDetector.html#method_detectConsoleEnvironment", "name": "Illuminate\\Foundation\\EnvironmentDetector::detectConsoleEnvironment", "doc": "&quot;Set the application environment from command-line arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\EnvironmentDetector", "fromLink": "Illuminate/Foundation/EnvironmentDetector.html", "link": "Illuminate/Foundation/EnvironmentDetector.html#method_getEnvironmentArgument", "name": "Illuminate\\Foundation\\EnvironmentDetector::getEnvironmentArgument", "doc": "&quot;Get the environment argument from the console.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\EnvironmentDetector", "fromLink": "Illuminate/Foundation/EnvironmentDetector.html", "link": "Illuminate/Foundation/EnvironmentDetector.html#method_isMachine", "name": "Illuminate\\Foundation\\EnvironmentDetector::isMachine", "doc": "&quot;Determine if the name matches the machine name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/MigrationPublisher.html", "name": "Illuminate\\Foundation\\MigrationPublisher", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\MigrationPublisher", "fromLink": "Illuminate/Foundation/MigrationPublisher.html", "link": "Illuminate/Foundation/MigrationPublisher.html#method___construct", "name": "Illuminate\\Foundation\\MigrationPublisher::__construct", "doc": "&quot;Create a new migration publisher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\MigrationPublisher", "fromLink": "Illuminate/Foundation/MigrationPublisher.html", "link": "Illuminate/Foundation/MigrationPublisher.html#method_publish", "name": "Illuminate\\Foundation\\MigrationPublisher::publish", "doc": "&quot;Publish the given package&#039;s migrations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\MigrationPublisher", "fromLink": "Illuminate/Foundation/MigrationPublisher.html", "link": "Illuminate/Foundation/MigrationPublisher.html#method_getFreshMigrations", "name": "Illuminate\\Foundation\\MigrationPublisher::getFreshMigrations", "doc": "&quot;Get the fresh migrations for the source.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\MigrationPublisher", "fromLink": "Illuminate/Foundation/MigrationPublisher.html", "link": "Illuminate/Foundation/MigrationPublisher.html#method_migrationExists", "name": "Illuminate\\Foundation\\MigrationPublisher::migrationExists", "doc": "&quot;Determine if the migration is already published.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\MigrationPublisher", "fromLink": "Illuminate/Foundation/MigrationPublisher.html", "link": "Illuminate/Foundation/MigrationPublisher.html#method_getExistingMigrationNames", "name": "Illuminate\\Foundation\\MigrationPublisher::getExistingMigrationNames", "doc": "&quot;Get the existing migration names from the destination.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\MigrationPublisher", "fromLink": "Illuminate/Foundation/MigrationPublisher.html", "link": "Illuminate/Foundation/MigrationPublisher.html#method_getPackageMigrations", "name": "Illuminate\\Foundation\\MigrationPublisher::getPackageMigrations", "doc": "&quot;Get the file list from the source directory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\MigrationPublisher", "fromLink": "Illuminate/Foundation/MigrationPublisher.html", "link": "Illuminate/Foundation/MigrationPublisher.html#method_getNewMigrationName", "name": "Illuminate\\Foundation\\MigrationPublisher::getNewMigrationName", "doc": "&quot;Get the new migration name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/ProviderRepository.html", "name": "Illuminate\\Foundation\\ProviderRepository", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method___construct", "name": "Illuminate\\Foundation\\ProviderRepository::__construct", "doc": "&quot;Create a new service repository instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_load", "name": "Illuminate\\Foundation\\ProviderRepository::load", "doc": "&quot;Register the application service providers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_registerLoadEvents", "name": "Illuminate\\Foundation\\ProviderRepository::registerLoadEvents", "doc": "&quot;Register the load events for the given provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_compileManifest", "name": "Illuminate\\Foundation\\ProviderRepository::compileManifest", "doc": "&quot;Compile the application manifest file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_createProvider", "name": "Illuminate\\Foundation\\ProviderRepository::createProvider", "doc": "&quot;Create a new provider instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_shouldRecompile", "name": "Illuminate\\Foundation\\ProviderRepository::shouldRecompile", "doc": "&quot;Determine if the manifest should be compiled.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_loadManifest", "name": "Illuminate\\Foundation\\ProviderRepository::loadManifest", "doc": "&quot;Load the service provider manifest JSON file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_writeManifest", "name": "Illuminate\\Foundation\\ProviderRepository::writeManifest", "doc": "&quot;Write the service manifest file to disk.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_freshManifest", "name": "Illuminate\\Foundation\\ProviderRepository::freshManifest", "doc": "&quot;Create a fresh manifest array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ProviderRepository", "fromLink": "Illuminate/Foundation/ProviderRepository.html", "link": "Illuminate/Foundation/ProviderRepository.html#method_getFilesystem", "name": "Illuminate\\Foundation\\ProviderRepository::getFilesystem", "doc": "&quot;Get the filesystem instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/ArtisanServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\ArtisanServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\ArtisanServiceProvider", "fromLink": "Illuminate/Foundation/Providers/ArtisanServiceProvider.html", "link": "Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\ArtisanServiceProvider", "fromLink": "Illuminate/Foundation/Providers/ArtisanServiceProvider.html", "link": "Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/CommandCreatorServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\CommandCreatorServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\CommandCreatorServiceProvider", "fromLink": "Illuminate/Foundation/Providers/CommandCreatorServiceProvider.html", "link": "Illuminate/Foundation/Providers/CommandCreatorServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\CommandCreatorServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\CommandCreatorServiceProvider", "fromLink": "Illuminate/Foundation/Providers/CommandCreatorServiceProvider.html", "link": "Illuminate/Foundation/Providers/CommandCreatorServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\CommandCreatorServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/ComposerServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\ComposerServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\ComposerServiceProvider", "fromLink": "Illuminate/Foundation/Providers/ComposerServiceProvider.html", "link": "Illuminate/Foundation/Providers/ComposerServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\ComposerServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\ComposerServiceProvider", "fromLink": "Illuminate/Foundation/Providers/ComposerServiceProvider.html", "link": "Illuminate/Foundation/Providers/ComposerServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\ComposerServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/ConsoleSupportServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider", "fromLink": "Illuminate/Foundation/Providers/ConsoleSupportServiceProvider.html", "link": "Illuminate/Foundation/Providers/ConsoleSupportServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider", "fromLink": "Illuminate/Foundation/Providers/ConsoleSupportServiceProvider.html", "link": "Illuminate/Foundation/Providers/ConsoleSupportServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/KeyGeneratorServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\KeyGeneratorServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\KeyGeneratorServiceProvider", "fromLink": "Illuminate/Foundation/Providers/KeyGeneratorServiceProvider.html", "link": "Illuminate/Foundation/Providers/KeyGeneratorServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\KeyGeneratorServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\KeyGeneratorServiceProvider", "fromLink": "Illuminate/Foundation/Providers/KeyGeneratorServiceProvider.html", "link": "Illuminate/Foundation/Providers/KeyGeneratorServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\KeyGeneratorServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/MaintenanceServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\MaintenanceServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\MaintenanceServiceProvider", "fromLink": "Illuminate/Foundation/Providers/MaintenanceServiceProvider.html", "link": "Illuminate/Foundation/Providers/MaintenanceServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\MaintenanceServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\MaintenanceServiceProvider", "fromLink": "Illuminate/Foundation/Providers/MaintenanceServiceProvider.html", "link": "Illuminate/Foundation/Providers/MaintenanceServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\MaintenanceServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider", "fromLink": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html", "link": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider", "fromLink": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html", "link": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html#method_registerOptimizeCommand", "name": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider::registerOptimizeCommand", "doc": "&quot;Register the optimize command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider", "fromLink": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html", "link": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html#method_registerClearCompiledCommand", "name": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider::registerClearCompiledCommand", "doc": "&quot;Register the compiled file remover command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider", "fromLink": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html", "link": "Illuminate/Foundation/Providers/OptimizeServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\OptimizeServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_registerAssetPublisher", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::registerAssetPublisher", "doc": "&quot;Register the asset publisher service and command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_registerAssetPublishCommand", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::registerAssetPublishCommand", "doc": "&quot;Register the asset publish console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_registerConfigPublisher", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::registerConfigPublisher", "doc": "&quot;Register the configuration publisher class and command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_registerConfigPublishCommand", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::registerConfigPublishCommand", "doc": "&quot;Register the configuration publish console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_registerViewPublisher", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::registerViewPublisher", "doc": "&quot;Register the view publisher class and command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_registerViewPublishCommand", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::registerViewPublishCommand", "doc": "&quot;Register the view publish console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_registerMigrationPublisher", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::registerMigrationPublisher", "doc": "&quot;Register the migration publisher class and command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_registerMigratePublishCommand", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::registerMigratePublishCommand", "doc": "&quot;Register the migration publisher command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider", "fromLink": "Illuminate/Foundation/Providers/PublisherServiceProvider.html", "link": "Illuminate/Foundation/Providers/PublisherServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\PublisherServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/RouteListServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\RouteListServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\RouteListServiceProvider", "fromLink": "Illuminate/Foundation/Providers/RouteListServiceProvider.html", "link": "Illuminate/Foundation/Providers/RouteListServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\RouteListServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\RouteListServiceProvider", "fromLink": "Illuminate/Foundation/Providers/RouteListServiceProvider.html", "link": "Illuminate/Foundation/Providers/RouteListServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\RouteListServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/ServerServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\ServerServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\ServerServiceProvider", "fromLink": "Illuminate/Foundation/Providers/ServerServiceProvider.html", "link": "Illuminate/Foundation/Providers/ServerServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\ServerServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\ServerServiceProvider", "fromLink": "Illuminate/Foundation/Providers/ServerServiceProvider.html", "link": "Illuminate/Foundation/Providers/ServerServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\ServerServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Providers", "fromLink": "Illuminate/Foundation/Providers.html", "link": "Illuminate/Foundation/Providers/TinkerServiceProvider.html", "name": "Illuminate\\Foundation\\Providers\\TinkerServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\TinkerServiceProvider", "fromLink": "Illuminate/Foundation/Providers/TinkerServiceProvider.html", "link": "Illuminate/Foundation/Providers/TinkerServiceProvider.html#method_register", "name": "Illuminate\\Foundation\\Providers\\TinkerServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Providers\\TinkerServiceProvider", "fromLink": "Illuminate/Foundation/Providers/TinkerServiceProvider.html", "link": "Illuminate/Foundation/Providers/TinkerServiceProvider.html#method_provides", "name": "Illuminate\\Foundation\\Providers\\TinkerServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Foundation\\Testing", "fromLink": "Illuminate/Foundation/Testing.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_refreshApplication", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::refreshApplication", "doc": "&quot;Refresh the application instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_call", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::call", "doc": "&quot;Call the given URI and return the Response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_callSecure", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::callSecure", "doc": "&quot;Call the given HTTPS URI and return the Response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_action", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::action", "doc": "&quot;Call a controller action and return the Response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_route", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::route", "doc": "&quot;Call a named route and return the Response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_session", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::session", "doc": "&quot;Set the session to the given array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_flushSession", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::flushSession", "doc": "&quot;Flush all of the current session data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_startSession", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::startSession", "doc": "&quot;Start the session for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_be", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::be", "doc": "&quot;Set the currently logged in user for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_seed", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::seed", "doc": "&quot;Seed a given database connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\ApplicationTrait", "fromLink": "Illuminate/Foundation/Testing/ApplicationTrait.html", "link": "Illuminate/Foundation/Testing/ApplicationTrait.html#method_createClient", "name": "Illuminate\\Foundation\\Testing\\ApplicationTrait::createClient", "doc": "&quot;Create a new HttpKernel client instance.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Foundation\\Testing", "fromLink": "Illuminate/Foundation/Testing.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertResponseOk", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertResponseOk", "doc": "&quot;Assert that the client response has an OK status code.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertResponseStatus", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertResponseStatus", "doc": "&quot;Assert that the client response has a given code.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertViewHas", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertViewHas", "doc": "&quot;Assert that the response view has a given piece of bound data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertViewHasAll", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertViewHasAll", "doc": "&quot;Assert that the view has a given list of bound data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertViewMissing", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertViewMissing", "doc": "&quot;Assert that the response view is missing a piece of bound data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertRedirectedTo", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertRedirectedTo", "doc": "&quot;Assert whether the client was redirected to a given URI.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertRedirectedToRoute", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertRedirectedToRoute", "doc": "&quot;Assert whether the client was redirected to a given route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertRedirectedToAction", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertRedirectedToAction", "doc": "&quot;Assert whether the client was redirected to a given action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertSessionHas", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertSessionHas", "doc": "&quot;Assert that the session has a given list of values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertSessionHasAll", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertSessionHasAll", "doc": "&quot;Assert that the session has a given list of values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertSessionHasErrors", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertSessionHasErrors", "doc": "&quot;Assert that the session has errors bound.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\AssertionsTrait", "fromLink": "Illuminate/Foundation/Testing/AssertionsTrait.html", "link": "Illuminate/Foundation/Testing/AssertionsTrait.html#method_assertHasOldInput", "name": "Illuminate\\Foundation\\Testing\\AssertionsTrait::assertHasOldInput", "doc": "&quot;Assert that the session has old input.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Testing", "fromLink": "Illuminate/Foundation/Testing.html", "link": "Illuminate/Foundation/Testing/Client.html", "name": "Illuminate\\Foundation\\Testing\\Client", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\Client", "fromLink": "Illuminate/Foundation/Testing/Client.html", "link": "Illuminate/Foundation/Testing/Client.html#method_filterRequest", "name": "Illuminate\\Foundation\\Testing\\Client::filterRequest", "doc": "&quot;Convert a BrowserKit request into a Illuminate request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\Client", "fromLink": "Illuminate/Foundation/Testing/Client.html", "link": "Illuminate/Foundation/Testing/Client.html#method_getRequestParameters", "name": "Illuminate\\Foundation\\Testing\\Client::getRequestParameters", "doc": "&quot;Get the request parameters from a BrowserKit request.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation\\Testing", "fromLink": "Illuminate/Foundation/Testing.html", "link": "Illuminate/Foundation/Testing/TestCase.html", "name": "Illuminate\\Foundation\\Testing\\TestCase", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\TestCase", "fromLink": "Illuminate/Foundation/Testing/TestCase.html", "link": "Illuminate/Foundation/Testing/TestCase.html#method_setUp", "name": "Illuminate\\Foundation\\Testing\\TestCase::setUp", "doc": "&quot;Setup the test environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\Testing\\TestCase", "fromLink": "Illuminate/Foundation/Testing/TestCase.html", "link": "Illuminate/Foundation/Testing/TestCase.html#method_createApplication", "name": "Illuminate\\Foundation\\Testing\\TestCase::createApplication", "doc": "&quot;Creates the application.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Foundation", "fromLink": "Illuminate/Foundation.html", "link": "Illuminate/Foundation/ViewPublisher.html", "name": "Illuminate\\Foundation\\ViewPublisher", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Foundation\\ViewPublisher", "fromLink": "Illuminate/Foundation/ViewPublisher.html", "link": "Illuminate/Foundation/ViewPublisher.html#method___construct", "name": "Illuminate\\Foundation\\ViewPublisher::__construct", "doc": "&quot;Create a new view publisher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ViewPublisher", "fromLink": "Illuminate/Foundation/ViewPublisher.html", "link": "Illuminate/Foundation/ViewPublisher.html#method_publish", "name": "Illuminate\\Foundation\\ViewPublisher::publish", "doc": "&quot;Publish view files from a given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ViewPublisher", "fromLink": "Illuminate/Foundation/ViewPublisher.html", "link": "Illuminate/Foundation/ViewPublisher.html#method_publishPackage", "name": "Illuminate\\Foundation\\ViewPublisher::publishPackage", "doc": "&quot;Publish the view files for a package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ViewPublisher", "fromLink": "Illuminate/Foundation/ViewPublisher.html", "link": "Illuminate/Foundation/ViewPublisher.html#method_getSource", "name": "Illuminate\\Foundation\\ViewPublisher::getSource", "doc": "&quot;Get the source views directory to publish.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ViewPublisher", "fromLink": "Illuminate/Foundation/ViewPublisher.html", "link": "Illuminate/Foundation/ViewPublisher.html#method_makeDestination", "name": "Illuminate\\Foundation\\ViewPublisher::makeDestination", "doc": "&quot;Create the destination directory if it doesn&#039;t exist.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Foundation\\ViewPublisher", "fromLink": "Illuminate/Foundation/ViewPublisher.html", "link": "Illuminate/Foundation/ViewPublisher.html#method_setPackagePath", "name": "Illuminate\\Foundation\\ViewPublisher::setPackagePath", "doc": "&quot;Set the default package path.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Hashing", "fromLink": "Illuminate/Hashing.html", "link": "Illuminate/Hashing/BcryptHasher.html", "name": "Illuminate\\Hashing\\BcryptHasher", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Hashing\\BcryptHasher", "fromLink": "Illuminate/Hashing/BcryptHasher.html", "link": "Illuminate/Hashing/BcryptHasher.html#method_make", "name": "Illuminate\\Hashing\\BcryptHasher::make", "doc": "&quot;Hash the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Hashing\\BcryptHasher", "fromLink": "Illuminate/Hashing/BcryptHasher.html", "link": "Illuminate/Hashing/BcryptHasher.html#method_check", "name": "Illuminate\\Hashing\\BcryptHasher::check", "doc": "&quot;Check the given plain value against a hash.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Hashing\\BcryptHasher", "fromLink": "Illuminate/Hashing/BcryptHasher.html", "link": "Illuminate/Hashing/BcryptHasher.html#method_needsRehash", "name": "Illuminate\\Hashing\\BcryptHasher::needsRehash", "doc": "&quot;Check if the given hash has been hashed using the given options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Hashing\\BcryptHasher", "fromLink": "Illuminate/Hashing/BcryptHasher.html", "link": "Illuminate/Hashing/BcryptHasher.html#method_setRounds", "name": "Illuminate\\Hashing\\BcryptHasher::setRounds", "doc": "&quot;Set the default crypt cost factor.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Hashing", "fromLink": "Illuminate/Hashing.html", "link": "Illuminate/Hashing/HashServiceProvider.html", "name": "Illuminate\\Hashing\\HashServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Hashing\\HashServiceProvider", "fromLink": "Illuminate/Hashing/HashServiceProvider.html", "link": "Illuminate/Hashing/HashServiceProvider.html#method_register", "name": "Illuminate\\Hashing\\HashServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Hashing\\HashServiceProvider", "fromLink": "Illuminate/Hashing/HashServiceProvider.html", "link": "Illuminate/Hashing/HashServiceProvider.html#method_provides", "name": "Illuminate\\Hashing\\HashServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Hashing", "fromLink": "Illuminate/Hashing.html", "link": "Illuminate/Hashing/HasherInterface.html", "name": "Illuminate\\Hashing\\HasherInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Hashing\\HasherInterface", "fromLink": "Illuminate/Hashing/HasherInterface.html", "link": "Illuminate/Hashing/HasherInterface.html#method_make", "name": "Illuminate\\Hashing\\HasherInterface::make", "doc": "&quot;Hash the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Hashing\\HasherInterface", "fromLink": "Illuminate/Hashing/HasherInterface.html", "link": "Illuminate/Hashing/HasherInterface.html#method_check", "name": "Illuminate\\Hashing\\HasherInterface::check", "doc": "&quot;Check the given plain value against a hash.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Hashing\\HasherInterface", "fromLink": "Illuminate/Hashing/HasherInterface.html", "link": "Illuminate/Hashing/HasherInterface.html#method_needsRehash", "name": "Illuminate\\Hashing\\HasherInterface::needsRehash", "doc": "&quot;Check if the given hash has been hashed using the given options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Html", "fromLink": "Illuminate/Html.html", "link": "Illuminate/Html/FormBuilder.html", "name": "Illuminate\\Html\\FormBuilder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method___construct", "name": "Illuminate\\Html\\FormBuilder::__construct", "doc": "&quot;Create a new form builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_open", "name": "Illuminate\\Html\\FormBuilder::open", "doc": "&quot;Open up a new HTML form.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_model", "name": "Illuminate\\Html\\FormBuilder::model", "doc": "&quot;Create a new model based form builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_setModel", "name": "Illuminate\\Html\\FormBuilder::setModel", "doc": "&quot;Set the model instance on the form builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_close", "name": "Illuminate\\Html\\FormBuilder::close", "doc": "&quot;Close the current form.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_token", "name": "Illuminate\\Html\\FormBuilder::token", "doc": "&quot;Generate a hidden field with the current CSRF token.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_label", "name": "Illuminate\\Html\\FormBuilder::label", "doc": "&quot;Create a form label element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_formatLabel", "name": "Illuminate\\Html\\FormBuilder::formatLabel", "doc": "&quot;Format the label value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_input", "name": "Illuminate\\Html\\FormBuilder::input", "doc": "&quot;Create a form input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_text", "name": "Illuminate\\Html\\FormBuilder::text", "doc": "&quot;Create a text input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_password", "name": "Illuminate\\Html\\FormBuilder::password", "doc": "&quot;Create a password input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_hidden", "name": "Illuminate\\Html\\FormBuilder::hidden", "doc": "&quot;Create a hidden input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_email", "name": "Illuminate\\Html\\FormBuilder::email", "doc": "&quot;Create an e-mail input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_url", "name": "Illuminate\\Html\\FormBuilder::url", "doc": "&quot;Create a url input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_file", "name": "Illuminate\\Html\\FormBuilder::file", "doc": "&quot;Create a file input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_textarea", "name": "Illuminate\\Html\\FormBuilder::textarea", "doc": "&quot;Create a textarea input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_setTextAreaSize", "name": "Illuminate\\Html\\FormBuilder::setTextAreaSize", "doc": "&quot;Set the text area size on the attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_setQuickTextAreaSize", "name": "Illuminate\\Html\\FormBuilder::setQuickTextAreaSize", "doc": "&quot;Set the text area size using the quick \&quot;size\&quot; attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_number", "name": "Illuminate\\Html\\FormBuilder::number", "doc": "&quot;Create a number input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_select", "name": "Illuminate\\Html\\FormBuilder::select", "doc": "&quot;Create a select box field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_selectRange", "name": "Illuminate\\Html\\FormBuilder::selectRange", "doc": "&quot;Create a select range field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_selectYear", "name": "Illuminate\\Html\\FormBuilder::selectYear", "doc": "&quot;Create a select year field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_selectMonth", "name": "Illuminate\\Html\\FormBuilder::selectMonth", "doc": "&quot;Create a select month field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getSelectOption", "name": "Illuminate\\Html\\FormBuilder::getSelectOption", "doc": "&quot;Get the select option for the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_optionGroup", "name": "Illuminate\\Html\\FormBuilder::optionGroup", "doc": "&quot;Create an option group form element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_option", "name": "Illuminate\\Html\\FormBuilder::option", "doc": "&quot;Create a select element option.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getSelectedValue", "name": "Illuminate\\Html\\FormBuilder::getSelectedValue", "doc": "&quot;Determine if the value is selected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_checkbox", "name": "Illuminate\\Html\\FormBuilder::checkbox", "doc": "&quot;Create a checkbox input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_radio", "name": "Illuminate\\Html\\FormBuilder::radio", "doc": "&quot;Create a radio button input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_checkable", "name": "Illuminate\\Html\\FormBuilder::checkable", "doc": "&quot;Create a checkable input field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getCheckedState", "name": "Illuminate\\Html\\FormBuilder::getCheckedState", "doc": "&quot;Get the check state for a checkable input.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getCheckboxCheckedState", "name": "Illuminate\\Html\\FormBuilder::getCheckboxCheckedState", "doc": "&quot;Get the check state for a checkbox input.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getRadioCheckedState", "name": "Illuminate\\Html\\FormBuilder::getRadioCheckedState", "doc": "&quot;Get the check state for a radio input.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_missingOldAndModel", "name": "Illuminate\\Html\\FormBuilder::missingOldAndModel", "doc": "&quot;Determine if old input or model input exists for a key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_reset", "name": "Illuminate\\Html\\FormBuilder::reset", "doc": "&quot;Create a HTML reset input element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_image", "name": "Illuminate\\Html\\FormBuilder::image", "doc": "&quot;Create a HTML image input element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_submit", "name": "Illuminate\\Html\\FormBuilder::submit", "doc": "&quot;Create a submit button element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_button", "name": "Illuminate\\Html\\FormBuilder::button", "doc": "&quot;Create a button element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getMethod", "name": "Illuminate\\Html\\FormBuilder::getMethod", "doc": "&quot;Parse the form action method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getAction", "name": "Illuminate\\Html\\FormBuilder::getAction", "doc": "&quot;Get the form action from the options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getUrlAction", "name": "Illuminate\\Html\\FormBuilder::getUrlAction", "doc": "&quot;Get the action for a \&quot;url\&quot; option.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getRouteAction", "name": "Illuminate\\Html\\FormBuilder::getRouteAction", "doc": "&quot;Get the action for a \&quot;route\&quot; option.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getControllerAction", "name": "Illuminate\\Html\\FormBuilder::getControllerAction", "doc": "&quot;Get the action for an \&quot;action\&quot; option.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getAppendage", "name": "Illuminate\\Html\\FormBuilder::getAppendage", "doc": "&quot;Get the form appendage for the given method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getIdAttribute", "name": "Illuminate\\Html\\FormBuilder::getIdAttribute", "doc": "&quot;Get the ID attribute for a field name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getValueAttribute", "name": "Illuminate\\Html\\FormBuilder::getValueAttribute", "doc": "&quot;Get the value that should be assigned to the field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getModelValueAttribute", "name": "Illuminate\\Html\\FormBuilder::getModelValueAttribute", "doc": "&quot;Get the model value that should be assigned to the field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_old", "name": "Illuminate\\Html\\FormBuilder::old", "doc": "&quot;Get a value from the session&#039;s old input.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_oldInputIsEmpty", "name": "Illuminate\\Html\\FormBuilder::oldInputIsEmpty", "doc": "&quot;Determine if the old input is empty.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_transformKey", "name": "Illuminate\\Html\\FormBuilder::transformKey", "doc": "&quot;Transform key from array to dot syntax.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_getSessionStore", "name": "Illuminate\\Html\\FormBuilder::getSessionStore", "doc": "&quot;Get the session store implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\FormBuilder", "fromLink": "Illuminate/Html/FormBuilder.html", "link": "Illuminate/Html/FormBuilder.html#method_setSessionStore", "name": "Illuminate\\Html\\FormBuilder::setSessionStore", "doc": "&quot;Set the session store implementation.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Html", "fromLink": "Illuminate/Html.html", "link": "Illuminate/Html/HtmlBuilder.html", "name": "Illuminate\\Html\\HtmlBuilder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method___construct", "name": "Illuminate\\Html\\HtmlBuilder::__construct", "doc": "&quot;Create a new HTML builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_entities", "name": "Illuminate\\Html\\HtmlBuilder::entities", "doc": "&quot;Convert an HTML string to entities.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_decode", "name": "Illuminate\\Html\\HtmlBuilder::decode", "doc": "&quot;Convert entities to HTML characters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_script", "name": "Illuminate\\Html\\HtmlBuilder::script", "doc": "&quot;Generate a link to a JavaScript file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_style", "name": "Illuminate\\Html\\HtmlBuilder::style", "doc": "&quot;Generate a link to a CSS file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_image", "name": "Illuminate\\Html\\HtmlBuilder::image", "doc": "&quot;Generate an HTML image element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_link", "name": "Illuminate\\Html\\HtmlBuilder::link", "doc": "&quot;Generate a HTML link.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_secureLink", "name": "Illuminate\\Html\\HtmlBuilder::secureLink", "doc": "&quot;Generate a HTTPS HTML link.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_linkAsset", "name": "Illuminate\\Html\\HtmlBuilder::linkAsset", "doc": "&quot;Generate a HTML link to an asset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_linkSecureAsset", "name": "Illuminate\\Html\\HtmlBuilder::linkSecureAsset", "doc": "&quot;Generate a HTTPS HTML link to an asset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_linkRoute", "name": "Illuminate\\Html\\HtmlBuilder::linkRoute", "doc": "&quot;Generate a HTML link to a named route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_linkAction", "name": "Illuminate\\Html\\HtmlBuilder::linkAction", "doc": "&quot;Generate a HTML link to a controller action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_mailto", "name": "Illuminate\\Html\\HtmlBuilder::mailto", "doc": "&quot;Generate a HTML link to an email address.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_email", "name": "Illuminate\\Html\\HtmlBuilder::email", "doc": "&quot;Obfuscate an e-mail address to prevent spam-bots from sniffing it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_ol", "name": "Illuminate\\Html\\HtmlBuilder::ol", "doc": "&quot;Generate an ordered list of items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_ul", "name": "Illuminate\\Html\\HtmlBuilder::ul", "doc": "&quot;Generate an un-ordered list of items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_listing", "name": "Illuminate\\Html\\HtmlBuilder::listing", "doc": "&quot;Create a listing HTML element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_listingElement", "name": "Illuminate\\Html\\HtmlBuilder::listingElement", "doc": "&quot;Create the HTML for a listing element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_nestedListing", "name": "Illuminate\\Html\\HtmlBuilder::nestedListing", "doc": "&quot;Create the HTML for a nested listing attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_attributes", "name": "Illuminate\\Html\\HtmlBuilder::attributes", "doc": "&quot;Build an HTML attribute string from an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_attributeElement", "name": "Illuminate\\Html\\HtmlBuilder::attributeElement", "doc": "&quot;Build a single attribute element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlBuilder", "fromLink": "Illuminate/Html/HtmlBuilder.html", "link": "Illuminate/Html/HtmlBuilder.html#method_obfuscate", "name": "Illuminate\\Html\\HtmlBuilder::obfuscate", "doc": "&quot;Obfuscate a string to prevent spam-bots from sniffing it.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Html", "fromLink": "Illuminate/Html.html", "link": "Illuminate/Html/HtmlServiceProvider.html", "name": "Illuminate\\Html\\HtmlServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Html\\HtmlServiceProvider", "fromLink": "Illuminate/Html/HtmlServiceProvider.html", "link": "Illuminate/Html/HtmlServiceProvider.html#method_register", "name": "Illuminate\\Html\\HtmlServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlServiceProvider", "fromLink": "Illuminate/Html/HtmlServiceProvider.html", "link": "Illuminate/Html/HtmlServiceProvider.html#method_registerHtmlBuilder", "name": "Illuminate\\Html\\HtmlServiceProvider::registerHtmlBuilder", "doc": "&quot;Register the HTML builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlServiceProvider", "fromLink": "Illuminate/Html/HtmlServiceProvider.html", "link": "Illuminate/Html/HtmlServiceProvider.html#method_registerFormBuilder", "name": "Illuminate\\Html\\HtmlServiceProvider::registerFormBuilder", "doc": "&quot;Register the form builder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Html\\HtmlServiceProvider", "fromLink": "Illuminate/Html/HtmlServiceProvider.html", "link": "Illuminate/Html/HtmlServiceProvider.html#method_provides", "name": "Illuminate\\Html\\HtmlServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Http", "fromLink": "Illuminate/Http.html", "link": "Illuminate/Http/FrameGuard.html", "name": "Illuminate\\Http\\FrameGuard", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Http\\FrameGuard", "fromLink": "Illuminate/Http/FrameGuard.html", "link": "Illuminate/Http/FrameGuard.html#method___construct", "name": "Illuminate\\Http\\FrameGuard::__construct", "doc": "&quot;Create a new FrameGuard instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\FrameGuard", "fromLink": "Illuminate/Http/FrameGuard.html", "link": "Illuminate/Http/FrameGuard.html#method_handle", "name": "Illuminate\\Http\\FrameGuard::handle", "doc": "&quot;Handle the given request and get the response.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Http", "fromLink": "Illuminate/Http.html", "link": "Illuminate/Http/JsonResponse.html", "name": "Illuminate\\Http\\JsonResponse", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Http\\JsonResponse", "fromLink": "Illuminate/Http/JsonResponse.html", "link": "Illuminate/Http/JsonResponse.html#method___construct", "name": "Illuminate\\Http\\JsonResponse::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\JsonResponse", "fromLink": "Illuminate/Http/JsonResponse.html", "link": "Illuminate/Http/JsonResponse.html#method_getData", "name": "Illuminate\\Http\\JsonResponse::getData", "doc": "&quot;Get the json_decoded data from the response&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\JsonResponse", "fromLink": "Illuminate/Http/JsonResponse.html", "link": "Illuminate/Http/JsonResponse.html#method_setData", "name": "Illuminate\\Http\\JsonResponse::setData", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\JsonResponse", "fromLink": "Illuminate/Http/JsonResponse.html", "link": "Illuminate/Http/JsonResponse.html#method_getJsonOptions", "name": "Illuminate\\Http\\JsonResponse::getJsonOptions", "doc": "&quot;Get the JSON encoding options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\JsonResponse", "fromLink": "Illuminate/Http/JsonResponse.html", "link": "Illuminate/Http/JsonResponse.html#method_setJsonOptions", "name": "Illuminate\\Http\\JsonResponse::setJsonOptions", "doc": "&quot;Set the JSON encoding options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Http", "fromLink": "Illuminate/Http.html", "link": "Illuminate/Http/RedirectResponse.html", "name": "Illuminate\\Http\\RedirectResponse", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_header", "name": "Illuminate\\Http\\RedirectResponse::header", "doc": "&quot;Set a header on the Response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_with", "name": "Illuminate\\Http\\RedirectResponse::with", "doc": "&quot;Flash a piece of data to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_withCookie", "name": "Illuminate\\Http\\RedirectResponse::withCookie", "doc": "&quot;Add a cookie to the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_withCookies", "name": "Illuminate\\Http\\RedirectResponse::withCookies", "doc": "&quot;Add multiple cookies to the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_withInput", "name": "Illuminate\\Http\\RedirectResponse::withInput", "doc": "&quot;Flash an array of input to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_onlyInput", "name": "Illuminate\\Http\\RedirectResponse::onlyInput", "doc": "&quot;Flash an array of input to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_exceptInput", "name": "Illuminate\\Http\\RedirectResponse::exceptInput", "doc": "&quot;Flash an array of input to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_withErrors", "name": "Illuminate\\Http\\RedirectResponse::withErrors", "doc": "&quot;Flash a container of errors to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_parseErrors", "name": "Illuminate\\Http\\RedirectResponse::parseErrors", "doc": "&quot;Parse the given errors into an appropriate value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_getRequest", "name": "Illuminate\\Http\\RedirectResponse::getRequest", "doc": "&quot;Get the request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_setRequest", "name": "Illuminate\\Http\\RedirectResponse::setRequest", "doc": "&quot;Set the request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_getSession", "name": "Illuminate\\Http\\RedirectResponse::getSession", "doc": "&quot;Get the session store implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method_setSession", "name": "Illuminate\\Http\\RedirectResponse::setSession", "doc": "&quot;Set the session store implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\RedirectResponse", "fromLink": "Illuminate/Http/RedirectResponse.html", "link": "Illuminate/Http/RedirectResponse.html#method___call", "name": "Illuminate\\Http\\RedirectResponse::__call", "doc": "&quot;Dynamically bind flash data in the session.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Http", "fromLink": "Illuminate/Http.html", "link": "Illuminate/Http/Request.html", "name": "Illuminate\\Http\\Request", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_instance", "name": "Illuminate\\Http\\Request::instance", "doc": "&quot;Return the Request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_method", "name": "Illuminate\\Http\\Request::method", "doc": "&quot;Get the request method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_root", "name": "Illuminate\\Http\\Request::root", "doc": "&quot;Get the root URL for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_url", "name": "Illuminate\\Http\\Request::url", "doc": "&quot;Get the URL (no query string) for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_fullUrl", "name": "Illuminate\\Http\\Request::fullUrl", "doc": "&quot;Get the full URL for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_path", "name": "Illuminate\\Http\\Request::path", "doc": "&quot;Get the current path info for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_decodedPath", "name": "Illuminate\\Http\\Request::decodedPath", "doc": "&quot;Get the current encoded path info for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_segment", "name": "Illuminate\\Http\\Request::segment", "doc": "&quot;Get a segment from the URI (1 based index).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_segments", "name": "Illuminate\\Http\\Request::segments", "doc": "&quot;Get all of the segments for the request path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_is", "name": "Illuminate\\Http\\Request::is", "doc": "&quot;Determine if the current request URI matches a pattern.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_ajax", "name": "Illuminate\\Http\\Request::ajax", "doc": "&quot;Determine if the request is the result of an AJAX call.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_secure", "name": "Illuminate\\Http\\Request::secure", "doc": "&quot;Determine if the request is over HTTPS.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_ip", "name": "Illuminate\\Http\\Request::ip", "doc": "&quot;Returns the client IP address.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_ips", "name": "Illuminate\\Http\\Request::ips", "doc": "&quot;Returns the client IP addresses.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_exists", "name": "Illuminate\\Http\\Request::exists", "doc": "&quot;Determine if the request contains a given input item key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_has", "name": "Illuminate\\Http\\Request::has", "doc": "&quot;Determine if the request contains a non-empty value for an input item.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_isEmptyString", "name": "Illuminate\\Http\\Request::isEmptyString", "doc": "&quot;Determine if the given input key is an empty string for \&quot;has\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_all", "name": "Illuminate\\Http\\Request::all", "doc": "&quot;Get all of the input and files for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_input", "name": "Illuminate\\Http\\Request::input", "doc": "&quot;Retrieve an input item from the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_only", "name": "Illuminate\\Http\\Request::only", "doc": "&quot;Get a subset of the items from the input data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_except", "name": "Illuminate\\Http\\Request::except", "doc": "&quot;Get all of the input except for a specified array of items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_query", "name": "Illuminate\\Http\\Request::query", "doc": "&quot;Retrieve a query string item from the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_hasCookie", "name": "Illuminate\\Http\\Request::hasCookie", "doc": "&quot;Determine if a cookie is set on the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_cookie", "name": "Illuminate\\Http\\Request::cookie", "doc": "&quot;Retrieve a cookie from the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_file", "name": "Illuminate\\Http\\Request::file", "doc": "&quot;Retrieve a file from the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_hasFile", "name": "Illuminate\\Http\\Request::hasFile", "doc": "&quot;Determine if the uploaded data contains a file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_isValidFile", "name": "Illuminate\\Http\\Request::isValidFile", "doc": "&quot;Check that the given file is a valid file instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_header", "name": "Illuminate\\Http\\Request::header", "doc": "&quot;Retrieve a header from the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_server", "name": "Illuminate\\Http\\Request::server", "doc": "&quot;Retrieve a server variable from the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_old", "name": "Illuminate\\Http\\Request::old", "doc": "&quot;Retrieve an old input item.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_flash", "name": "Illuminate\\Http\\Request::flash", "doc": "&quot;Flash the input for the current request to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_flashOnly", "name": "Illuminate\\Http\\Request::flashOnly", "doc": "&quot;Flash only some of the input to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_flashExcept", "name": "Illuminate\\Http\\Request::flashExcept", "doc": "&quot;Flash only some of the input to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_flush", "name": "Illuminate\\Http\\Request::flush", "doc": "&quot;Flush all of the old input from the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_retrieveItem", "name": "Illuminate\\Http\\Request::retrieveItem", "doc": "&quot;Retrieve a parameter item from a given source.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_merge", "name": "Illuminate\\Http\\Request::merge", "doc": "&quot;Merge new input into the current request&#039;s input array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_replace", "name": "Illuminate\\Http\\Request::replace", "doc": "&quot;Replace the input for the current request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_json", "name": "Illuminate\\Http\\Request::json", "doc": "&quot;Get the JSON payload for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_getInputSource", "name": "Illuminate\\Http\\Request::getInputSource", "doc": "&quot;Get the input source for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_isJson", "name": "Illuminate\\Http\\Request::isJson", "doc": "&quot;Determine if the request is sending JSON.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_wantsJson", "name": "Illuminate\\Http\\Request::wantsJson", "doc": "&quot;Determine if the current request is asking for JSON in return.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_format", "name": "Illuminate\\Http\\Request::format", "doc": "&quot;Get the data format expected in the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_createFromBase", "name": "Illuminate\\Http\\Request::createFromBase", "doc": "&quot;Create an Illuminate request from a Symfony instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Request", "fromLink": "Illuminate/Http/Request.html", "link": "Illuminate/Http/Request.html#method_session", "name": "Illuminate\\Http\\Request::session", "doc": "&quot;Get the session associated with the request.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Http", "fromLink": "Illuminate/Http.html", "link": "Illuminate/Http/Response.html", "name": "Illuminate\\Http\\Response", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Http\\Response", "fromLink": "Illuminate/Http/Response.html", "link": "Illuminate/Http/Response.html#method_setContent", "name": "Illuminate\\Http\\Response::setContent", "doc": "&quot;Set the content on the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Response", "fromLink": "Illuminate/Http/Response.html", "link": "Illuminate/Http/Response.html#method_morphToJson", "name": "Illuminate\\Http\\Response::morphToJson", "doc": "&quot;Morph the given content into JSON.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Response", "fromLink": "Illuminate/Http/Response.html", "link": "Illuminate/Http/Response.html#method_shouldBeJson", "name": "Illuminate\\Http\\Response::shouldBeJson", "doc": "&quot;Determine if the given content should be turned into JSON.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\Response", "fromLink": "Illuminate/Http/Response.html", "link": "Illuminate/Http/Response.html#method_getOriginalContent", "name": "Illuminate\\Http\\Response::getOriginalContent", "doc": "&quot;Get the original response content.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Http", "fromLink": "Illuminate/Http.html", "link": "Illuminate/Http/ResponseTrait.html", "name": "Illuminate\\Http\\ResponseTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Http\\ResponseTrait", "fromLink": "Illuminate/Http/ResponseTrait.html", "link": "Illuminate/Http/ResponseTrait.html#method_header", "name": "Illuminate\\Http\\ResponseTrait::header", "doc": "&quot;Set a header on the Response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Http\\ResponseTrait", "fromLink": "Illuminate/Http/ResponseTrait.html", "link": "Illuminate/Http/ResponseTrait.html#method_withCookie", "name": "Illuminate\\Http\\ResponseTrait::withCookie", "doc": "&quot;Add a cookie to the response.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Log", "fromLink": "Illuminate/Log.html", "link": "Illuminate/Log/LogServiceProvider.html", "name": "Illuminate\\Log\\LogServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Log\\LogServiceProvider", "fromLink": "Illuminate/Log/LogServiceProvider.html", "link": "Illuminate/Log/LogServiceProvider.html#method_register", "name": "Illuminate\\Log\\LogServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\LogServiceProvider", "fromLink": "Illuminate/Log/LogServiceProvider.html", "link": "Illuminate/Log/LogServiceProvider.html#method_provides", "name": "Illuminate\\Log\\LogServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Log", "fromLink": "Illuminate/Log.html", "link": "Illuminate/Log/Writer.html", "name": "Illuminate\\Log\\Writer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method___construct", "name": "Illuminate\\Log\\Writer::__construct", "doc": "&quot;Create a new log writer instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_callMonolog", "name": "Illuminate\\Log\\Writer::callMonolog", "doc": "&quot;Call Monolog with the given method and parameters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_useFiles", "name": "Illuminate\\Log\\Writer::useFiles", "doc": "&quot;Register a file log handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_useDailyFiles", "name": "Illuminate\\Log\\Writer::useDailyFiles", "doc": "&quot;Register a daily file log handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_useErrorLog", "name": "Illuminate\\Log\\Writer::useErrorLog", "doc": "&quot;Register an error_log handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_getDefaultFormatter", "name": "Illuminate\\Log\\Writer::getDefaultFormatter", "doc": "&quot;Get a default Monolog formatter instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_parseLevel", "name": "Illuminate\\Log\\Writer::parseLevel", "doc": "&quot;Parse the string level into a Monolog constant.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_listen", "name": "Illuminate\\Log\\Writer::listen", "doc": "&quot;Register a new callback handler for when\na log event is triggered.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_getMonolog", "name": "Illuminate\\Log\\Writer::getMonolog", "doc": "&quot;Get the underlying Monolog instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_getEventDispatcher", "name": "Illuminate\\Log\\Writer::getEventDispatcher", "doc": "&quot;Get the event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_setEventDispatcher", "name": "Illuminate\\Log\\Writer::setEventDispatcher", "doc": "&quot;Set the event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_fireLogEvent", "name": "Illuminate\\Log\\Writer::fireLogEvent", "doc": "&quot;Fires a log event.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_write", "name": "Illuminate\\Log\\Writer::write", "doc": "&quot;Dynamically pass log calls into the writer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method___call", "name": "Illuminate\\Log\\Writer::__call", "doc": "&quot;Dynamically handle error additions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Log\\Writer", "fromLink": "Illuminate/Log/Writer.html", "link": "Illuminate/Log/Writer.html#method_formatParameters", "name": "Illuminate\\Log\\Writer::formatParameters", "doc": "&quot;Format the parameters for the logger.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Mail", "fromLink": "Illuminate/Mail.html", "link": "Illuminate/Mail/MailServiceProvider.html", "name": "Illuminate\\Mail\\MailServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_register", "name": "Illuminate\\Mail\\MailServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_setMailerDependencies", "name": "Illuminate\\Mail\\MailServiceProvider::setMailerDependencies", "doc": "&quot;Set a few dependencies on the mailer instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_registerSwiftMailer", "name": "Illuminate\\Mail\\MailServiceProvider::registerSwiftMailer", "doc": "&quot;Register the Swift Mailer instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_registerSwiftTransport", "name": "Illuminate\\Mail\\MailServiceProvider::registerSwiftTransport", "doc": "&quot;Register the Swift Transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_registerSmtpTransport", "name": "Illuminate\\Mail\\MailServiceProvider::registerSmtpTransport", "doc": "&quot;Register the SMTP Swift Transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_registerSendmailTransport", "name": "Illuminate\\Mail\\MailServiceProvider::registerSendmailTransport", "doc": "&quot;Register the Sendmail Swift Transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_registerMailTransport", "name": "Illuminate\\Mail\\MailServiceProvider::registerMailTransport", "doc": "&quot;Register the Mail Swift Transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_registerMailgunTransport", "name": "Illuminate\\Mail\\MailServiceProvider::registerMailgunTransport", "doc": "&quot;Register the Mailgun Swift Transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_registerMandrillTransport", "name": "Illuminate\\Mail\\MailServiceProvider::registerMandrillTransport", "doc": "&quot;Register the Mandrill Swift Transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_registerLogTransport", "name": "Illuminate\\Mail\\MailServiceProvider::registerLogTransport", "doc": "&quot;Register the \&quot;Log\&quot; Swift Transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\MailServiceProvider", "fromLink": "Illuminate/Mail/MailServiceProvider.html", "link": "Illuminate/Mail/MailServiceProvider.html#method_provides", "name": "Illuminate\\Mail\\MailServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Mail", "fromLink": "Illuminate/Mail.html", "link": "Illuminate/Mail/Mailer.html", "name": "Illuminate\\Mail\\Mailer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method___construct", "name": "Illuminate\\Mail\\Mailer::__construct", "doc": "&quot;Create a new Mailer instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_alwaysFrom", "name": "Illuminate\\Mail\\Mailer::alwaysFrom", "doc": "&quot;Set the global from address and name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_plain", "name": "Illuminate\\Mail\\Mailer::plain", "doc": "&quot;Send a new message when only a plain part.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_send", "name": "Illuminate\\Mail\\Mailer::send", "doc": "&quot;Send a new message using a view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_queue", "name": "Illuminate\\Mail\\Mailer::queue", "doc": "&quot;Queue a new e-mail message for sending.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_queueOn", "name": "Illuminate\\Mail\\Mailer::queueOn", "doc": "&quot;Queue a new e-mail message for sending on the given queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_later", "name": "Illuminate\\Mail\\Mailer::later", "doc": "&quot;Queue a new e-mail message for sending after (n) seconds.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_laterOn", "name": "Illuminate\\Mail\\Mailer::laterOn", "doc": "&quot;Queue a new e-mail message for sending after (n) seconds on the given queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_buildQueueCallable", "name": "Illuminate\\Mail\\Mailer::buildQueueCallable", "doc": "&quot;Build the callable for a queued e-mail job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_handleQueuedMessage", "name": "Illuminate\\Mail\\Mailer::handleQueuedMessage", "doc": "&quot;Handle a queued e-mail message job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_getQueuedCallable", "name": "Illuminate\\Mail\\Mailer::getQueuedCallable", "doc": "&quot;Get the true callable for a queued e-mail message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_addContent", "name": "Illuminate\\Mail\\Mailer::addContent", "doc": "&quot;Add the content to a given message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_parseView", "name": "Illuminate\\Mail\\Mailer::parseView", "doc": "&quot;Parse the given view name or array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_sendSwiftMessage", "name": "Illuminate\\Mail\\Mailer::sendSwiftMessage", "doc": "&quot;Send a Swift Message instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_logMessage", "name": "Illuminate\\Mail\\Mailer::logMessage", "doc": "&quot;Log that a message was sent.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_callMessageBuilder", "name": "Illuminate\\Mail\\Mailer::callMessageBuilder", "doc": "&quot;Call the provided message builder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_createMessage", "name": "Illuminate\\Mail\\Mailer::createMessage", "doc": "&quot;Create a new message instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_getView", "name": "Illuminate\\Mail\\Mailer::getView", "doc": "&quot;Render the given view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_pretend", "name": "Illuminate\\Mail\\Mailer::pretend", "doc": "&quot;Tell the mailer to not really send messages.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_isPretending", "name": "Illuminate\\Mail\\Mailer::isPretending", "doc": "&quot;Check if the mailer is pretending to send messages.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_getViewFactory", "name": "Illuminate\\Mail\\Mailer::getViewFactory", "doc": "&quot;Get the view factory instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_getSwiftMailer", "name": "Illuminate\\Mail\\Mailer::getSwiftMailer", "doc": "&quot;Get the Swift Mailer instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_failures", "name": "Illuminate\\Mail\\Mailer::failures", "doc": "&quot;Get the array of failed recipients.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_setSwiftMailer", "name": "Illuminate\\Mail\\Mailer::setSwiftMailer", "doc": "&quot;Set the Swift Mailer instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_setLogger", "name": "Illuminate\\Mail\\Mailer::setLogger", "doc": "&quot;Set the log writer instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_setQueue", "name": "Illuminate\\Mail\\Mailer::setQueue", "doc": "&quot;Set the queue manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Mailer", "fromLink": "Illuminate/Mail/Mailer.html", "link": "Illuminate/Mail/Mailer.html#method_setContainer", "name": "Illuminate\\Mail\\Mailer::setContainer", "doc": "&quot;Set the IoC container instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Mail", "fromLink": "Illuminate/Mail.html", "link": "Illuminate/Mail/Message.html", "name": "Illuminate\\Mail\\Message", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method___construct", "name": "Illuminate\\Mail\\Message::__construct", "doc": "&quot;Create a new message instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_from", "name": "Illuminate\\Mail\\Message::from", "doc": "&quot;Add a \&quot;from\&quot; address to the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_sender", "name": "Illuminate\\Mail\\Message::sender", "doc": "&quot;Set the \&quot;sender\&quot; of the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_returnPath", "name": "Illuminate\\Mail\\Message::returnPath", "doc": "&quot;Set the \&quot;return path\&quot; of the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_to", "name": "Illuminate\\Mail\\Message::to", "doc": "&quot;Add a recipient to the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_cc", "name": "Illuminate\\Mail\\Message::cc", "doc": "&quot;Add a carbon copy to the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_bcc", "name": "Illuminate\\Mail\\Message::bcc", "doc": "&quot;Add a blind carbon copy to the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_replyTo", "name": "Illuminate\\Mail\\Message::replyTo", "doc": "&quot;Add a reply to address to the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_addAddresses", "name": "Illuminate\\Mail\\Message::addAddresses", "doc": "&quot;Add a recipient to the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_subject", "name": "Illuminate\\Mail\\Message::subject", "doc": "&quot;Set the subject of the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_priority", "name": "Illuminate\\Mail\\Message::priority", "doc": "&quot;Set the message priority level.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_attach", "name": "Illuminate\\Mail\\Message::attach", "doc": "&quot;Attach a file to the message.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_createAttachmentFromPath", "name": "Illuminate\\Mail\\Message::createAttachmentFromPath", "doc": "&quot;Create a Swift Attachment instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_attachData", "name": "Illuminate\\Mail\\Message::attachData", "doc": "&quot;Attach in-memory data as an attachment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_createAttachmentFromData", "name": "Illuminate\\Mail\\Message::createAttachmentFromData", "doc": "&quot;Create a Swift Attachment instance from data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_embed", "name": "Illuminate\\Mail\\Message::embed", "doc": "&quot;Embed a file in the message and get the CID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_embedData", "name": "Illuminate\\Mail\\Message::embedData", "doc": "&quot;Embed in-memory data in the message and get the CID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_prepAttachment", "name": "Illuminate\\Mail\\Message::prepAttachment", "doc": "&quot;Prepare and attach the given attachment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method_getSwiftMessage", "name": "Illuminate\\Mail\\Message::getSwiftMessage", "doc": "&quot;Get the underlying Swift Message instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Message", "fromLink": "Illuminate/Mail/Message.html", "link": "Illuminate/Mail/Message.html#method___call", "name": "Illuminate\\Mail\\Message::__call", "doc": "&quot;Dynamically pass missing methods to the Swift instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Mail\\Transport", "fromLink": "Illuminate/Mail/Transport.html", "link": "Illuminate/Mail/Transport/LogTransport.html", "name": "Illuminate\\Mail\\Transport\\LogTransport", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\LogTransport", "fromLink": "Illuminate/Mail/Transport/LogTransport.html", "link": "Illuminate/Mail/Transport/LogTransport.html#method___construct", "name": "Illuminate\\Mail\\Transport\\LogTransport::__construct", "doc": "&quot;Create a new log transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\LogTransport", "fromLink": "Illuminate/Mail/Transport/LogTransport.html", "link": "Illuminate/Mail/Transport/LogTransport.html#method_isStarted", "name": "Illuminate\\Mail\\Transport\\LogTransport::isStarted", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\LogTransport", "fromLink": "Illuminate/Mail/Transport/LogTransport.html", "link": "Illuminate/Mail/Transport/LogTransport.html#method_start", "name": "Illuminate\\Mail\\Transport\\LogTransport::start", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\LogTransport", "fromLink": "Illuminate/Mail/Transport/LogTransport.html", "link": "Illuminate/Mail/Transport/LogTransport.html#method_stop", "name": "Illuminate\\Mail\\Transport\\LogTransport::stop", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\LogTransport", "fromLink": "Illuminate/Mail/Transport/LogTransport.html", "link": "Illuminate/Mail/Transport/LogTransport.html#method_send", "name": "Illuminate\\Mail\\Transport\\LogTransport::send", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\LogTransport", "fromLink": "Illuminate/Mail/Transport/LogTransport.html", "link": "Illuminate/Mail/Transport/LogTransport.html#method_getMimeEntityString", "name": "Illuminate\\Mail\\Transport\\LogTransport::getMimeEntityString", "doc": "&quot;Get a loggable string out of a Swiftmailer entity.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\LogTransport", "fromLink": "Illuminate/Mail/Transport/LogTransport.html", "link": "Illuminate/Mail/Transport/LogTransport.html#method_registerPlugin", "name": "Illuminate\\Mail\\Transport\\LogTransport::registerPlugin", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Mail\\Transport", "fromLink": "Illuminate/Mail/Transport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html", "name": "Illuminate\\Mail\\Transport\\MailgunTransport", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method___construct", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::__construct", "doc": "&quot;Create a new Mailgun transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_isStarted", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::isStarted", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_start", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::start", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_stop", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::stop", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_send", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::send", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_registerPlugin", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::registerPlugin", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_getTo", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::getTo", "doc": "&quot;Get the \&quot;to\&quot; payload field for the API request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_getHttpClient", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::getHttpClient", "doc": "&quot;Get a new HTTP client instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_getKey", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::getKey", "doc": "&quot;Get the API key being used by the transport.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_setKey", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::setKey", "doc": "&quot;Set the API key being used by the transport.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_getDomain", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::getDomain", "doc": "&quot;Get the domain being used by the transport.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MailgunTransport", "fromLink": "Illuminate/Mail/Transport/MailgunTransport.html", "link": "Illuminate/Mail/Transport/MailgunTransport.html#method_setDomain", "name": "Illuminate\\Mail\\Transport\\MailgunTransport::setDomain", "doc": "&quot;Set the domain being used by the transport.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Mail\\Transport", "fromLink": "Illuminate/Mail/Transport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html", "name": "Illuminate\\Mail\\Transport\\MandrillTransport", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method___construct", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::__construct", "doc": "&quot;Create a new Mandrill transport instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method_isStarted", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::isStarted", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method_start", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::start", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method_stop", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::stop", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method_send", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::send", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method_registerPlugin", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::registerPlugin", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method_getHttpClient", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::getHttpClient", "doc": "&quot;Get a new HTTP client instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method_getKey", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::getKey", "doc": "&quot;Get the API key being used by the transport.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Mail\\Transport\\MandrillTransport", "fromLink": "Illuminate/Mail/Transport/MandrillTransport.html", "link": "Illuminate/Mail/Transport/MandrillTransport.html#method_setKey", "name": "Illuminate\\Mail\\Transport\\MandrillTransport::setKey", "doc": "&quot;Set the API key being used by the transport.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Pagination", "fromLink": "Illuminate/Pagination.html", "link": "Illuminate/Pagination/BootstrapPresenter.html", "name": "Illuminate\\Pagination\\BootstrapPresenter", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Pagination\\BootstrapPresenter", "fromLink": "Illuminate/Pagination/BootstrapPresenter.html", "link": "Illuminate/Pagination/BootstrapPresenter.html#method_getPageLinkWrapper", "name": "Illuminate\\Pagination\\BootstrapPresenter::getPageLinkWrapper", "doc": "&quot;Get HTML wrapper for a page link.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\BootstrapPresenter", "fromLink": "Illuminate/Pagination/BootstrapPresenter.html", "link": "Illuminate/Pagination/BootstrapPresenter.html#method_getDisabledTextWrapper", "name": "Illuminate\\Pagination\\BootstrapPresenter::getDisabledTextWrapper", "doc": "&quot;Get HTML wrapper for disabled text.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\BootstrapPresenter", "fromLink": "Illuminate/Pagination/BootstrapPresenter.html", "link": "Illuminate/Pagination/BootstrapPresenter.html#method_getActivePageWrapper", "name": "Illuminate\\Pagination\\BootstrapPresenter::getActivePageWrapper", "doc": "&quot;Get HTML wrapper for active text.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Pagination", "fromLink": "Illuminate/Pagination.html", "link": "Illuminate/Pagination/Factory.html", "name": "Illuminate\\Pagination\\Factory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method___construct", "name": "Illuminate\\Pagination\\Factory::__construct", "doc": "&quot;Create a new pagination factory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_setupPaginationEnvironment", "name": "Illuminate\\Pagination\\Factory::setupPaginationEnvironment", "doc": "&quot;Setup the pagination environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_make", "name": "Illuminate\\Pagination\\Factory::make", "doc": "&quot;Get a new paginator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getPaginationView", "name": "Illuminate\\Pagination\\Factory::getPaginationView", "doc": "&quot;Get the pagination view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getCurrentPage", "name": "Illuminate\\Pagination\\Factory::getCurrentPage", "doc": "&quot;Get the number of the current page.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_setCurrentPage", "name": "Illuminate\\Pagination\\Factory::setCurrentPage", "doc": "&quot;Set the number of the current page.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getCurrentUrl", "name": "Illuminate\\Pagination\\Factory::getCurrentUrl", "doc": "&quot;Get the root URL for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_setBaseUrl", "name": "Illuminate\\Pagination\\Factory::setBaseUrl", "doc": "&quot;Set the base URL in use by the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_setPageName", "name": "Illuminate\\Pagination\\Factory::setPageName", "doc": "&quot;Set the input page parameter name used by the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getPageName", "name": "Illuminate\\Pagination\\Factory::getPageName", "doc": "&quot;Get the input page parameter name used by the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getViewName", "name": "Illuminate\\Pagination\\Factory::getViewName", "doc": "&quot;Get the name of the pagination view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_setViewName", "name": "Illuminate\\Pagination\\Factory::setViewName", "doc": "&quot;Set the name of the pagination view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getLocale", "name": "Illuminate\\Pagination\\Factory::getLocale", "doc": "&quot;Get the locale of the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_setLocale", "name": "Illuminate\\Pagination\\Factory::setLocale", "doc": "&quot;Set the locale of the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getRequest", "name": "Illuminate\\Pagination\\Factory::getRequest", "doc": "&quot;Get the active request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_setRequest", "name": "Illuminate\\Pagination\\Factory::setRequest", "doc": "&quot;Set the active request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getViewFactory", "name": "Illuminate\\Pagination\\Factory::getViewFactory", "doc": "&quot;Get the current view factory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_setViewFactory", "name": "Illuminate\\Pagination\\Factory::setViewFactory", "doc": "&quot;Set the current view factory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Factory", "fromLink": "Illuminate/Pagination/Factory.html", "link": "Illuminate/Pagination/Factory.html#method_getTranslator", "name": "Illuminate\\Pagination\\Factory::getTranslator", "doc": "&quot;Get the translator instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Pagination", "fromLink": "Illuminate/Pagination.html", "link": "Illuminate/Pagination/PaginationServiceProvider.html", "name": "Illuminate\\Pagination\\PaginationServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Pagination\\PaginationServiceProvider", "fromLink": "Illuminate/Pagination/PaginationServiceProvider.html", "link": "Illuminate/Pagination/PaginationServiceProvider.html#method_register", "name": "Illuminate\\Pagination\\PaginationServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\PaginationServiceProvider", "fromLink": "Illuminate/Pagination/PaginationServiceProvider.html", "link": "Illuminate/Pagination/PaginationServiceProvider.html#method_provides", "name": "Illuminate\\Pagination\\PaginationServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Pagination", "fromLink": "Illuminate/Pagination.html", "link": "Illuminate/Pagination/Paginator.html", "name": "Illuminate\\Pagination\\Paginator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method___construct", "name": "Illuminate\\Pagination\\Paginator::__construct", "doc": "&quot;Create a new Paginator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_setupPaginationContext", "name": "Illuminate\\Pagination\\Paginator::setupPaginationContext", "doc": "&quot;Setup the pagination context (current and last page).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_calculateCurrentAndLastPages", "name": "Illuminate\\Pagination\\Paginator::calculateCurrentAndLastPages", "doc": "&quot;Calculate the current and last pages for this instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_calculateItemRanges", "name": "Illuminate\\Pagination\\Paginator::calculateItemRanges", "doc": "&quot;Calculate the first and last item number for this instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_calculateCurrentPage", "name": "Illuminate\\Pagination\\Paginator::calculateCurrentPage", "doc": "&quot;Get the current page for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_isValidPageNumber", "name": "Illuminate\\Pagination\\Paginator::isValidPageNumber", "doc": "&quot;Determine if the given value is a valid page number.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_links", "name": "Illuminate\\Pagination\\Paginator::links", "doc": "&quot;Get the pagination links view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getUrl", "name": "Illuminate\\Pagination\\Paginator::getUrl", "doc": "&quot;Get a URL for a given page number.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_fragment", "name": "Illuminate\\Pagination\\Paginator::fragment", "doc": "&quot;Get \/ set the URL fragment to be appended to URLs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_buildFragment", "name": "Illuminate\\Pagination\\Paginator::buildFragment", "doc": "&quot;Build the full fragment portion of a URL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_appends", "name": "Illuminate\\Pagination\\Paginator::appends", "doc": "&quot;Add a query string value to the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_appendArray", "name": "Illuminate\\Pagination\\Paginator::appendArray", "doc": "&quot;Add an array of query string values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_addQuery", "name": "Illuminate\\Pagination\\Paginator::addQuery", "doc": "&quot;Add a query string value to the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_isQuickPaginating", "name": "Illuminate\\Pagination\\Paginator::isQuickPaginating", "doc": "&quot;Determine if the paginator is doing \&quot;quick\&quot; pagination.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getCurrentPage", "name": "Illuminate\\Pagination\\Paginator::getCurrentPage", "doc": "&quot;Get the current page for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getLastPage", "name": "Illuminate\\Pagination\\Paginator::getLastPage", "doc": "&quot;Get the last page that should be available.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getFrom", "name": "Illuminate\\Pagination\\Paginator::getFrom", "doc": "&quot;Get the number of the first item on the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getTo", "name": "Illuminate\\Pagination\\Paginator::getTo", "doc": "&quot;Get the number of the last item on the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getPerPage", "name": "Illuminate\\Pagination\\Paginator::getPerPage", "doc": "&quot;Get the number of items to be displayed per page.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getCollection", "name": "Illuminate\\Pagination\\Paginator::getCollection", "doc": "&quot;Get a collection instance containing the items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getItems", "name": "Illuminate\\Pagination\\Paginator::getItems", "doc": "&quot;Get the items being paginated.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_setItems", "name": "Illuminate\\Pagination\\Paginator::setItems", "doc": "&quot;Set the items being paginated.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getTotal", "name": "Illuminate\\Pagination\\Paginator::getTotal", "doc": "&quot;Get the total number of items in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_setBaseUrl", "name": "Illuminate\\Pagination\\Paginator::setBaseUrl", "doc": "&quot;Set the base URL in use by the paginator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getFactory", "name": "Illuminate\\Pagination\\Paginator::getFactory", "doc": "&quot;Get the pagination factory.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_getIterator", "name": "Illuminate\\Pagination\\Paginator::getIterator", "doc": "&quot;Get an iterator for the items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_isEmpty", "name": "Illuminate\\Pagination\\Paginator::isEmpty", "doc": "&quot;Determine if the list of items is empty or not.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_count", "name": "Illuminate\\Pagination\\Paginator::count", "doc": "&quot;Get the number of items for the current page.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_offsetExists", "name": "Illuminate\\Pagination\\Paginator::offsetExists", "doc": "&quot;Determine if the given item exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_offsetGet", "name": "Illuminate\\Pagination\\Paginator::offsetGet", "doc": "&quot;Get the item at the given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_offsetSet", "name": "Illuminate\\Pagination\\Paginator::offsetSet", "doc": "&quot;Set the item at the given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_offsetUnset", "name": "Illuminate\\Pagination\\Paginator::offsetUnset", "doc": "&quot;Unset the item at the given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_toArray", "name": "Illuminate\\Pagination\\Paginator::toArray", "doc": "&quot;Get the instance as an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method_toJson", "name": "Illuminate\\Pagination\\Paginator::toJson", "doc": "&quot;Convert the object to its JSON representation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Paginator", "fromLink": "Illuminate/Pagination/Paginator.html", "link": "Illuminate/Pagination/Paginator.html#method___call", "name": "Illuminate\\Pagination\\Paginator::__call", "doc": "&quot;Call a method on the underlying Collection&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Pagination", "fromLink": "Illuminate/Pagination.html", "link": "Illuminate/Pagination/Presenter.html", "name": "Illuminate\\Pagination\\Presenter", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method___construct", "name": "Illuminate\\Pagination\\Presenter::__construct", "doc": "&quot;Create a new Presenter instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getPageLinkWrapper", "name": "Illuminate\\Pagination\\Presenter::getPageLinkWrapper", "doc": "&quot;Get HTML wrapper for a page link.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getDisabledTextWrapper", "name": "Illuminate\\Pagination\\Presenter::getDisabledTextWrapper", "doc": "&quot;Get HTML wrapper for disabled text.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getActivePageWrapper", "name": "Illuminate\\Pagination\\Presenter::getActivePageWrapper", "doc": "&quot;Get HTML wrapper for active text.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_render", "name": "Illuminate\\Pagination\\Presenter::render", "doc": "&quot;Render the Pagination contents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getPageRange", "name": "Illuminate\\Pagination\\Presenter::getPageRange", "doc": "&quot;Create a range of pagination links.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getPageSlider", "name": "Illuminate\\Pagination\\Presenter::getPageSlider", "doc": "&quot;Create a pagination slider link window.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getAdjacentRange", "name": "Illuminate\\Pagination\\Presenter::getAdjacentRange", "doc": "&quot;Get the page range for the current page window.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getStart", "name": "Illuminate\\Pagination\\Presenter::getStart", "doc": "&quot;Create the beginning leader of a pagination slider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getFinish", "name": "Illuminate\\Pagination\\Presenter::getFinish", "doc": "&quot;Create the ending cap of a pagination slider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getPrevious", "name": "Illuminate\\Pagination\\Presenter::getPrevious", "doc": "&quot;Get the previous page pagination element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getNext", "name": "Illuminate\\Pagination\\Presenter::getNext", "doc": "&quot;Get the next page pagination element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getDots", "name": "Illuminate\\Pagination\\Presenter::getDots", "doc": "&quot;Get a pagination \&quot;dot\&quot; element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_getLink", "name": "Illuminate\\Pagination\\Presenter::getLink", "doc": "&quot;Create a pagination slider link.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_setCurrentPage", "name": "Illuminate\\Pagination\\Presenter::setCurrentPage", "doc": "&quot;Set the value of the current page.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Pagination\\Presenter", "fromLink": "Illuminate/Pagination/Presenter.html", "link": "Illuminate/Pagination/Presenter.html#method_setLastPage", "name": "Illuminate\\Pagination\\Presenter::setLastPage", "doc": "&quot;Set the value of the last page.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html", "name": "Illuminate\\Queue\\BeanstalkdQueue", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\BeanstalkdQueue", "fromLink": "Illuminate/Queue/BeanstalkdQueue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html#method___construct", "name": "Illuminate\\Queue\\BeanstalkdQueue::__construct", "doc": "&quot;Create a new Beanstalkd queue instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\BeanstalkdQueue", "fromLink": "Illuminate/Queue/BeanstalkdQueue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html#method_push", "name": "Illuminate\\Queue\\BeanstalkdQueue::push", "doc": "&quot;Push a new job onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\BeanstalkdQueue", "fromLink": "Illuminate/Queue/BeanstalkdQueue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html#method_pushRaw", "name": "Illuminate\\Queue\\BeanstalkdQueue::pushRaw", "doc": "&quot;Push a raw payload onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\BeanstalkdQueue", "fromLink": "Illuminate/Queue/BeanstalkdQueue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html#method_later", "name": "Illuminate\\Queue\\BeanstalkdQueue::later", "doc": "&quot;Push a new job onto the queue after a delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\BeanstalkdQueue", "fromLink": "Illuminate/Queue/BeanstalkdQueue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html#method_pop", "name": "Illuminate\\Queue\\BeanstalkdQueue::pop", "doc": "&quot;Pop the next job off of the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\BeanstalkdQueue", "fromLink": "Illuminate/Queue/BeanstalkdQueue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html#method_deleteMessage", "name": "Illuminate\\Queue\\BeanstalkdQueue::deleteMessage", "doc": "&quot;Delete a message from the Beanstalk queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\BeanstalkdQueue", "fromLink": "Illuminate/Queue/BeanstalkdQueue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html#method_getQueue", "name": "Illuminate\\Queue\\BeanstalkdQueue::getQueue", "doc": "&quot;Get the queue or return the default.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\BeanstalkdQueue", "fromLink": "Illuminate/Queue/BeanstalkdQueue.html", "link": "Illuminate/Queue/BeanstalkdQueue.html#method_getPheanstalk", "name": "Illuminate\\Queue\\BeanstalkdQueue::getPheanstalk", "doc": "&quot;Get the underlying Pheanstalk instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Capsule", "fromLink": "Illuminate/Queue/Capsule.html", "link": "Illuminate/Queue/Capsule/Manager.html", "name": "Illuminate\\Queue\\Capsule\\Manager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method___construct", "name": "Illuminate\\Queue\\Capsule\\Manager::__construct", "doc": "&quot;Create a new queue capsule manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_setupDefaultConfiguration", "name": "Illuminate\\Queue\\Capsule\\Manager::setupDefaultConfiguration", "doc": "&quot;Setup the default queue configuration options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_setupManager", "name": "Illuminate\\Queue\\Capsule\\Manager::setupManager", "doc": "&quot;Build the queue manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_registerConnectors", "name": "Illuminate\\Queue\\Capsule\\Manager::registerConnectors", "doc": "&quot;Register the default connectors that the component ships with.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_connection", "name": "Illuminate\\Queue\\Capsule\\Manager::connection", "doc": "&quot;Get a connection instance from the global manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_push", "name": "Illuminate\\Queue\\Capsule\\Manager::push", "doc": "&quot;Push a new job onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_bulk", "name": "Illuminate\\Queue\\Capsule\\Manager::bulk", "doc": "&quot;Push a new an array of jobs onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_later", "name": "Illuminate\\Queue\\Capsule\\Manager::later", "doc": "&quot;Push a new job onto the queue after a delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_getConnection", "name": "Illuminate\\Queue\\Capsule\\Manager::getConnection", "doc": "&quot;Get a registered connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_addConnection", "name": "Illuminate\\Queue\\Capsule\\Manager::addConnection", "doc": "&quot;Register a connection with the manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method_getQueueManager", "name": "Illuminate\\Queue\\Capsule\\Manager::getQueueManager", "doc": "&quot;Get the queue manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method___call", "name": "Illuminate\\Queue\\Capsule\\Manager::__call", "doc": "&quot;Pass dynamic instance methods to the manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Capsule\\Manager", "fromLink": "Illuminate/Queue/Capsule/Manager.html", "link": "Illuminate/Queue/Capsule/Manager.html#method___callStatic", "name": "Illuminate\\Queue\\Capsule\\Manager::__callStatic", "doc": "&quot;Dynamically pass methods to the default connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Connectors", "fromLink": "Illuminate/Queue/Connectors.html", "link": "Illuminate/Queue/Connectors/BeanstalkdConnector.html", "name": "Illuminate\\Queue\\Connectors\\BeanstalkdConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\BeanstalkdConnector", "fromLink": "Illuminate/Queue/Connectors/BeanstalkdConnector.html", "link": "Illuminate/Queue/Connectors/BeanstalkdConnector.html#method_connect", "name": "Illuminate\\Queue\\Connectors\\BeanstalkdConnector::connect", "doc": "&quot;Establish a queue connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Connectors", "fromLink": "Illuminate/Queue/Connectors.html", "link": "Illuminate/Queue/Connectors/ConnectorInterface.html", "name": "Illuminate\\Queue\\Connectors\\ConnectorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\ConnectorInterface", "fromLink": "Illuminate/Queue/Connectors/ConnectorInterface.html", "link": "Illuminate/Queue/Connectors/ConnectorInterface.html#method_connect", "name": "Illuminate\\Queue\\Connectors\\ConnectorInterface::connect", "doc": "&quot;Establish a queue connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Connectors", "fromLink": "Illuminate/Queue/Connectors.html", "link": "Illuminate/Queue/Connectors/IronConnector.html", "name": "Illuminate\\Queue\\Connectors\\IronConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\IronConnector", "fromLink": "Illuminate/Queue/Connectors/IronConnector.html", "link": "Illuminate/Queue/Connectors/IronConnector.html#method___construct", "name": "Illuminate\\Queue\\Connectors\\IronConnector::__construct", "doc": "&quot;Create a new Iron connector instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\IronConnector", "fromLink": "Illuminate/Queue/Connectors/IronConnector.html", "link": "Illuminate/Queue/Connectors/IronConnector.html#method_connect", "name": "Illuminate\\Queue\\Connectors\\IronConnector::connect", "doc": "&quot;Establish a queue connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Connectors", "fromLink": "Illuminate/Queue/Connectors.html", "link": "Illuminate/Queue/Connectors/RedisConnector.html", "name": "Illuminate\\Queue\\Connectors\\RedisConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\RedisConnector", "fromLink": "Illuminate/Queue/Connectors/RedisConnector.html", "link": "Illuminate/Queue/Connectors/RedisConnector.html#method___construct", "name": "Illuminate\\Queue\\Connectors\\RedisConnector::__construct", "doc": "&quot;Create a new Redis queue connector instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\RedisConnector", "fromLink": "Illuminate/Queue/Connectors/RedisConnector.html", "link": "Illuminate/Queue/Connectors/RedisConnector.html#method_connect", "name": "Illuminate\\Queue\\Connectors\\RedisConnector::connect", "doc": "&quot;Establish a queue connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Connectors", "fromLink": "Illuminate/Queue/Connectors.html", "link": "Illuminate/Queue/Connectors/SqsConnector.html", "name": "Illuminate\\Queue\\Connectors\\SqsConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\SqsConnector", "fromLink": "Illuminate/Queue/Connectors/SqsConnector.html", "link": "Illuminate/Queue/Connectors/SqsConnector.html#method_connect", "name": "Illuminate\\Queue\\Connectors\\SqsConnector::connect", "doc": "&quot;Establish a queue connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Connectors", "fromLink": "Illuminate/Queue/Connectors.html", "link": "Illuminate/Queue/Connectors/SyncConnector.html", "name": "Illuminate\\Queue\\Connectors\\SyncConnector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Connectors\\SyncConnector", "fromLink": "Illuminate/Queue/Connectors/SyncConnector.html", "link": "Illuminate/Queue/Connectors/SyncConnector.html#method_connect", "name": "Illuminate\\Queue\\Connectors\\SyncConnector::connect", "doc": "&quot;Establish a queue connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/FailedTableCommand.html", "name": "Illuminate\\Queue\\Console\\FailedTableCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\FailedTableCommand", "fromLink": "Illuminate/Queue/Console/FailedTableCommand.html", "link": "Illuminate/Queue/Console/FailedTableCommand.html#method___construct", "name": "Illuminate\\Queue\\Console\\FailedTableCommand::__construct", "doc": "&quot;Create a new session table command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\FailedTableCommand", "fromLink": "Illuminate/Queue/Console/FailedTableCommand.html", "link": "Illuminate/Queue/Console/FailedTableCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\FailedTableCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\FailedTableCommand", "fromLink": "Illuminate/Queue/Console/FailedTableCommand.html", "link": "Illuminate/Queue/Console/FailedTableCommand.html#method_createBaseMigration", "name": "Illuminate\\Queue\\Console\\FailedTableCommand::createBaseMigration", "doc": "&quot;Create a base migration file for the table.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/FlushFailedCommand.html", "name": "Illuminate\\Queue\\Console\\FlushFailedCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\FlushFailedCommand", "fromLink": "Illuminate/Queue/Console/FlushFailedCommand.html", "link": "Illuminate/Queue/Console/FlushFailedCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\FlushFailedCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/ForgetFailedCommand.html", "name": "Illuminate\\Queue\\Console\\ForgetFailedCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ForgetFailedCommand", "fromLink": "Illuminate/Queue/Console/ForgetFailedCommand.html", "link": "Illuminate/Queue/Console/ForgetFailedCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\ForgetFailedCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ForgetFailedCommand", "fromLink": "Illuminate/Queue/Console/ForgetFailedCommand.html", "link": "Illuminate/Queue/Console/ForgetFailedCommand.html#method_getArguments", "name": "Illuminate\\Queue\\Console\\ForgetFailedCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/ListFailedCommand.html", "name": "Illuminate\\Queue\\Console\\ListFailedCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ListFailedCommand", "fromLink": "Illuminate/Queue/Console/ListFailedCommand.html", "link": "Illuminate/Queue/Console/ListFailedCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\ListFailedCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ListFailedCommand", "fromLink": "Illuminate/Queue/Console/ListFailedCommand.html", "link": "Illuminate/Queue/Console/ListFailedCommand.html#method_parseFailedJob", "name": "Illuminate\\Queue\\Console\\ListFailedCommand::parseFailedJob", "doc": "&quot;Parse the failed job row.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/ListenCommand.html", "name": "Illuminate\\Queue\\Console\\ListenCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ListenCommand", "fromLink": "Illuminate/Queue/Console/ListenCommand.html", "link": "Illuminate/Queue/Console/ListenCommand.html#method___construct", "name": "Illuminate\\Queue\\Console\\ListenCommand::__construct", "doc": "&quot;Create a new queue listen command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ListenCommand", "fromLink": "Illuminate/Queue/Console/ListenCommand.html", "link": "Illuminate/Queue/Console/ListenCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\ListenCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ListenCommand", "fromLink": "Illuminate/Queue/Console/ListenCommand.html", "link": "Illuminate/Queue/Console/ListenCommand.html#method_getQueue", "name": "Illuminate\\Queue\\Console\\ListenCommand::getQueue", "doc": "&quot;Get the name of the queue connection to listen on.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ListenCommand", "fromLink": "Illuminate/Queue/Console/ListenCommand.html", "link": "Illuminate/Queue/Console/ListenCommand.html#method_setListenerOptions", "name": "Illuminate\\Queue\\Console\\ListenCommand::setListenerOptions", "doc": "&quot;Set the options on the queue listener.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ListenCommand", "fromLink": "Illuminate/Queue/Console/ListenCommand.html", "link": "Illuminate/Queue/Console/ListenCommand.html#method_getArguments", "name": "Illuminate\\Queue\\Console\\ListenCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\ListenCommand", "fromLink": "Illuminate/Queue/Console/ListenCommand.html", "link": "Illuminate/Queue/Console/ListenCommand.html#method_getOptions", "name": "Illuminate\\Queue\\Console\\ListenCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/RestartCommand.html", "name": "Illuminate\\Queue\\Console\\RestartCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\RestartCommand", "fromLink": "Illuminate/Queue/Console/RestartCommand.html", "link": "Illuminate/Queue/Console/RestartCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\RestartCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/RetryCommand.html", "name": "Illuminate\\Queue\\Console\\RetryCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\RetryCommand", "fromLink": "Illuminate/Queue/Console/RetryCommand.html", "link": "Illuminate/Queue/Console/RetryCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\RetryCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\RetryCommand", "fromLink": "Illuminate/Queue/Console/RetryCommand.html", "link": "Illuminate/Queue/Console/RetryCommand.html#method_resetAttempts", "name": "Illuminate\\Queue\\Console\\RetryCommand::resetAttempts", "doc": "&quot;Reset the payload attempts.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\RetryCommand", "fromLink": "Illuminate/Queue/Console/RetryCommand.html", "link": "Illuminate/Queue/Console/RetryCommand.html#method_getArguments", "name": "Illuminate\\Queue\\Console\\RetryCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html", "name": "Illuminate\\Queue\\Console\\SubscribeCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\SubscribeCommand", "fromLink": "Illuminate/Queue/Console/SubscribeCommand.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\SubscribeCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\SubscribeCommand", "fromLink": "Illuminate/Queue/Console/SubscribeCommand.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html#method_getQueueOptions", "name": "Illuminate\\Queue\\Console\\SubscribeCommand::getQueueOptions", "doc": "&quot;Get the queue options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\SubscribeCommand", "fromLink": "Illuminate/Queue/Console/SubscribeCommand.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html#method_getPushType", "name": "Illuminate\\Queue\\Console\\SubscribeCommand::getPushType", "doc": "&quot;Get the push type for the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\SubscribeCommand", "fromLink": "Illuminate/Queue/Console/SubscribeCommand.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html#method_getSubscriberList", "name": "Illuminate\\Queue\\Console\\SubscribeCommand::getSubscriberList", "doc": "&quot;Get the current subscribers for the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\SubscribeCommand", "fromLink": "Illuminate/Queue/Console/SubscribeCommand.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html#method_getCurrentSubscribers", "name": "Illuminate\\Queue\\Console\\SubscribeCommand::getCurrentSubscribers", "doc": "&quot;Get the current subscriber list.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\SubscribeCommand", "fromLink": "Illuminate/Queue/Console/SubscribeCommand.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html#method_getQueue", "name": "Illuminate\\Queue\\Console\\SubscribeCommand::getQueue", "doc": "&quot;Get the queue information from Iron.io.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\SubscribeCommand", "fromLink": "Illuminate/Queue/Console/SubscribeCommand.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html#method_getArguments", "name": "Illuminate\\Queue\\Console\\SubscribeCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\SubscribeCommand", "fromLink": "Illuminate/Queue/Console/SubscribeCommand.html", "link": "Illuminate/Queue/Console/SubscribeCommand.html#method_getOptions", "name": "Illuminate\\Queue\\Console\\SubscribeCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Console", "fromLink": "Illuminate/Queue/Console.html", "link": "Illuminate/Queue/Console/WorkCommand.html", "name": "Illuminate\\Queue\\Console\\WorkCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\WorkCommand", "fromLink": "Illuminate/Queue/Console/WorkCommand.html", "link": "Illuminate/Queue/Console/WorkCommand.html#method___construct", "name": "Illuminate\\Queue\\Console\\WorkCommand::__construct", "doc": "&quot;Create a new queue listen command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\WorkCommand", "fromLink": "Illuminate/Queue/Console/WorkCommand.html", "link": "Illuminate/Queue/Console/WorkCommand.html#method_fire", "name": "Illuminate\\Queue\\Console\\WorkCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\WorkCommand", "fromLink": "Illuminate/Queue/Console/WorkCommand.html", "link": "Illuminate/Queue/Console/WorkCommand.html#method_runWorker", "name": "Illuminate\\Queue\\Console\\WorkCommand::runWorker", "doc": "&quot;Run the worker instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\WorkCommand", "fromLink": "Illuminate/Queue/Console/WorkCommand.html", "link": "Illuminate/Queue/Console/WorkCommand.html#method_writeOutput", "name": "Illuminate\\Queue\\Console\\WorkCommand::writeOutput", "doc": "&quot;Write the status output for the queue worker.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\WorkCommand", "fromLink": "Illuminate/Queue/Console/WorkCommand.html", "link": "Illuminate/Queue/Console/WorkCommand.html#method_downForMaintenance", "name": "Illuminate\\Queue\\Console\\WorkCommand::downForMaintenance", "doc": "&quot;Determine if the worker should run in maintenance mode.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\WorkCommand", "fromLink": "Illuminate/Queue/Console/WorkCommand.html", "link": "Illuminate/Queue/Console/WorkCommand.html#method_getArguments", "name": "Illuminate\\Queue\\Console\\WorkCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Console\\WorkCommand", "fromLink": "Illuminate/Queue/Console/WorkCommand.html", "link": "Illuminate/Queue/Console/WorkCommand.html#method_getOptions", "name": "Illuminate\\Queue\\Console\\WorkCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/FailConsoleServiceProvider.html", "name": "Illuminate\\Queue\\FailConsoleServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\FailConsoleServiceProvider", "fromLink": "Illuminate/Queue/FailConsoleServiceProvider.html", "link": "Illuminate/Queue/FailConsoleServiceProvider.html#method_register", "name": "Illuminate\\Queue\\FailConsoleServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\FailConsoleServiceProvider", "fromLink": "Illuminate/Queue/FailConsoleServiceProvider.html", "link": "Illuminate/Queue/FailConsoleServiceProvider.html#method_provides", "name": "Illuminate\\Queue\\FailConsoleServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Failed", "fromLink": "Illuminate/Queue/Failed.html", "link": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html", "name": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider", "fromLink": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html", "link": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method___construct", "name": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::__construct", "doc": "&quot;Create a new database failed job provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider", "fromLink": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html", "link": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_log", "name": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::log", "doc": "&quot;Log a failed job into storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider", "fromLink": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html", "link": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_all", "name": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::all", "doc": "&quot;Get a list of all of the failed jobs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider", "fromLink": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html", "link": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_find", "name": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::find", "doc": "&quot;Get a single failed job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider", "fromLink": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html", "link": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_forget", "name": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::forget", "doc": "&quot;Delete a single failed job from storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider", "fromLink": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html", "link": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_flush", "name": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::flush", "doc": "&quot;Flush all of the failed jobs from storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider", "fromLink": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html", "link": "Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_getTable", "name": "Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::getTable", "doc": "&quot;Get a new query builder instance for the table.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Failed", "fromLink": "Illuminate/Queue/Failed.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_log", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::log", "doc": "&quot;Log a failed job into storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_all", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::all", "doc": "&quot;Get a list of all of the failed jobs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_find", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::find", "doc": "&quot;Get a single failed job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_forget", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::forget", "doc": "&quot;Delete a single failed job from storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface", "fromLink": "Illuminate/Queue/Failed/FailedJobProviderInterface.html", "link": "Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_flush", "name": "Illuminate\\Queue\\Failed\\FailedJobProviderInterface::flush", "doc": "&quot;Flush all of the failed jobs from storage.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/IronQueue.html", "name": "Illuminate\\Queue\\IronQueue", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method___construct", "name": "Illuminate\\Queue\\IronQueue::__construct", "doc": "&quot;Create a new IronMQ queue instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_push", "name": "Illuminate\\Queue\\IronQueue::push", "doc": "&quot;Push a new job onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_pushRaw", "name": "Illuminate\\Queue\\IronQueue::pushRaw", "doc": "&quot;Push a raw payload onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_recreate", "name": "Illuminate\\Queue\\IronQueue::recreate", "doc": "&quot;Push a raw payload onto the queue after encrypting the payload.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_later", "name": "Illuminate\\Queue\\IronQueue::later", "doc": "&quot;Push a new job onto the queue after a delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_pop", "name": "Illuminate\\Queue\\IronQueue::pop", "doc": "&quot;Pop the next job off of the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_deleteMessage", "name": "Illuminate\\Queue\\IronQueue::deleteMessage", "doc": "&quot;Delete a message from the Iron queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_marshal", "name": "Illuminate\\Queue\\IronQueue::marshal", "doc": "&quot;Marshal a push queue request and fire the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_marshalPushedJob", "name": "Illuminate\\Queue\\IronQueue::marshalPushedJob", "doc": "&quot;Marshal out the pushed job and payload.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_createPushedIronJob", "name": "Illuminate\\Queue\\IronQueue::createPushedIronJob", "doc": "&quot;Create a new IronJob for a pushed job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_createPayload", "name": "Illuminate\\Queue\\IronQueue::createPayload", "doc": "&quot;Create a payload string from the given job and data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_parseJobBody", "name": "Illuminate\\Queue\\IronQueue::parseJobBody", "doc": "&quot;Parse the job body for firing.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_getQueue", "name": "Illuminate\\Queue\\IronQueue::getQueue", "doc": "&quot;Get the queue or return the default.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_getIron", "name": "Illuminate\\Queue\\IronQueue::getIron", "doc": "&quot;Get the underlying IronMQ instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_getRequest", "name": "Illuminate\\Queue\\IronQueue::getRequest", "doc": "&quot;Get the request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\IronQueue", "fromLink": "Illuminate/Queue/IronQueue.html", "link": "Illuminate/Queue/IronQueue.html#method_setRequest", "name": "Illuminate\\Queue\\IronQueue::setRequest", "doc": "&quot;Set the request instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Jobs", "fromLink": "Illuminate/Queue/Jobs.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method___construct", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::__construct", "doc": "&quot;Create a new job instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_fire", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::fire", "doc": "&quot;Fire the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getRawBody", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::getRawBody", "doc": "&quot;Get the raw body string for the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_delete", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::delete", "doc": "&quot;Delete the job from the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_release", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::release", "doc": "&quot;Release the job back into the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_bury", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::bury", "doc": "&quot;Bury the job in the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_attempts", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::attempts", "doc": "&quot;Get the number of times the job has been attempted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getJobId", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::getJobId", "doc": "&quot;Get the job identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getContainer", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::getContainer", "doc": "&quot;Get the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getPheanstalk", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::getPheanstalk", "doc": "&quot;Get the underlying Pheanstalk instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\BeanstalkdJob", "fromLink": "Illuminate/Queue/Jobs/BeanstalkdJob.html", "link": "Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getPheanstalkJob", "name": "Illuminate\\Queue\\Jobs\\BeanstalkdJob::getPheanstalkJob", "doc": "&quot;Get the underlying Pheanstalk job.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Jobs", "fromLink": "Illuminate/Queue/Jobs.html", "link": "Illuminate/Queue/Jobs/IronJob.html", "name": "Illuminate\\Queue\\Jobs\\IronJob", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method___construct", "name": "Illuminate\\Queue\\Jobs\\IronJob::__construct", "doc": "&quot;Create a new job instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_fire", "name": "Illuminate\\Queue\\Jobs\\IronJob::fire", "doc": "&quot;Fire the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_getRawBody", "name": "Illuminate\\Queue\\Jobs\\IronJob::getRawBody", "doc": "&quot;Get the raw body string for the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_delete", "name": "Illuminate\\Queue\\Jobs\\IronJob::delete", "doc": "&quot;Delete the job from the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_release", "name": "Illuminate\\Queue\\Jobs\\IronJob::release", "doc": "&quot;Release the job back into the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_recreateJob", "name": "Illuminate\\Queue\\Jobs\\IronJob::recreateJob", "doc": "&quot;Release a pushed job back onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_attempts", "name": "Illuminate\\Queue\\Jobs\\IronJob::attempts", "doc": "&quot;Get the number of times the job has been attempted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_getJobId", "name": "Illuminate\\Queue\\Jobs\\IronJob::getJobId", "doc": "&quot;Get the job identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_getContainer", "name": "Illuminate\\Queue\\Jobs\\IronJob::getContainer", "doc": "&quot;Get the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_getIron", "name": "Illuminate\\Queue\\Jobs\\IronJob::getIron", "doc": "&quot;Get the underlying Iron queue instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_getIronJob", "name": "Illuminate\\Queue\\Jobs\\IronJob::getIronJob", "doc": "&quot;Get the underlying IronMQ job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\IronJob", "fromLink": "Illuminate/Queue/Jobs/IronJob.html", "link": "Illuminate/Queue/Jobs/IronJob.html#method_getQueue", "name": "Illuminate\\Queue\\Jobs\\IronJob::getQueue", "doc": "&quot;Get the name of the queue the job belongs to.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Jobs", "fromLink": "Illuminate/Queue/Jobs.html", "link": "Illuminate/Queue/Jobs/Job.html", "name": "Illuminate\\Queue\\Jobs\\Job", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_fire", "name": "Illuminate\\Queue\\Jobs\\Job::fire", "doc": "&quot;Fire the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_delete", "name": "Illuminate\\Queue\\Jobs\\Job::delete", "doc": "&quot;Delete the job from the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_isDeleted", "name": "Illuminate\\Queue\\Jobs\\Job::isDeleted", "doc": "&quot;Determine if the job has been deleted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_release", "name": "Illuminate\\Queue\\Jobs\\Job::release", "doc": "&quot;Release the job back into the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_attempts", "name": "Illuminate\\Queue\\Jobs\\Job::attempts", "doc": "&quot;Get the number of times the job has been attempted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_getRawBody", "name": "Illuminate\\Queue\\Jobs\\Job::getRawBody", "doc": "&quot;Get the raw body string for the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_resolveAndFire", "name": "Illuminate\\Queue\\Jobs\\Job::resolveAndFire", "doc": "&quot;Resolve and fire the job handler method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_resolve", "name": "Illuminate\\Queue\\Jobs\\Job::resolve", "doc": "&quot;Resolve the given job handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_parseJob", "name": "Illuminate\\Queue\\Jobs\\Job::parseJob", "doc": "&quot;Parse the job declaration into class and method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_autoDelete", "name": "Illuminate\\Queue\\Jobs\\Job::autoDelete", "doc": "&quot;Determine if job should be auto-deleted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_getSeconds", "name": "Illuminate\\Queue\\Jobs\\Job::getSeconds", "doc": "&quot;Calculate the number of seconds with the given delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_getTime", "name": "Illuminate\\Queue\\Jobs\\Job::getTime", "doc": "&quot;Get the current system time.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_getName", "name": "Illuminate\\Queue\\Jobs\\Job::getName", "doc": "&quot;Get the name of the queued job class.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\Job", "fromLink": "Illuminate/Queue/Jobs/Job.html", "link": "Illuminate/Queue/Jobs/Job.html#method_getQueue", "name": "Illuminate\\Queue\\Jobs\\Job::getQueue", "doc": "&quot;Get the name of the queue the job belongs to.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Jobs", "fromLink": "Illuminate/Queue/Jobs.html", "link": "Illuminate/Queue/Jobs/RedisJob.html", "name": "Illuminate\\Queue\\Jobs\\RedisJob", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method___construct", "name": "Illuminate\\Queue\\Jobs\\RedisJob::__construct", "doc": "&quot;Create a new job instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_fire", "name": "Illuminate\\Queue\\Jobs\\RedisJob::fire", "doc": "&quot;Fire the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_getRawBody", "name": "Illuminate\\Queue\\Jobs\\RedisJob::getRawBody", "doc": "&quot;Get the raw body string for the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_delete", "name": "Illuminate\\Queue\\Jobs\\RedisJob::delete", "doc": "&quot;Delete the job from the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_release", "name": "Illuminate\\Queue\\Jobs\\RedisJob::release", "doc": "&quot;Release the job back into the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_attempts", "name": "Illuminate\\Queue\\Jobs\\RedisJob::attempts", "doc": "&quot;Get the number of times the job has been attempted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_getJobId", "name": "Illuminate\\Queue\\Jobs\\RedisJob::getJobId", "doc": "&quot;Get the job identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_getContainer", "name": "Illuminate\\Queue\\Jobs\\RedisJob::getContainer", "doc": "&quot;Get the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_getRedisQueue", "name": "Illuminate\\Queue\\Jobs\\RedisJob::getRedisQueue", "doc": "&quot;Get the underlying queue driver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\RedisJob", "fromLink": "Illuminate/Queue/Jobs/RedisJob.html", "link": "Illuminate/Queue/Jobs/RedisJob.html#method_getRedisJob", "name": "Illuminate\\Queue\\Jobs\\RedisJob::getRedisJob", "doc": "&quot;Get the underlying Redis job.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Jobs", "fromLink": "Illuminate/Queue/Jobs.html", "link": "Illuminate/Queue/Jobs/SqsJob.html", "name": "Illuminate\\Queue\\Jobs\\SqsJob", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method___construct", "name": "Illuminate\\Queue\\Jobs\\SqsJob::__construct", "doc": "&quot;Create a new job instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_fire", "name": "Illuminate\\Queue\\Jobs\\SqsJob::fire", "doc": "&quot;Fire the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_getRawBody", "name": "Illuminate\\Queue\\Jobs\\SqsJob::getRawBody", "doc": "&quot;Get the raw body string for the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_delete", "name": "Illuminate\\Queue\\Jobs\\SqsJob::delete", "doc": "&quot;Delete the job from the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_release", "name": "Illuminate\\Queue\\Jobs\\SqsJob::release", "doc": "&quot;Release the job back into the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_attempts", "name": "Illuminate\\Queue\\Jobs\\SqsJob::attempts", "doc": "&quot;Get the number of times the job has been attempted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_getJobId", "name": "Illuminate\\Queue\\Jobs\\SqsJob::getJobId", "doc": "&quot;Get the job identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_getContainer", "name": "Illuminate\\Queue\\Jobs\\SqsJob::getContainer", "doc": "&quot;Get the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_getSqs", "name": "Illuminate\\Queue\\Jobs\\SqsJob::getSqs", "doc": "&quot;Get the underlying SQS client instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SqsJob", "fromLink": "Illuminate/Queue/Jobs/SqsJob.html", "link": "Illuminate/Queue/Jobs/SqsJob.html#method_getSqsJob", "name": "Illuminate\\Queue\\Jobs\\SqsJob::getSqsJob", "doc": "&quot;Get the underlying raw SQS job.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue\\Jobs", "fromLink": "Illuminate/Queue/Jobs.html", "link": "Illuminate/Queue/Jobs/SyncJob.html", "name": "Illuminate\\Queue\\Jobs\\SyncJob", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SyncJob", "fromLink": "Illuminate/Queue/Jobs/SyncJob.html", "link": "Illuminate/Queue/Jobs/SyncJob.html#method___construct", "name": "Illuminate\\Queue\\Jobs\\SyncJob::__construct", "doc": "&quot;Create a new job instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SyncJob", "fromLink": "Illuminate/Queue/Jobs/SyncJob.html", "link": "Illuminate/Queue/Jobs/SyncJob.html#method_fire", "name": "Illuminate\\Queue\\Jobs\\SyncJob::fire", "doc": "&quot;Fire the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SyncJob", "fromLink": "Illuminate/Queue/Jobs/SyncJob.html", "link": "Illuminate/Queue/Jobs/SyncJob.html#method_getRawBody", "name": "Illuminate\\Queue\\Jobs\\SyncJob::getRawBody", "doc": "&quot;Get the raw body string for the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SyncJob", "fromLink": "Illuminate/Queue/Jobs/SyncJob.html", "link": "Illuminate/Queue/Jobs/SyncJob.html#method_release", "name": "Illuminate\\Queue\\Jobs\\SyncJob::release", "doc": "&quot;Release the job back into the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SyncJob", "fromLink": "Illuminate/Queue/Jobs/SyncJob.html", "link": "Illuminate/Queue/Jobs/SyncJob.html#method_attempts", "name": "Illuminate\\Queue\\Jobs\\SyncJob::attempts", "doc": "&quot;Get the number of times the job has been attempted.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Jobs\\SyncJob", "fromLink": "Illuminate/Queue/Jobs/SyncJob.html", "link": "Illuminate/Queue/Jobs/SyncJob.html#method_getJobId", "name": "Illuminate\\Queue\\Jobs\\SyncJob::getJobId", "doc": "&quot;Get the job identifier.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/Listener.html", "name": "Illuminate\\Queue\\Listener", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method___construct", "name": "Illuminate\\Queue\\Listener::__construct", "doc": "&quot;Create a new queue listener.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_listen", "name": "Illuminate\\Queue\\Listener::listen", "doc": "&quot;Listen to the given queue connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_runProcess", "name": "Illuminate\\Queue\\Listener::runProcess", "doc": "&quot;Run the given process.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_makeProcess", "name": "Illuminate\\Queue\\Listener::makeProcess", "doc": "&quot;Create a new Symfony process for the worker.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_handleWorkerOutput", "name": "Illuminate\\Queue\\Listener::handleWorkerOutput", "doc": "&quot;Handle output from the worker process.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_memoryExceeded", "name": "Illuminate\\Queue\\Listener::memoryExceeded", "doc": "&quot;Determine if the memory limit has been exceeded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_stop", "name": "Illuminate\\Queue\\Listener::stop", "doc": "&quot;Stop listening and bail out of the script.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_setOutputHandler", "name": "Illuminate\\Queue\\Listener::setOutputHandler", "doc": "&quot;Set the output handler callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_getEnvironment", "name": "Illuminate\\Queue\\Listener::getEnvironment", "doc": "&quot;Get the current listener environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_setEnvironment", "name": "Illuminate\\Queue\\Listener::setEnvironment", "doc": "&quot;Set the current environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_getSleep", "name": "Illuminate\\Queue\\Listener::getSleep", "doc": "&quot;Get the amount of seconds to wait before polling the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_setSleep", "name": "Illuminate\\Queue\\Listener::setSleep", "doc": "&quot;Set the amount of seconds to wait before polling the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Listener", "fromLink": "Illuminate/Queue/Listener.html", "link": "Illuminate/Queue/Listener.html#method_setMaxTries", "name": "Illuminate\\Queue\\Listener::setMaxTries", "doc": "&quot;Set the amount of times to try a job before logging it failed.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/Queue.html", "name": "Illuminate\\Queue\\Queue", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_marshal", "name": "Illuminate\\Queue\\Queue::marshal", "doc": "&quot;Marshal a push queue request and fire the job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_bulk", "name": "Illuminate\\Queue\\Queue::bulk", "doc": "&quot;Push an array of jobs onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_createPayload", "name": "Illuminate\\Queue\\Queue::createPayload", "doc": "&quot;Create a payload string from the given job and data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_createClosurePayload", "name": "Illuminate\\Queue\\Queue::createClosurePayload", "doc": "&quot;Create a payload string for the given Closure job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_setMeta", "name": "Illuminate\\Queue\\Queue::setMeta", "doc": "&quot;Set additional meta on a payload string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_getSeconds", "name": "Illuminate\\Queue\\Queue::getSeconds", "doc": "&quot;Calculate the number of seconds with the given delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_getTime", "name": "Illuminate\\Queue\\Queue::getTime", "doc": "&quot;Get the current UNIX timestamp.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_setContainer", "name": "Illuminate\\Queue\\Queue::setContainer", "doc": "&quot;Set the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Queue", "fromLink": "Illuminate/Queue/Queue.html", "link": "Illuminate/Queue/Queue.html#method_setEncrypter", "name": "Illuminate\\Queue\\Queue::setEncrypter", "doc": "&quot;Set the encrypter instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/QueueInterface.html", "name": "Illuminate\\Queue\\QueueInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\QueueInterface", "fromLink": "Illuminate/Queue/QueueInterface.html", "link": "Illuminate/Queue/QueueInterface.html#method_push", "name": "Illuminate\\Queue\\QueueInterface::push", "doc": "&quot;Push a new job onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueInterface", "fromLink": "Illuminate/Queue/QueueInterface.html", "link": "Illuminate/Queue/QueueInterface.html#method_pushRaw", "name": "Illuminate\\Queue\\QueueInterface::pushRaw", "doc": "&quot;Push a raw payload onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueInterface", "fromLink": "Illuminate/Queue/QueueInterface.html", "link": "Illuminate/Queue/QueueInterface.html#method_later", "name": "Illuminate\\Queue\\QueueInterface::later", "doc": "&quot;Push a new job onto the queue after a delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueInterface", "fromLink": "Illuminate/Queue/QueueInterface.html", "link": "Illuminate/Queue/QueueInterface.html#method_pop", "name": "Illuminate\\Queue\\QueueInterface::pop", "doc": "&quot;Pop the next job off of the queue.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/QueueManager.html", "name": "Illuminate\\Queue\\QueueManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method___construct", "name": "Illuminate\\Queue\\QueueManager::__construct", "doc": "&quot;Create a new queue manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_looping", "name": "Illuminate\\Queue\\QueueManager::looping", "doc": "&quot;Register an event listener for the daemon queue loop.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_failing", "name": "Illuminate\\Queue\\QueueManager::failing", "doc": "&quot;Register an event listener for the failed job event.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_stopping", "name": "Illuminate\\Queue\\QueueManager::stopping", "doc": "&quot;Register an event listener for the daemon queue stopping.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_connected", "name": "Illuminate\\Queue\\QueueManager::connected", "doc": "&quot;Determine if the driver is connected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_connection", "name": "Illuminate\\Queue\\QueueManager::connection", "doc": "&quot;Resolve a queue connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_resolve", "name": "Illuminate\\Queue\\QueueManager::resolve", "doc": "&quot;Resolve a queue connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_getConnector", "name": "Illuminate\\Queue\\QueueManager::getConnector", "doc": "&quot;Get the connector for a given driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_extend", "name": "Illuminate\\Queue\\QueueManager::extend", "doc": "&quot;Add a queue connection resolver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_addConnector", "name": "Illuminate\\Queue\\QueueManager::addConnector", "doc": "&quot;Add a queue connection resolver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_getConfig", "name": "Illuminate\\Queue\\QueueManager::getConfig", "doc": "&quot;Get the queue connection configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_getDefaultDriver", "name": "Illuminate\\Queue\\QueueManager::getDefaultDriver", "doc": "&quot;Get the name of the default queue connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_setDefaultDriver", "name": "Illuminate\\Queue\\QueueManager::setDefaultDriver", "doc": "&quot;Set the name of the default queue connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_getName", "name": "Illuminate\\Queue\\QueueManager::getName", "doc": "&quot;Get the full name for the given connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method_isDownForMaintenance", "name": "Illuminate\\Queue\\QueueManager::isDownForMaintenance", "doc": "&quot;Determine if the application is in maintenance mode.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueManager", "fromLink": "Illuminate/Queue/QueueManager.html", "link": "Illuminate/Queue/QueueManager.html#method___call", "name": "Illuminate\\Queue\\QueueManager::__call", "doc": "&quot;Dynamically pass calls to the default connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/QueueServiceProvider.html", "name": "Illuminate\\Queue\\QueueServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_register", "name": "Illuminate\\Queue\\QueueServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerManager", "name": "Illuminate\\Queue\\QueueServiceProvider::registerManager", "doc": "&quot;Register the queue manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerWorker", "name": "Illuminate\\Queue\\QueueServiceProvider::registerWorker", "doc": "&quot;Register the queue worker.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerWorkCommand", "name": "Illuminate\\Queue\\QueueServiceProvider::registerWorkCommand", "doc": "&quot;Register the queue worker console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerListener", "name": "Illuminate\\Queue\\QueueServiceProvider::registerListener", "doc": "&quot;Register the queue listener.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerListenCommand", "name": "Illuminate\\Queue\\QueueServiceProvider::registerListenCommand", "doc": "&quot;Register the queue listener console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerRestartCommand", "name": "Illuminate\\Queue\\QueueServiceProvider::registerRestartCommand", "doc": "&quot;Register the queue restart console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerSubscriber", "name": "Illuminate\\Queue\\QueueServiceProvider::registerSubscriber", "doc": "&quot;Register the push queue subscribe command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerConnectors", "name": "Illuminate\\Queue\\QueueServiceProvider::registerConnectors", "doc": "&quot;Register the connectors on the queue manager.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerSyncConnector", "name": "Illuminate\\Queue\\QueueServiceProvider::registerSyncConnector", "doc": "&quot;Register the Sync queue connector.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerBeanstalkdConnector", "name": "Illuminate\\Queue\\QueueServiceProvider::registerBeanstalkdConnector", "doc": "&quot;Register the Beanstalkd queue connector.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerRedisConnector", "name": "Illuminate\\Queue\\QueueServiceProvider::registerRedisConnector", "doc": "&quot;Register the Redis queue connector.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerSqsConnector", "name": "Illuminate\\Queue\\QueueServiceProvider::registerSqsConnector", "doc": "&quot;Register the Amazon SQS queue connector.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerIronConnector", "name": "Illuminate\\Queue\\QueueServiceProvider::registerIronConnector", "doc": "&quot;Register the IronMQ queue connector.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerIronRequestBinder", "name": "Illuminate\\Queue\\QueueServiceProvider::registerIronRequestBinder", "doc": "&quot;Register the request rebinding event for the Iron queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerFailedJobServices", "name": "Illuminate\\Queue\\QueueServiceProvider::registerFailedJobServices", "doc": "&quot;Register the failed job services.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_registerQueueClosure", "name": "Illuminate\\Queue\\QueueServiceProvider::registerQueueClosure", "doc": "&quot;Register the Illuminate queued closure job.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\QueueServiceProvider", "fromLink": "Illuminate/Queue/QueueServiceProvider.html", "link": "Illuminate/Queue/QueueServiceProvider.html#method_provides", "name": "Illuminate\\Queue\\QueueServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/RedisQueue.html", "name": "Illuminate\\Queue\\RedisQueue", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method___construct", "name": "Illuminate\\Queue\\RedisQueue::__construct", "doc": "&quot;Create a new Redis queue instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_push", "name": "Illuminate\\Queue\\RedisQueue::push", "doc": "&quot;Push a new job onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_pushRaw", "name": "Illuminate\\Queue\\RedisQueue::pushRaw", "doc": "&quot;Push a raw payload onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_later", "name": "Illuminate\\Queue\\RedisQueue::later", "doc": "&quot;Push a new job onto the queue after a delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_release", "name": "Illuminate\\Queue\\RedisQueue::release", "doc": "&quot;Release a reserved job back onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_pop", "name": "Illuminate\\Queue\\RedisQueue::pop", "doc": "&quot;Pop the next job off of the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_deleteReserved", "name": "Illuminate\\Queue\\RedisQueue::deleteReserved", "doc": "&quot;Delete a reserved job from the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_migrateAllExpiredJobs", "name": "Illuminate\\Queue\\RedisQueue::migrateAllExpiredJobs", "doc": "&quot;Migrate all of the waiting jobs in the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_migrateExpiredJobs", "name": "Illuminate\\Queue\\RedisQueue::migrateExpiredJobs", "doc": "&quot;Migrate the delayed jobs that are ready to the regular queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_getExpiredJobs", "name": "Illuminate\\Queue\\RedisQueue::getExpiredJobs", "doc": "&quot;Get the expired jobs from a given queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_removeExpiredJobs", "name": "Illuminate\\Queue\\RedisQueue::removeExpiredJobs", "doc": "&quot;Remove the expired jobs from a given queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_pushExpiredJobsOntoNewQueue", "name": "Illuminate\\Queue\\RedisQueue::pushExpiredJobsOntoNewQueue", "doc": "&quot;Push all of the given jobs onto another queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_createPayload", "name": "Illuminate\\Queue\\RedisQueue::createPayload", "doc": "&quot;Create a payload string from the given job and data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_getRandomId", "name": "Illuminate\\Queue\\RedisQueue::getRandomId", "doc": "&quot;Get a random ID string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_getQueue", "name": "Illuminate\\Queue\\RedisQueue::getQueue", "doc": "&quot;Get the queue or return the default.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_getConnection", "name": "Illuminate\\Queue\\RedisQueue::getConnection", "doc": "&quot;Get the connection for the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_getRedis", "name": "Illuminate\\Queue\\RedisQueue::getRedis", "doc": "&quot;Get the underlying Redis instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_getExpire", "name": "Illuminate\\Queue\\RedisQueue::getExpire", "doc": "&quot;Get the expiration time in seconds.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\RedisQueue", "fromLink": "Illuminate/Queue/RedisQueue.html", "link": "Illuminate/Queue/RedisQueue.html#method_setExpire", "name": "Illuminate\\Queue\\RedisQueue::setExpire", "doc": "&quot;Set the expiration time in seconds.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/SqsQueue.html", "name": "Illuminate\\Queue\\SqsQueue", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\SqsQueue", "fromLink": "Illuminate/Queue/SqsQueue.html", "link": "Illuminate/Queue/SqsQueue.html#method___construct", "name": "Illuminate\\Queue\\SqsQueue::__construct", "doc": "&quot;Create a new Amazon SQS queue instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SqsQueue", "fromLink": "Illuminate/Queue/SqsQueue.html", "link": "Illuminate/Queue/SqsQueue.html#method_push", "name": "Illuminate\\Queue\\SqsQueue::push", "doc": "&quot;Push a new job onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SqsQueue", "fromLink": "Illuminate/Queue/SqsQueue.html", "link": "Illuminate/Queue/SqsQueue.html#method_pushRaw", "name": "Illuminate\\Queue\\SqsQueue::pushRaw", "doc": "&quot;Push a raw payload onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SqsQueue", "fromLink": "Illuminate/Queue/SqsQueue.html", "link": "Illuminate/Queue/SqsQueue.html#method_later", "name": "Illuminate\\Queue\\SqsQueue::later", "doc": "&quot;Push a new job onto the queue after a delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SqsQueue", "fromLink": "Illuminate/Queue/SqsQueue.html", "link": "Illuminate/Queue/SqsQueue.html#method_pop", "name": "Illuminate\\Queue\\SqsQueue::pop", "doc": "&quot;Pop the next job off of the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SqsQueue", "fromLink": "Illuminate/Queue/SqsQueue.html", "link": "Illuminate/Queue/SqsQueue.html#method_getQueue", "name": "Illuminate\\Queue\\SqsQueue::getQueue", "doc": "&quot;Get the queue or return the default.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SqsQueue", "fromLink": "Illuminate/Queue/SqsQueue.html", "link": "Illuminate/Queue/SqsQueue.html#method_getSqs", "name": "Illuminate\\Queue\\SqsQueue::getSqs", "doc": "&quot;Get the underlying SQS instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/SyncQueue.html", "name": "Illuminate\\Queue\\SyncQueue", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\SyncQueue", "fromLink": "Illuminate/Queue/SyncQueue.html", "link": "Illuminate/Queue/SyncQueue.html#method_push", "name": "Illuminate\\Queue\\SyncQueue::push", "doc": "&quot;Push a new job onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SyncQueue", "fromLink": "Illuminate/Queue/SyncQueue.html", "link": "Illuminate/Queue/SyncQueue.html#method_pushRaw", "name": "Illuminate\\Queue\\SyncQueue::pushRaw", "doc": "&quot;Push a raw payload onto the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SyncQueue", "fromLink": "Illuminate/Queue/SyncQueue.html", "link": "Illuminate/Queue/SyncQueue.html#method_later", "name": "Illuminate\\Queue\\SyncQueue::later", "doc": "&quot;Push a new job onto the queue after a delay.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SyncQueue", "fromLink": "Illuminate/Queue/SyncQueue.html", "link": "Illuminate/Queue/SyncQueue.html#method_pop", "name": "Illuminate\\Queue\\SyncQueue::pop", "doc": "&quot;Pop the next job off of the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\SyncQueue", "fromLink": "Illuminate/Queue/SyncQueue.html", "link": "Illuminate/Queue/SyncQueue.html#method_resolveJob", "name": "Illuminate\\Queue\\SyncQueue::resolveJob", "doc": "&quot;Resolve a Sync job instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Queue", "fromLink": "Illuminate/Queue.html", "link": "Illuminate/Queue/Worker.html", "name": "Illuminate\\Queue\\Worker", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method___construct", "name": "Illuminate\\Queue\\Worker::__construct", "doc": "&quot;Create a new queue worker.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_daemon", "name": "Illuminate\\Queue\\Worker::daemon", "doc": "&quot;Listen to the given queue in a loop.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_runNextJobForDaemon", "name": "Illuminate\\Queue\\Worker::runNextJobForDaemon", "doc": "&quot;Run the next job for the daemon worker.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_daemonShouldRun", "name": "Illuminate\\Queue\\Worker::daemonShouldRun", "doc": "&quot;Determine if the daemon should process on this iteration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_pop", "name": "Illuminate\\Queue\\Worker::pop", "doc": "&quot;Listen to the given queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_getNextJob", "name": "Illuminate\\Queue\\Worker::getNextJob", "doc": "&quot;Get the next job from the queue connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_process", "name": "Illuminate\\Queue\\Worker::process", "doc": "&quot;Process a given job from the queue.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_logFailedJob", "name": "Illuminate\\Queue\\Worker::logFailedJob", "doc": "&quot;Log a failed job into storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_raiseFailedJobEvent", "name": "Illuminate\\Queue\\Worker::raiseFailedJobEvent", "doc": "&quot;Raise the failed queue job event.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_memoryExceeded", "name": "Illuminate\\Queue\\Worker::memoryExceeded", "doc": "&quot;Determine if the memory limit has been exceeded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_stop", "name": "Illuminate\\Queue\\Worker::stop", "doc": "&quot;Stop listening and bail out of the script.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_sleep", "name": "Illuminate\\Queue\\Worker::sleep", "doc": "&quot;Sleep the script for a given number of seconds.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_getTimestampOfLastQueueRestart", "name": "Illuminate\\Queue\\Worker::getTimestampOfLastQueueRestart", "doc": "&quot;Get the last queue restart timestamp, or null.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_queueShouldRestart", "name": "Illuminate\\Queue\\Worker::queueShouldRestart", "doc": "&quot;Determine if the queue worker should restart.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_setDaemonExceptionHandler", "name": "Illuminate\\Queue\\Worker::setDaemonExceptionHandler", "doc": "&quot;Set the exception handler to use in Daemon mode.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_setCache", "name": "Illuminate\\Queue\\Worker::setCache", "doc": "&quot;Set the cache repository implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_getManager", "name": "Illuminate\\Queue\\Worker::getManager", "doc": "&quot;Get the queue manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Queue\\Worker", "fromLink": "Illuminate/Queue/Worker.html", "link": "Illuminate/Queue/Worker.html#method_setManager", "name": "Illuminate\\Queue\\Worker::setManager", "doc": "&quot;Set the queue manager instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Redis", "fromLink": "Illuminate/Redis.html", "link": "Illuminate/Redis/Database.html", "name": "Illuminate\\Redis\\Database", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Redis\\Database", "fromLink": "Illuminate/Redis/Database.html", "link": "Illuminate/Redis/Database.html#method___construct", "name": "Illuminate\\Redis\\Database::__construct", "doc": "&quot;Create a new Redis connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Redis\\Database", "fromLink": "Illuminate/Redis/Database.html", "link": "Illuminate/Redis/Database.html#method_createAggregateClient", "name": "Illuminate\\Redis\\Database::createAggregateClient", "doc": "&quot;Create a new aggregate client supporting sharding.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Redis\\Database", "fromLink": "Illuminate/Redis/Database.html", "link": "Illuminate/Redis/Database.html#method_createSingleClients", "name": "Illuminate\\Redis\\Database::createSingleClients", "doc": "&quot;Create an array of single connection clients.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Redis\\Database", "fromLink": "Illuminate/Redis/Database.html", "link": "Illuminate/Redis/Database.html#method_connection", "name": "Illuminate\\Redis\\Database::connection", "doc": "&quot;Get a specific Redis connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Redis\\Database", "fromLink": "Illuminate/Redis/Database.html", "link": "Illuminate/Redis/Database.html#method_command", "name": "Illuminate\\Redis\\Database::command", "doc": "&quot;Run a command against the Redis database.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Redis\\Database", "fromLink": "Illuminate/Redis/Database.html", "link": "Illuminate/Redis/Database.html#method___call", "name": "Illuminate\\Redis\\Database::__call", "doc": "&quot;Dynamically make a Redis command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Redis", "fromLink": "Illuminate/Redis.html", "link": "Illuminate/Redis/RedisServiceProvider.html", "name": "Illuminate\\Redis\\RedisServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Redis\\RedisServiceProvider", "fromLink": "Illuminate/Redis/RedisServiceProvider.html", "link": "Illuminate/Redis/RedisServiceProvider.html#method_register", "name": "Illuminate\\Redis\\RedisServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Redis\\RedisServiceProvider", "fromLink": "Illuminate/Redis/RedisServiceProvider.html", "link": "Illuminate/Redis/RedisServiceProvider.html#method_provides", "name": "Illuminate\\Redis\\RedisServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/Connection.html", "name": "Illuminate\\Remote\\Connection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method___construct", "name": "Illuminate\\Remote\\Connection::__construct", "doc": "&quot;Create a new SSH connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_define", "name": "Illuminate\\Remote\\Connection::define", "doc": "&quot;Define a set of commands as a task.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_task", "name": "Illuminate\\Remote\\Connection::task", "doc": "&quot;Run a task against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_run", "name": "Illuminate\\Remote\\Connection::run", "doc": "&quot;Run a set of commands against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_get", "name": "Illuminate\\Remote\\Connection::get", "doc": "&quot;Download the contents of a remote file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_getString", "name": "Illuminate\\Remote\\Connection::getString", "doc": "&quot;Get the contents of a remote file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_put", "name": "Illuminate\\Remote\\Connection::put", "doc": "&quot;Upload a local file to the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_putString", "name": "Illuminate\\Remote\\Connection::putString", "doc": "&quot;Upload a string to to the given file on the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_display", "name": "Illuminate\\Remote\\Connection::display", "doc": "&quot;Display the given line using the default output.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_formatCommands", "name": "Illuminate\\Remote\\Connection::formatCommands", "doc": "&quot;Format the given command set.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_getCallback", "name": "Illuminate\\Remote\\Connection::getCallback", "doc": "&quot;Get the display callback for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_status", "name": "Illuminate\\Remote\\Connection::status", "doc": "&quot;Get the exit status of the last command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_getGateway", "name": "Illuminate\\Remote\\Connection::getGateway", "doc": "&quot;Get the gateway implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_getOutput", "name": "Illuminate\\Remote\\Connection::getOutput", "doc": "&quot;Get the output implementation for the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\Connection", "fromLink": "Illuminate/Remote/Connection.html", "link": "Illuminate/Remote/Connection.html#method_setOutput", "name": "Illuminate\\Remote\\Connection::setOutput", "doc": "&quot;Set the output implementation.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/ConnectionInterface.html", "name": "Illuminate\\Remote\\ConnectionInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_define", "name": "Illuminate\\Remote\\ConnectionInterface::define", "doc": "&quot;Define a set of commands as a task.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_task", "name": "Illuminate\\Remote\\ConnectionInterface::task", "doc": "&quot;Run a task against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_run", "name": "Illuminate\\Remote\\ConnectionInterface::run", "doc": "&quot;Run a set of commands against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_put", "name": "Illuminate\\Remote\\ConnectionInterface::put", "doc": "&quot;Upload a local file to the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\ConnectionInterface", "fromLink": "Illuminate/Remote/ConnectionInterface.html", "link": "Illuminate/Remote/ConnectionInterface.html#method_putString", "name": "Illuminate\\Remote\\ConnectionInterface::putString", "doc": "&quot;Upload a string to to the given file on the server.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/GatewayInterface.html", "name": "Illuminate\\Remote\\GatewayInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_connect", "name": "Illuminate\\Remote\\GatewayInterface::connect", "doc": "&quot;Connect to the SSH server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_connected", "name": "Illuminate\\Remote\\GatewayInterface::connected", "doc": "&quot;Determine if the gateway is connected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_run", "name": "Illuminate\\Remote\\GatewayInterface::run", "doc": "&quot;Run a command against the server (non-blocking).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_put", "name": "Illuminate\\Remote\\GatewayInterface::put", "doc": "&quot;Upload a local file to the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_putString", "name": "Illuminate\\Remote\\GatewayInterface::putString", "doc": "&quot;Upload a string to to the given file on the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_nextLine", "name": "Illuminate\\Remote\\GatewayInterface::nextLine", "doc": "&quot;Get the next line of output from the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\GatewayInterface", "fromLink": "Illuminate/Remote/GatewayInterface.html", "link": "Illuminate/Remote/GatewayInterface.html#method_status", "name": "Illuminate\\Remote\\GatewayInterface::status", "doc": "&quot;Get the exit status of the last command.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/MultiConnection.html", "name": "Illuminate\\Remote\\MultiConnection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\MultiConnection", "fromLink": "Illuminate/Remote/MultiConnection.html", "link": "Illuminate/Remote/MultiConnection.html#method___construct", "name": "Illuminate\\Remote\\MultiConnection::__construct", "doc": "&quot;The array of connections.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\MultiConnection", "fromLink": "Illuminate/Remote/MultiConnection.html", "link": "Illuminate/Remote/MultiConnection.html#method_define", "name": "Illuminate\\Remote\\MultiConnection::define", "doc": "&quot;Define a set of commands as a task.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\MultiConnection", "fromLink": "Illuminate/Remote/MultiConnection.html", "link": "Illuminate/Remote/MultiConnection.html#method_task", "name": "Illuminate\\Remote\\MultiConnection::task", "doc": "&quot;Run a task against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\MultiConnection", "fromLink": "Illuminate/Remote/MultiConnection.html", "link": "Illuminate/Remote/MultiConnection.html#method_run", "name": "Illuminate\\Remote\\MultiConnection::run", "doc": "&quot;Run a set of commands against the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\MultiConnection", "fromLink": "Illuminate/Remote/MultiConnection.html", "link": "Illuminate/Remote/MultiConnection.html#method_put", "name": "Illuminate\\Remote\\MultiConnection::put", "doc": "&quot;Upload a local file to the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\MultiConnection", "fromLink": "Illuminate/Remote/MultiConnection.html", "link": "Illuminate/Remote/MultiConnection.html#method_putString", "name": "Illuminate\\Remote\\MultiConnection::putString", "doc": "&quot;Upload a string to to the given file on the server.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/RemoteManager.html", "name": "Illuminate\\Remote\\RemoteManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method___construct", "name": "Illuminate\\Remote\\RemoteManager::__construct", "doc": "&quot;Create a new remote manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_into", "name": "Illuminate\\Remote\\RemoteManager::into", "doc": "&quot;Get a remote connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_connection", "name": "Illuminate\\Remote\\RemoteManager::connection", "doc": "&quot;Get a remote connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_group", "name": "Illuminate\\Remote\\RemoteManager::group", "doc": "&quot;Get a connection group instance by name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_multiple", "name": "Illuminate\\Remote\\RemoteManager::multiple", "doc": "&quot;Resolve a multiple connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_resolve", "name": "Illuminate\\Remote\\RemoteManager::resolve", "doc": "&quot;Resolve a remote connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_makeConnection", "name": "Illuminate\\Remote\\RemoteManager::makeConnection", "doc": "&quot;Make a new connection instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_setOutput", "name": "Illuminate\\Remote\\RemoteManager::setOutput", "doc": "&quot;Set the output implementation on the connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_getAuth", "name": "Illuminate\\Remote\\RemoteManager::getAuth", "doc": "&quot;Format the appropriate authentication array payload.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_getConfig", "name": "Illuminate\\Remote\\RemoteManager::getConfig", "doc": "&quot;Get the configuration for a remote server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_getDefaultConnection", "name": "Illuminate\\Remote\\RemoteManager::getDefaultConnection", "doc": "&quot;Get the default connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method_setDefaultConnection", "name": "Illuminate\\Remote\\RemoteManager::setDefaultConnection", "doc": "&quot;Set the default connection name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteManager", "fromLink": "Illuminate/Remote/RemoteManager.html", "link": "Illuminate/Remote/RemoteManager.html#method___call", "name": "Illuminate\\Remote\\RemoteManager::__call", "doc": "&quot;Dynamically pass methods to the default connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/RemoteServiceProvider.html", "name": "Illuminate\\Remote\\RemoteServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteServiceProvider", "fromLink": "Illuminate/Remote/RemoteServiceProvider.html", "link": "Illuminate/Remote/RemoteServiceProvider.html#method_register", "name": "Illuminate\\Remote\\RemoteServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\RemoteServiceProvider", "fromLink": "Illuminate/Remote/RemoteServiceProvider.html", "link": "Illuminate/Remote/RemoteServiceProvider.html#method_provides", "name": "Illuminate\\Remote\\RemoteServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Remote", "fromLink": "Illuminate/Remote.html", "link": "Illuminate/Remote/SecLibGateway.html", "name": "Illuminate\\Remote\\SecLibGateway", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method___construct", "name": "Illuminate\\Remote\\SecLibGateway::__construct", "doc": "&quot;Create a new gateway implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_setHostAndPort", "name": "Illuminate\\Remote\\SecLibGateway::setHostAndPort", "doc": "&quot;Set the host and port from a full host string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_connect", "name": "Illuminate\\Remote\\SecLibGateway::connect", "doc": "&quot;Connect to the SSH server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_connected", "name": "Illuminate\\Remote\\SecLibGateway::connected", "doc": "&quot;Determine if the gateway is connected.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_run", "name": "Illuminate\\Remote\\SecLibGateway::run", "doc": "&quot;Run a command against the server (non-blocking).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_get", "name": "Illuminate\\Remote\\SecLibGateway::get", "doc": "&quot;Download the contents of a remote file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_getString", "name": "Illuminate\\Remote\\SecLibGateway::getString", "doc": "&quot;Get the contents of a remote file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_put", "name": "Illuminate\\Remote\\SecLibGateway::put", "doc": "&quot;Upload a local file to the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_putString", "name": "Illuminate\\Remote\\SecLibGateway::putString", "doc": "&quot;Upload a string to to the given file on the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_nextLine", "name": "Illuminate\\Remote\\SecLibGateway::nextLine", "doc": "&quot;Get the next line of output from the server.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_getAuthForLogin", "name": "Illuminate\\Remote\\SecLibGateway::getAuthForLogin", "doc": "&quot;Get the authentication object for login.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_hasRsaKey", "name": "Illuminate\\Remote\\SecLibGateway::hasRsaKey", "doc": "&quot;Determine if an RSA key is configured.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_loadRsaKey", "name": "Illuminate\\Remote\\SecLibGateway::loadRsaKey", "doc": "&quot;Load the RSA key instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_readRsaKey", "name": "Illuminate\\Remote\\SecLibGateway::readRsaKey", "doc": "&quot;Read the contents of the RSA key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_getKey", "name": "Illuminate\\Remote\\SecLibGateway::getKey", "doc": "&quot;Create a new RSA key instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_useAgent", "name": "Illuminate\\Remote\\SecLibGateway::useAgent", "doc": "&quot;Determine if the SSH Agent should provide an RSA key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_getAgent", "name": "Illuminate\\Remote\\SecLibGateway::getAgent", "doc": "&quot;Get a new SSH Agent instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_getNewKey", "name": "Illuminate\\Remote\\SecLibGateway::getNewKey", "doc": "&quot;Get a new RSA key instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_status", "name": "Illuminate\\Remote\\SecLibGateway::status", "doc": "&quot;Get the exit status of the last command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_getHost", "name": "Illuminate\\Remote\\SecLibGateway::getHost", "doc": "&quot;Get the host used by the gateway.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_getPort", "name": "Illuminate\\Remote\\SecLibGateway::getPort", "doc": "&quot;Get the port used by the gateway.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Remote\\SecLibGateway", "fromLink": "Illuminate/Remote/SecLibGateway.html", "link": "Illuminate/Remote/SecLibGateway.html#method_getConnection", "name": "Illuminate\\Remote\\SecLibGateway::getConnection", "doc": "&quot;Get the underlying Net_SFTP connection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing\\Console", "fromLink": "Illuminate/Routing/Console.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method___construct", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::__construct", "doc": "&quot;Create a new make controller command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method_fire", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method_generateController", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::generateController", "doc": "&quot;Generate a new resourceful controller file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method_getPath", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::getPath", "doc": "&quot;Get the path in which to store the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method_getWorkbenchPath", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::getWorkbenchPath", "doc": "&quot;Get the workbench path for the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method_getBuildOptions", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::getBuildOptions", "doc": "&quot;Get the options for controller generation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method_explodeOption", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::explodeOption", "doc": "&quot;Get and explode a given input option.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method_getArguments", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Console\\MakeControllerCommand", "fromLink": "Illuminate/Routing/Console/MakeControllerCommand.html", "link": "Illuminate/Routing/Console/MakeControllerCommand.html#method_getOptions", "name": "Illuminate\\Routing\\Console\\MakeControllerCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/Controller.html", "name": "Illuminate\\Routing\\Controller", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_beforeFilter", "name": "Illuminate\\Routing\\Controller::beforeFilter", "doc": "&quot;Register a \&quot;before\&quot; filter on the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_afterFilter", "name": "Illuminate\\Routing\\Controller::afterFilter", "doc": "&quot;Register an \&quot;after\&quot; filter on the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_parseFilter", "name": "Illuminate\\Routing\\Controller::parseFilter", "doc": "&quot;Parse the given filter and options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_registerClosureFilter", "name": "Illuminate\\Routing\\Controller::registerClosureFilter", "doc": "&quot;Register an anonymous controller filter Closure.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_registerInstanceFilter", "name": "Illuminate\\Routing\\Controller::registerInstanceFilter", "doc": "&quot;Register a controller instance method as a filter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_isInstanceFilter", "name": "Illuminate\\Routing\\Controller::isInstanceFilter", "doc": "&quot;Determine if a filter is a local method on the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_forgetBeforeFilter", "name": "Illuminate\\Routing\\Controller::forgetBeforeFilter", "doc": "&quot;Remove the given before filter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_forgetAfterFilter", "name": "Illuminate\\Routing\\Controller::forgetAfterFilter", "doc": "&quot;Remove the given after filter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_removeFilter", "name": "Illuminate\\Routing\\Controller::removeFilter", "doc": "&quot;Remove the given controller filter from the provided filter array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_getBeforeFilters", "name": "Illuminate\\Routing\\Controller::getBeforeFilters", "doc": "&quot;Get the registered \&quot;before\&quot; filters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_getAfterFilters", "name": "Illuminate\\Routing\\Controller::getAfterFilters", "doc": "&quot;Get the registered \&quot;after\&quot; filters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_getFilterer", "name": "Illuminate\\Routing\\Controller::getFilterer", "doc": "&quot;Get the route filterer implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_setFilterer", "name": "Illuminate\\Routing\\Controller::setFilterer", "doc": "&quot;Set the route filterer implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_setupLayout", "name": "Illuminate\\Routing\\Controller::setupLayout", "doc": "&quot;Create the layout used by the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_callAction", "name": "Illuminate\\Routing\\Controller::callAction", "doc": "&quot;Execute an action on the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method_missingMethod", "name": "Illuminate\\Routing\\Controller::missingMethod", "doc": "&quot;Handle calls to missing methods on the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Controller", "fromLink": "Illuminate/Routing/Controller.html", "link": "Illuminate/Routing/Controller.html#method___call", "name": "Illuminate\\Routing\\Controller::__call", "doc": "&quot;Handle calls to missing methods on the controller.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/ControllerDispatcher.html", "name": "Illuminate\\Routing\\ControllerDispatcher", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method___construct", "name": "Illuminate\\Routing\\ControllerDispatcher::__construct", "doc": "&quot;Create a new controller dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_dispatch", "name": "Illuminate\\Routing\\ControllerDispatcher::dispatch", "doc": "&quot;Dispatch a request to a given controller and method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_makeController", "name": "Illuminate\\Routing\\ControllerDispatcher::makeController", "doc": "&quot;Make a controller instance via the IoC container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_call", "name": "Illuminate\\Routing\\ControllerDispatcher::call", "doc": "&quot;Call the given controller instance method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_before", "name": "Illuminate\\Routing\\ControllerDispatcher::before", "doc": "&quot;Call the \&quot;before\&quot; filters for the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_assignAfter", "name": "Illuminate\\Routing\\ControllerDispatcher::assignAfter", "doc": "&quot;Apply the applicable after filters to the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_getAssignableAfter", "name": "Illuminate\\Routing\\ControllerDispatcher::getAssignableAfter", "doc": "&quot;Get the assignable after filter for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_filterApplies", "name": "Illuminate\\Routing\\ControllerDispatcher::filterApplies", "doc": "&quot;Determine if the given filter applies to the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_filterFailsOnly", "name": "Illuminate\\Routing\\ControllerDispatcher::filterFailsOnly", "doc": "&quot;Determine if the filter fails the \&quot;only\&quot; constraint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_filterFailsExcept", "name": "Illuminate\\Routing\\ControllerDispatcher::filterFailsExcept", "doc": "&quot;Determine if the filter fails the \&quot;except\&quot; constraint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_filterFailsOn", "name": "Illuminate\\Routing\\ControllerDispatcher::filterFailsOn", "doc": "&quot;Determine if the filter fails the \&quot;on\&quot; constraint.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerDispatcher", "fromLink": "Illuminate/Routing/ControllerDispatcher.html", "link": "Illuminate/Routing/ControllerDispatcher.html#method_callFilter", "name": "Illuminate\\Routing\\ControllerDispatcher::callFilter", "doc": "&quot;Call the given controller filter method.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/ControllerInspector.html", "name": "Illuminate\\Routing\\ControllerInspector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerInspector", "fromLink": "Illuminate/Routing/ControllerInspector.html", "link": "Illuminate/Routing/ControllerInspector.html#method_getRoutable", "name": "Illuminate\\Routing\\ControllerInspector::getRoutable", "doc": "&quot;Get the routable methods for a controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerInspector", "fromLink": "Illuminate/Routing/ControllerInspector.html", "link": "Illuminate/Routing/ControllerInspector.html#method_isRoutable", "name": "Illuminate\\Routing\\ControllerInspector::isRoutable", "doc": "&quot;Determine if the given controller method is routable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerInspector", "fromLink": "Illuminate/Routing/ControllerInspector.html", "link": "Illuminate/Routing/ControllerInspector.html#method_getMethodData", "name": "Illuminate\\Routing\\ControllerInspector::getMethodData", "doc": "&quot;Get the method data for a given method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerInspector", "fromLink": "Illuminate/Routing/ControllerInspector.html", "link": "Illuminate/Routing/ControllerInspector.html#method_getIndexData", "name": "Illuminate\\Routing\\ControllerInspector::getIndexData", "doc": "&quot;Get the routable data for an index method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerInspector", "fromLink": "Illuminate/Routing/ControllerInspector.html", "link": "Illuminate/Routing/ControllerInspector.html#method_getVerb", "name": "Illuminate\\Routing\\ControllerInspector::getVerb", "doc": "&quot;Extract the verb from a controller action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerInspector", "fromLink": "Illuminate/Routing/ControllerInspector.html", "link": "Illuminate/Routing/ControllerInspector.html#method_getPlainUri", "name": "Illuminate\\Routing\\ControllerInspector::getPlainUri", "doc": "&quot;Determine the URI from the given method name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerInspector", "fromLink": "Illuminate/Routing/ControllerInspector.html", "link": "Illuminate/Routing/ControllerInspector.html#method_addUriWildcards", "name": "Illuminate\\Routing\\ControllerInspector::addUriWildcards", "doc": "&quot;Add wildcards to the given URI.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/ControllerServiceProvider.html", "name": "Illuminate\\Routing\\ControllerServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerServiceProvider", "fromLink": "Illuminate/Routing/ControllerServiceProvider.html", "link": "Illuminate/Routing/ControllerServiceProvider.html#method_register", "name": "Illuminate\\Routing\\ControllerServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerServiceProvider", "fromLink": "Illuminate/Routing/ControllerServiceProvider.html", "link": "Illuminate/Routing/ControllerServiceProvider.html#method_registerGenerator", "name": "Illuminate\\Routing\\ControllerServiceProvider::registerGenerator", "doc": "&quot;Register the controller generator command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\ControllerServiceProvider", "fromLink": "Illuminate/Routing/ControllerServiceProvider.html", "link": "Illuminate/Routing/ControllerServiceProvider.html#method_provides", "name": "Illuminate\\Routing\\ControllerServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing\\Generators", "fromLink": "Illuminate/Routing/Generators.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method___construct", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::__construct", "doc": "&quot;Create a new controller generator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_make", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::make", "doc": "&quot;Create a new resourceful controller file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_writeFile", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::writeFile", "doc": "&quot;Write the completed stub to disk.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_makeDirectory", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::makeDirectory", "doc": "&quot;Create the directory for the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_getDirectory", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::getDirectory", "doc": "&quot;Get the directory the controller should live in.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_getController", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::getController", "doc": "&quot;Get the controller class stub.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_replaceNamespace", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::replaceNamespace", "doc": "&quot;Replace the namespace on the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_addMethods", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::addMethods", "doc": "&quot;Add the method stubs to the controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_getMethodStubs", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::getMethodStubs", "doc": "&quot;Get all of the method stubs for the given options.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Generators\\ControllerGenerator", "fromLink": "Illuminate/Routing/Generators/ControllerGenerator.html", "link": "Illuminate/Routing/Generators/ControllerGenerator.html#method_getMethods", "name": "Illuminate\\Routing\\Generators\\ControllerGenerator::getMethods", "doc": "&quot;Get the applicable methods based on the options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing\\Matching", "fromLink": "Illuminate/Routing/Matching.html", "link": "Illuminate/Routing/Matching/HostValidator.html", "name": "Illuminate\\Routing\\Matching\\HostValidator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Matching\\HostValidator", "fromLink": "Illuminate/Routing/Matching/HostValidator.html", "link": "Illuminate/Routing/Matching/HostValidator.html#method_matches", "name": "Illuminate\\Routing\\Matching\\HostValidator::matches", "doc": "&quot;Validate a given rule against a route and request.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing\\Matching", "fromLink": "Illuminate/Routing/Matching.html", "link": "Illuminate/Routing/Matching/MethodValidator.html", "name": "Illuminate\\Routing\\Matching\\MethodValidator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Matching\\MethodValidator", "fromLink": "Illuminate/Routing/Matching/MethodValidator.html", "link": "Illuminate/Routing/Matching/MethodValidator.html#method_matches", "name": "Illuminate\\Routing\\Matching\\MethodValidator::matches", "doc": "&quot;Validate a given rule against a route and request.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing\\Matching", "fromLink": "Illuminate/Routing/Matching.html", "link": "Illuminate/Routing/Matching/SchemeValidator.html", "name": "Illuminate\\Routing\\Matching\\SchemeValidator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Matching\\SchemeValidator", "fromLink": "Illuminate/Routing/Matching/SchemeValidator.html", "link": "Illuminate/Routing/Matching/SchemeValidator.html#method_matches", "name": "Illuminate\\Routing\\Matching\\SchemeValidator::matches", "doc": "&quot;Validate a given rule against a route and request.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing\\Matching", "fromLink": "Illuminate/Routing/Matching.html", "link": "Illuminate/Routing/Matching/UriValidator.html", "name": "Illuminate\\Routing\\Matching\\UriValidator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Matching\\UriValidator", "fromLink": "Illuminate/Routing/Matching/UriValidator.html", "link": "Illuminate/Routing/Matching/UriValidator.html#method_matches", "name": "Illuminate\\Routing\\Matching\\UriValidator::matches", "doc": "&quot;Validate a given rule against a route and request.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing\\Matching", "fromLink": "Illuminate/Routing/Matching.html", "link": "Illuminate/Routing/Matching/ValidatorInterface.html", "name": "Illuminate\\Routing\\Matching\\ValidatorInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Matching\\ValidatorInterface", "fromLink": "Illuminate/Routing/Matching/ValidatorInterface.html", "link": "Illuminate/Routing/Matching/ValidatorInterface.html#method_matches", "name": "Illuminate\\Routing\\Matching\\ValidatorInterface::matches", "doc": "&quot;Validate a given rule against a route and request.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/Redirector.html", "name": "Illuminate\\Routing\\Redirector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method___construct", "name": "Illuminate\\Routing\\Redirector::__construct", "doc": "&quot;Create a new Redirector instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_home", "name": "Illuminate\\Routing\\Redirector::home", "doc": "&quot;Create a new redirect response to the \&quot;home\&quot; route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_back", "name": "Illuminate\\Routing\\Redirector::back", "doc": "&quot;Create a new redirect response to the previous location.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_refresh", "name": "Illuminate\\Routing\\Redirector::refresh", "doc": "&quot;Create a new redirect response to the current URI.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_guest", "name": "Illuminate\\Routing\\Redirector::guest", "doc": "&quot;Create a new redirect response, while putting the current URL in the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_intended", "name": "Illuminate\\Routing\\Redirector::intended", "doc": "&quot;Create a new redirect response to the previously intended location.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_to", "name": "Illuminate\\Routing\\Redirector::to", "doc": "&quot;Create a new redirect response to the given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_away", "name": "Illuminate\\Routing\\Redirector::away", "doc": "&quot;Create a new redirect response to an external URL (no validation).&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_secure", "name": "Illuminate\\Routing\\Redirector::secure", "doc": "&quot;Create a new redirect response to the given HTTPS path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_route", "name": "Illuminate\\Routing\\Redirector::route", "doc": "&quot;Create a new redirect response to a named route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_action", "name": "Illuminate\\Routing\\Redirector::action", "doc": "&quot;Create a new redirect response to a controller action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_createRedirect", "name": "Illuminate\\Routing\\Redirector::createRedirect", "doc": "&quot;Create a new redirect response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_getUrlGenerator", "name": "Illuminate\\Routing\\Redirector::getUrlGenerator", "doc": "&quot;Get the URL generator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Redirector", "fromLink": "Illuminate/Routing/Redirector.html", "link": "Illuminate/Routing/Redirector.html#method_setSession", "name": "Illuminate\\Routing\\Redirector::setSession", "doc": "&quot;Set the active session store.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/Route.html", "name": "Illuminate\\Routing\\Route", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method___construct", "name": "Illuminate\\Routing\\Route::__construct", "doc": "&quot;Create a new Route instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_run", "name": "Illuminate\\Routing\\Route::run", "doc": "&quot;Run the route action and return the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_matches", "name": "Illuminate\\Routing\\Route::matches", "doc": "&quot;Determine if the route matches given request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_compileRoute", "name": "Illuminate\\Routing\\Route::compileRoute", "doc": "&quot;Compile the route into a Symfony CompiledRoute instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_extractOptionalParameters", "name": "Illuminate\\Routing\\Route::extractOptionalParameters", "doc": "&quot;Get the optional parameters for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_beforeFilters", "name": "Illuminate\\Routing\\Route::beforeFilters", "doc": "&quot;Get the \&quot;before\&quot; filters for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_afterFilters", "name": "Illuminate\\Routing\\Route::afterFilters", "doc": "&quot;Get the \&quot;after\&quot; filters for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parseFilters", "name": "Illuminate\\Routing\\Route::parseFilters", "doc": "&quot;Parse the given filter string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_explodeFilters", "name": "Illuminate\\Routing\\Route::explodeFilters", "doc": "&quot;Turn the filters into an array if they aren&#039;t already.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_explodeArrayFilters", "name": "Illuminate\\Routing\\Route::explodeArrayFilters", "doc": "&quot;Flatten out an array of filter declarations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parseFilter", "name": "Illuminate\\Routing\\Route::parseFilter", "doc": "&quot;Parse the given filter into name and parameters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parseParameterFilter", "name": "Illuminate\\Routing\\Route::parseParameterFilter", "doc": "&quot;Parse a filter with parameters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getParameter", "name": "Illuminate\\Routing\\Route::getParameter", "doc": "&quot;Get a given parameter from the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parameter", "name": "Illuminate\\Routing\\Route::parameter", "doc": "&quot;Get a given parameter from the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_setParameter", "name": "Illuminate\\Routing\\Route::setParameter", "doc": "&quot;Set a parameter to the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_forgetParameter", "name": "Illuminate\\Routing\\Route::forgetParameter", "doc": "&quot;Unset a parameter on the route if it is set.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parameters", "name": "Illuminate\\Routing\\Route::parameters", "doc": "&quot;Get the key \/ value list of parameters for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parametersWithoutNulls", "name": "Illuminate\\Routing\\Route::parametersWithoutNulls", "doc": "&quot;Get the key \/ value list of parameters without null values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parameterNames", "name": "Illuminate\\Routing\\Route::parameterNames", "doc": "&quot;Get all of the parameter names for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_compileParameterNames", "name": "Illuminate\\Routing\\Route::compileParameterNames", "doc": "&quot;Get the parameter names for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_bind", "name": "Illuminate\\Routing\\Route::bind", "doc": "&quot;Bind the route to a given request for execution.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_bindParameters", "name": "Illuminate\\Routing\\Route::bindParameters", "doc": "&quot;Extract the parameter list from the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_bindPathParameters", "name": "Illuminate\\Routing\\Route::bindPathParameters", "doc": "&quot;Get the parameter matches for the path portion of the URI.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_bindHostParameters", "name": "Illuminate\\Routing\\Route::bindHostParameters", "doc": "&quot;Extract the parameter list from the host part of the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_matchToKeys", "name": "Illuminate\\Routing\\Route::matchToKeys", "doc": "&quot;Combine a set of parameter matches with the route&#039;s keys.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_replaceDefaults", "name": "Illuminate\\Routing\\Route::replaceDefaults", "doc": "&quot;Replace null parameters with their defaults.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parseAction", "name": "Illuminate\\Routing\\Route::parseAction", "doc": "&quot;Parse the route action into a standard array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_findClosure", "name": "Illuminate\\Routing\\Route::findClosure", "doc": "&quot;Find the Closure in an action array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getValidators", "name": "Illuminate\\Routing\\Route::getValidators", "doc": "&quot;Get the route validators for the instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_before", "name": "Illuminate\\Routing\\Route::before", "doc": "&quot;Add before filters to the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_after", "name": "Illuminate\\Routing\\Route::after", "doc": "&quot;Add after filters to the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_addFilters", "name": "Illuminate\\Routing\\Route::addFilters", "doc": "&quot;Add the given filters to the route by type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_defaults", "name": "Illuminate\\Routing\\Route::defaults", "doc": "&quot;Set a default value for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_where", "name": "Illuminate\\Routing\\Route::where", "doc": "&quot;Set a regular expression requirement on the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_parseWhere", "name": "Illuminate\\Routing\\Route::parseWhere", "doc": "&quot;Parse arguments to the where method into an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_whereArray", "name": "Illuminate\\Routing\\Route::whereArray", "doc": "&quot;Set a list of regular expression requirements on the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_prefix", "name": "Illuminate\\Routing\\Route::prefix", "doc": "&quot;Add a prefix to the route URI.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getPath", "name": "Illuminate\\Routing\\Route::getPath", "doc": "&quot;Get the URI associated with the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_uri", "name": "Illuminate\\Routing\\Route::uri", "doc": "&quot;Get the URI associated with the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getMethods", "name": "Illuminate\\Routing\\Route::getMethods", "doc": "&quot;Get the HTTP verbs the route responds to.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_methods", "name": "Illuminate\\Routing\\Route::methods", "doc": "&quot;Get the HTTP verbs the route responds to.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_httpOnly", "name": "Illuminate\\Routing\\Route::httpOnly", "doc": "&quot;Determine if the route only responds to HTTP requests.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_httpsOnly", "name": "Illuminate\\Routing\\Route::httpsOnly", "doc": "&quot;Determine if the route only responds to HTTPS requests.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_secure", "name": "Illuminate\\Routing\\Route::secure", "doc": "&quot;Determine if the route only responds to HTTPS requests.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_domain", "name": "Illuminate\\Routing\\Route::domain", "doc": "&quot;Get the domain defined for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getUri", "name": "Illuminate\\Routing\\Route::getUri", "doc": "&quot;Get the URI that the route responds to.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_setUri", "name": "Illuminate\\Routing\\Route::setUri", "doc": "&quot;Set the URI that the route responds to.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getPrefix", "name": "Illuminate\\Routing\\Route::getPrefix", "doc": "&quot;Get the prefix of the route instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getName", "name": "Illuminate\\Routing\\Route::getName", "doc": "&quot;Get the name of the route instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getActionName", "name": "Illuminate\\Routing\\Route::getActionName", "doc": "&quot;Get the action name for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getAction", "name": "Illuminate\\Routing\\Route::getAction", "doc": "&quot;Get the action array for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_setAction", "name": "Illuminate\\Routing\\Route::setAction", "doc": "&quot;Set the action array for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Route", "fromLink": "Illuminate/Routing/Route.html", "link": "Illuminate/Routing/Route.html#method_getCompiled", "name": "Illuminate\\Routing\\Route::getCompiled", "doc": "&quot;Get the compiled version of the route.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/RouteCollection.html", "name": "Illuminate\\Routing\\RouteCollection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_add", "name": "Illuminate\\Routing\\RouteCollection::add", "doc": "&quot;Add a Route instance to the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_addToCollections", "name": "Illuminate\\Routing\\RouteCollection::addToCollections", "doc": "&quot;Add the given route to the arrays of routes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_addLookups", "name": "Illuminate\\Routing\\RouteCollection::addLookups", "doc": "&quot;Add the route to any look-up tables if necessary.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_addToActionList", "name": "Illuminate\\Routing\\RouteCollection::addToActionList", "doc": "&quot;Add a route to the controller action dictionary.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_match", "name": "Illuminate\\Routing\\RouteCollection::match", "doc": "&quot;Find the first route matching a given request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_checkForAlternateVerbs", "name": "Illuminate\\Routing\\RouteCollection::checkForAlternateVerbs", "doc": "&quot;Determine if any routes match on another HTTP verb.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_getOtherMethodsRoute", "name": "Illuminate\\Routing\\RouteCollection::getOtherMethodsRoute", "doc": "&quot;Get a route (if necessary) that responds when other available methods are present.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_methodNotAllowed", "name": "Illuminate\\Routing\\RouteCollection::methodNotAllowed", "doc": "&quot;Throw a method not allowed HTTP exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_check", "name": "Illuminate\\Routing\\RouteCollection::check", "doc": "&quot;Determine if a route in the array matches the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_get", "name": "Illuminate\\Routing\\RouteCollection::get", "doc": "&quot;Get all of the routes in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_hasNamedRoute", "name": "Illuminate\\Routing\\RouteCollection::hasNamedRoute", "doc": "&quot;Determine if the route collection contains a given named route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_getByName", "name": "Illuminate\\Routing\\RouteCollection::getByName", "doc": "&quot;Get a route instance by its name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_getByAction", "name": "Illuminate\\Routing\\RouteCollection::getByAction", "doc": "&quot;Get a route instance by its controller action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_getRoutes", "name": "Illuminate\\Routing\\RouteCollection::getRoutes", "doc": "&quot;Get all of the routes in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_getIterator", "name": "Illuminate\\Routing\\RouteCollection::getIterator", "doc": "&quot;Get an iterator for the items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteCollection", "fromLink": "Illuminate/Routing/RouteCollection.html", "link": "Illuminate/Routing/RouteCollection.html#method_count", "name": "Illuminate\\Routing\\RouteCollection::count", "doc": "&quot;Count the number of items in the collection.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/RouteFiltererInterface.html", "name": "Illuminate\\Routing\\RouteFiltererInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\RouteFiltererInterface", "fromLink": "Illuminate/Routing/RouteFiltererInterface.html", "link": "Illuminate/Routing/RouteFiltererInterface.html#method_filter", "name": "Illuminate\\Routing\\RouteFiltererInterface::filter", "doc": "&quot;Register a new filter with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RouteFiltererInterface", "fromLink": "Illuminate/Routing/RouteFiltererInterface.html", "link": "Illuminate/Routing/RouteFiltererInterface.html#method_callRouteFilter", "name": "Illuminate\\Routing\\RouteFiltererInterface::callRouteFilter", "doc": "&quot;Call the given route filter.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/Router.html", "name": "Illuminate\\Routing\\Router", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method___construct", "name": "Illuminate\\Routing\\Router::__construct", "doc": "&quot;Create a new Router instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_get", "name": "Illuminate\\Routing\\Router::get", "doc": "&quot;Register a new GET route with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_post", "name": "Illuminate\\Routing\\Router::post", "doc": "&quot;Register a new POST route with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_put", "name": "Illuminate\\Routing\\Router::put", "doc": "&quot;Register a new PUT route with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_patch", "name": "Illuminate\\Routing\\Router::patch", "doc": "&quot;Register a new PATCH route with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_delete", "name": "Illuminate\\Routing\\Router::delete", "doc": "&quot;Register a new DELETE route with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_options", "name": "Illuminate\\Routing\\Router::options", "doc": "&quot;Register a new OPTIONS route with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_any", "name": "Illuminate\\Routing\\Router::any", "doc": "&quot;Register a new route responding to all verbs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_match", "name": "Illuminate\\Routing\\Router::match", "doc": "&quot;Register a new route with the given verbs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_controllers", "name": "Illuminate\\Routing\\Router::controllers", "doc": "&quot;Register an array of controllers with wildcard routing.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_controller", "name": "Illuminate\\Routing\\Router::controller", "doc": "&quot;Route a controller to a URI with wildcard routing.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_registerInspected", "name": "Illuminate\\Routing\\Router::registerInspected", "doc": "&quot;Register an inspected controller route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addFallthroughRoute", "name": "Illuminate\\Routing\\Router::addFallthroughRoute", "doc": "&quot;Add a fallthrough route for a controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_resource", "name": "Illuminate\\Routing\\Router::resource", "doc": "&quot;Route a resource to a controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_prefixedResource", "name": "Illuminate\\Routing\\Router::prefixedResource", "doc": "&quot;Build a set of prefixed resource routes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getResourcePrefix", "name": "Illuminate\\Routing\\Router::getResourcePrefix", "doc": "&quot;Extract the resource and prefix from a resource name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getResourceMethods", "name": "Illuminate\\Routing\\Router::getResourceMethods", "doc": "&quot;Get the applicable resource methods.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getResourceUri", "name": "Illuminate\\Routing\\Router::getResourceUri", "doc": "&quot;Get the base resource URI for a given resource.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getNestedResourceUri", "name": "Illuminate\\Routing\\Router::getNestedResourceUri", "doc": "&quot;Get the URI for a nested resource segment array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getResourceAction", "name": "Illuminate\\Routing\\Router::getResourceAction", "doc": "&quot;Get the action array for a resource route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getResourceName", "name": "Illuminate\\Routing\\Router::getResourceName", "doc": "&quot;Get the name for a given resource.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getGroupResourceName", "name": "Illuminate\\Routing\\Router::getGroupResourceName", "doc": "&quot;Get the resource name for a grouped resource.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getResourceWildcard", "name": "Illuminate\\Routing\\Router::getResourceWildcard", "doc": "&quot;Format a resource wildcard for usage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addResourceIndex", "name": "Illuminate\\Routing\\Router::addResourceIndex", "doc": "&quot;Add the index method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addResourceCreate", "name": "Illuminate\\Routing\\Router::addResourceCreate", "doc": "&quot;Add the create method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addResourceStore", "name": "Illuminate\\Routing\\Router::addResourceStore", "doc": "&quot;Add the store method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addResourceShow", "name": "Illuminate\\Routing\\Router::addResourceShow", "doc": "&quot;Add the show method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addResourceEdit", "name": "Illuminate\\Routing\\Router::addResourceEdit", "doc": "&quot;Add the edit method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addResourceUpdate", "name": "Illuminate\\Routing\\Router::addResourceUpdate", "doc": "&quot;Add the update method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addPutResourceUpdate", "name": "Illuminate\\Routing\\Router::addPutResourceUpdate", "doc": "&quot;Add the update method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addPatchResourceUpdate", "name": "Illuminate\\Routing\\Router::addPatchResourceUpdate", "doc": "&quot;Add the update method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addResourceDestroy", "name": "Illuminate\\Routing\\Router::addResourceDestroy", "doc": "&quot;Add the destroy method for a resourceful route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_group", "name": "Illuminate\\Routing\\Router::group", "doc": "&quot;Create a route group with shared attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_updateGroupStack", "name": "Illuminate\\Routing\\Router::updateGroupStack", "doc": "&quot;Update the group stack with the given attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_mergeWithLastGroup", "name": "Illuminate\\Routing\\Router::mergeWithLastGroup", "doc": "&quot;Merge the given array with the last group stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_mergeGroup", "name": "Illuminate\\Routing\\Router::mergeGroup", "doc": "&quot;Merge the given group attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_formatUsesPrefix", "name": "Illuminate\\Routing\\Router::formatUsesPrefix", "doc": "&quot;Format the uses prefix for the new group attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_formatGroupPrefix", "name": "Illuminate\\Routing\\Router::formatGroupPrefix", "doc": "&quot;Format the prefix for the new group attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getLastGroupPrefix", "name": "Illuminate\\Routing\\Router::getLastGroupPrefix", "doc": "&quot;Get the prefix from the last group on the stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addRoute", "name": "Illuminate\\Routing\\Router::addRoute", "doc": "&quot;Add a route to the underlying route collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_createRoute", "name": "Illuminate\\Routing\\Router::createRoute", "doc": "&quot;Create a new route instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_newRoute", "name": "Illuminate\\Routing\\Router::newRoute", "doc": "&quot;Create a new Route object.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_prefix", "name": "Illuminate\\Routing\\Router::prefix", "doc": "&quot;Prefix the given URI with the last prefix.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addWhereClausesToRoute", "name": "Illuminate\\Routing\\Router::addWhereClausesToRoute", "doc": "&quot;Add the necessary where clauses to the route based on its initial registration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_mergeController", "name": "Illuminate\\Routing\\Router::mergeController", "doc": "&quot;Merge the group stack with the controller action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_routingToController", "name": "Illuminate\\Routing\\Router::routingToController", "doc": "&quot;Determine if the action is routing to a controller.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getControllerAction", "name": "Illuminate\\Routing\\Router::getControllerAction", "doc": "&quot;Add a controller based route action to the action array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getClassClosure", "name": "Illuminate\\Routing\\Router::getClassClosure", "doc": "&quot;Get the Closure for a controller based action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_prependGroupUses", "name": "Illuminate\\Routing\\Router::prependGroupUses", "doc": "&quot;Prepend the last group uses onto the use clause.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_dispatch", "name": "Illuminate\\Routing\\Router::dispatch", "doc": "&quot;Dispatch the request to the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_dispatchToRoute", "name": "Illuminate\\Routing\\Router::dispatchToRoute", "doc": "&quot;Dispatch the request to a route and return the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_findRoute", "name": "Illuminate\\Routing\\Router::findRoute", "doc": "&quot;Find the route matching a given request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_substituteBindings", "name": "Illuminate\\Routing\\Router::substituteBindings", "doc": "&quot;Substitute the route bindings onto the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_performBinding", "name": "Illuminate\\Routing\\Router::performBinding", "doc": "&quot;Call the binding callback for the given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_matched", "name": "Illuminate\\Routing\\Router::matched", "doc": "&quot;Register a route matched event listener.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_before", "name": "Illuminate\\Routing\\Router::before", "doc": "&quot;Register a new \&quot;before\&quot; filter with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_after", "name": "Illuminate\\Routing\\Router::after", "doc": "&quot;Register a new \&quot;after\&quot; filter with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_addGlobalFilter", "name": "Illuminate\\Routing\\Router::addGlobalFilter", "doc": "&quot;Register a new global filter with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_filter", "name": "Illuminate\\Routing\\Router::filter", "doc": "&quot;Register a new filter with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_parseFilter", "name": "Illuminate\\Routing\\Router::parseFilter", "doc": "&quot;Parse the registered filter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_when", "name": "Illuminate\\Routing\\Router::when", "doc": "&quot;Register a pattern-based filter with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_whenRegex", "name": "Illuminate\\Routing\\Router::whenRegex", "doc": "&quot;Register a regular expression based filter with the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_model", "name": "Illuminate\\Routing\\Router::model", "doc": "&quot;Register a model binder for a wildcard.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_bind", "name": "Illuminate\\Routing\\Router::bind", "doc": "&quot;Add a new route parameter binder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_createClassBinding", "name": "Illuminate\\Routing\\Router::createClassBinding", "doc": "&quot;Create a class based binding using the IoC container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_pattern", "name": "Illuminate\\Routing\\Router::pattern", "doc": "&quot;Set a global where pattern on all routes&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_patterns", "name": "Illuminate\\Routing\\Router::patterns", "doc": "&quot;Set a group of global where patterns on all routes&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_callFilter", "name": "Illuminate\\Routing\\Router::callFilter", "doc": "&quot;Call the given filter with the request and response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_callRouteBefore", "name": "Illuminate\\Routing\\Router::callRouteBefore", "doc": "&quot;Call the given route&#039;s before filters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_callPatternFilters", "name": "Illuminate\\Routing\\Router::callPatternFilters", "doc": "&quot;Call the pattern based filters for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_findPatternFilters", "name": "Illuminate\\Routing\\Router::findPatternFilters", "doc": "&quot;Find the patterned filters matching a request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_patternsByMethod", "name": "Illuminate\\Routing\\Router::patternsByMethod", "doc": "&quot;Filter pattern filters that don&#039;t apply to the request verb.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_filterSupportsMethod", "name": "Illuminate\\Routing\\Router::filterSupportsMethod", "doc": "&quot;Determine if the given pattern filters applies to a given method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_callAttachedBefores", "name": "Illuminate\\Routing\\Router::callAttachedBefores", "doc": "&quot;Call the given route&#039;s before (non-pattern) filters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_callRouteAfter", "name": "Illuminate\\Routing\\Router::callRouteAfter", "doc": "&quot;Call the given route&#039;s before filters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_callRouteFilter", "name": "Illuminate\\Routing\\Router::callRouteFilter", "doc": "&quot;Call the given route filter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_cleanFilterParameters", "name": "Illuminate\\Routing\\Router::cleanFilterParameters", "doc": "&quot;Clean the parameters being passed to a filter callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_prepareResponse", "name": "Illuminate\\Routing\\Router::prepareResponse", "doc": "&quot;Create a response instance from the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_withoutFilters", "name": "Illuminate\\Routing\\Router::withoutFilters", "doc": "&quot;Run a callback with filters disable on the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_enableFilters", "name": "Illuminate\\Routing\\Router::enableFilters", "doc": "&quot;Enable route filtering on the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_disableFilters", "name": "Illuminate\\Routing\\Router::disableFilters", "doc": "&quot;Disable route filtering on the router.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_input", "name": "Illuminate\\Routing\\Router::input", "doc": "&quot;Get a route parameter for the current route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getCurrentRoute", "name": "Illuminate\\Routing\\Router::getCurrentRoute", "doc": "&quot;Get the currently dispatched route instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_current", "name": "Illuminate\\Routing\\Router::current", "doc": "&quot;Get the currently dispatched route instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_has", "name": "Illuminate\\Routing\\Router::has", "doc": "&quot;Check if a route with the given name exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_currentRouteName", "name": "Illuminate\\Routing\\Router::currentRouteName", "doc": "&quot;Get the current route name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_is", "name": "Illuminate\\Routing\\Router::is", "doc": "&quot;Alias for the \&quot;currentRouteNamed\&quot; method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_currentRouteNamed", "name": "Illuminate\\Routing\\Router::currentRouteNamed", "doc": "&quot;Determine if the current route matches a given name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_currentRouteAction", "name": "Illuminate\\Routing\\Router::currentRouteAction", "doc": "&quot;Get the current route action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_uses", "name": "Illuminate\\Routing\\Router::uses", "doc": "&quot;Alias for the \&quot;currentRouteUses\&quot; method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_currentRouteUses", "name": "Illuminate\\Routing\\Router::currentRouteUses", "doc": "&quot;Determine if the current route action matches a given action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getCurrentRequest", "name": "Illuminate\\Routing\\Router::getCurrentRequest", "doc": "&quot;Get the request currently being dispatched.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getRoutes", "name": "Illuminate\\Routing\\Router::getRoutes", "doc": "&quot;Get the underlying route collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getControllerDispatcher", "name": "Illuminate\\Routing\\Router::getControllerDispatcher", "doc": "&quot;Get the controller dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_setControllerDispatcher", "name": "Illuminate\\Routing\\Router::setControllerDispatcher", "doc": "&quot;Set the controller dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getInspector", "name": "Illuminate\\Routing\\Router::getInspector", "doc": "&quot;Get a controller inspector instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_getPatterns", "name": "Illuminate\\Routing\\Router::getPatterns", "doc": "&quot;Get the global \&quot;where\&quot; patterns.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\Router", "fromLink": "Illuminate/Routing/Router.html", "link": "Illuminate/Routing/Router.html#method_handle", "name": "Illuminate\\Routing\\Router::handle", "doc": "&quot;Get the response for a given request.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/RoutingServiceProvider.html", "name": "Illuminate\\Routing\\RoutingServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\RoutingServiceProvider", "fromLink": "Illuminate/Routing/RoutingServiceProvider.html", "link": "Illuminate/Routing/RoutingServiceProvider.html#method_register", "name": "Illuminate\\Routing\\RoutingServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RoutingServiceProvider", "fromLink": "Illuminate/Routing/RoutingServiceProvider.html", "link": "Illuminate/Routing/RoutingServiceProvider.html#method_registerRouter", "name": "Illuminate\\Routing\\RoutingServiceProvider::registerRouter", "doc": "&quot;Register the router instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RoutingServiceProvider", "fromLink": "Illuminate/Routing/RoutingServiceProvider.html", "link": "Illuminate/Routing/RoutingServiceProvider.html#method_registerUrlGenerator", "name": "Illuminate\\Routing\\RoutingServiceProvider::registerUrlGenerator", "doc": "&quot;Register the URL generator service.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\RoutingServiceProvider", "fromLink": "Illuminate/Routing/RoutingServiceProvider.html", "link": "Illuminate/Routing/RoutingServiceProvider.html#method_registerRedirector", "name": "Illuminate\\Routing\\RoutingServiceProvider::registerRedirector", "doc": "&quot;Register the Redirector service.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Routing", "fromLink": "Illuminate/Routing.html", "link": "Illuminate/Routing/UrlGenerator.html", "name": "Illuminate\\Routing\\UrlGenerator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method___construct", "name": "Illuminate\\Routing\\UrlGenerator::__construct", "doc": "&quot;Create a new URL Generator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_full", "name": "Illuminate\\Routing\\UrlGenerator::full", "doc": "&quot;Get the full URL for the current request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_current", "name": "Illuminate\\Routing\\UrlGenerator::current", "doc": "&quot;Get the current URL for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_previous", "name": "Illuminate\\Routing\\UrlGenerator::previous", "doc": "&quot;Get the URL for the previous request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_to", "name": "Illuminate\\Routing\\UrlGenerator::to", "doc": "&quot;Generate a absolute URL to the given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_secure", "name": "Illuminate\\Routing\\UrlGenerator::secure", "doc": "&quot;Generate a secure, absolute URL to the given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_asset", "name": "Illuminate\\Routing\\UrlGenerator::asset", "doc": "&quot;Generate a URL to an application asset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_removeIndex", "name": "Illuminate\\Routing\\UrlGenerator::removeIndex", "doc": "&quot;Remove the index.php file from a path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_secureAsset", "name": "Illuminate\\Routing\\UrlGenerator::secureAsset", "doc": "&quot;Generate a URL to a secure asset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getScheme", "name": "Illuminate\\Routing\\UrlGenerator::getScheme", "doc": "&quot;Get the scheme for a raw URL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_forceSchema", "name": "Illuminate\\Routing\\UrlGenerator::forceSchema", "doc": "&quot;Force the schema for URLs.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_route", "name": "Illuminate\\Routing\\UrlGenerator::route", "doc": "&quot;Get the URL to a named route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_toRoute", "name": "Illuminate\\Routing\\UrlGenerator::toRoute", "doc": "&quot;Get the URL for a given route instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_replaceRoot", "name": "Illuminate\\Routing\\UrlGenerator::replaceRoot", "doc": "&quot;Replace the parameters on the root path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_replaceRouteParameters", "name": "Illuminate\\Routing\\UrlGenerator::replaceRouteParameters", "doc": "&quot;Replace all of the wildcard parameters for a route path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_replaceNamedParameters", "name": "Illuminate\\Routing\\UrlGenerator::replaceNamedParameters", "doc": "&quot;Replace all of the named parameters in the path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getRouteQueryString", "name": "Illuminate\\Routing\\UrlGenerator::getRouteQueryString", "doc": "&quot;Get the query string for a given route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getStringParameters", "name": "Illuminate\\Routing\\UrlGenerator::getStringParameters", "doc": "&quot;Get the string parameters from a given list.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getNumericParameters", "name": "Illuminate\\Routing\\UrlGenerator::getNumericParameters", "doc": "&quot;Get the numeric parameters from a given list.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getRouteDomain", "name": "Illuminate\\Routing\\UrlGenerator::getRouteDomain", "doc": "&quot;Get the formatted domain for a given route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_formatDomain", "name": "Illuminate\\Routing\\UrlGenerator::formatDomain", "doc": "&quot;Format the domain and port for the route and request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getDomainAndScheme", "name": "Illuminate\\Routing\\UrlGenerator::getDomainAndScheme", "doc": "&quot;Get the domain and scheme for the route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_addPortToDomain", "name": "Illuminate\\Routing\\UrlGenerator::addPortToDomain", "doc": "&quot;Add the port to the domain if necessary.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getRouteRoot", "name": "Illuminate\\Routing\\UrlGenerator::getRouteRoot", "doc": "&quot;Get the root of the route URL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getRouteScheme", "name": "Illuminate\\Routing\\UrlGenerator::getRouteScheme", "doc": "&quot;Get the scheme for the given route.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_action", "name": "Illuminate\\Routing\\UrlGenerator::action", "doc": "&quot;Get the URL to a controller action.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getRootUrl", "name": "Illuminate\\Routing\\UrlGenerator::getRootUrl", "doc": "&quot;Get the base URL for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_forceRootUrl", "name": "Illuminate\\Routing\\UrlGenerator::forceRootUrl", "doc": "&quot;Set the forced root URL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_isValidUrl", "name": "Illuminate\\Routing\\UrlGenerator::isValidUrl", "doc": "&quot;Determine if the given path is a valid URL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_trimUrl", "name": "Illuminate\\Routing\\UrlGenerator::trimUrl", "doc": "&quot;Format the given URL segments into a single URL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_getRequest", "name": "Illuminate\\Routing\\UrlGenerator::getRequest", "doc": "&quot;Get the request instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Routing\\UrlGenerator", "fromLink": "Illuminate/Routing/UrlGenerator.html", "link": "Illuminate/Routing/UrlGenerator.html#method_setRequest", "name": "Illuminate\\Routing\\UrlGenerator::setRequest", "doc": "&quot;Set the current request instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html", "name": "Illuminate\\Session\\CacheBasedSessionHandler", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\CacheBasedSessionHandler", "fromLink": "Illuminate/Session/CacheBasedSessionHandler.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html#method___construct", "name": "Illuminate\\Session\\CacheBasedSessionHandler::__construct", "doc": "&quot;Create a new cache driven handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CacheBasedSessionHandler", "fromLink": "Illuminate/Session/CacheBasedSessionHandler.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html#method_open", "name": "Illuminate\\Session\\CacheBasedSessionHandler::open", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CacheBasedSessionHandler", "fromLink": "Illuminate/Session/CacheBasedSessionHandler.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html#method_close", "name": "Illuminate\\Session\\CacheBasedSessionHandler::close", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CacheBasedSessionHandler", "fromLink": "Illuminate/Session/CacheBasedSessionHandler.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html#method_read", "name": "Illuminate\\Session\\CacheBasedSessionHandler::read", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CacheBasedSessionHandler", "fromLink": "Illuminate/Session/CacheBasedSessionHandler.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html#method_write", "name": "Illuminate\\Session\\CacheBasedSessionHandler::write", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CacheBasedSessionHandler", "fromLink": "Illuminate/Session/CacheBasedSessionHandler.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html#method_destroy", "name": "Illuminate\\Session\\CacheBasedSessionHandler::destroy", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CacheBasedSessionHandler", "fromLink": "Illuminate/Session/CacheBasedSessionHandler.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html#method_gc", "name": "Illuminate\\Session\\CacheBasedSessionHandler::gc", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CacheBasedSessionHandler", "fromLink": "Illuminate/Session/CacheBasedSessionHandler.html", "link": "Illuminate/Session/CacheBasedSessionHandler.html#method_getCache", "name": "Illuminate\\Session\\CacheBasedSessionHandler::getCache", "doc": "&quot;Get the underlying cache repository.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/CommandsServiceProvider.html", "name": "Illuminate\\Session\\CommandsServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\CommandsServiceProvider", "fromLink": "Illuminate/Session/CommandsServiceProvider.html", "link": "Illuminate/Session/CommandsServiceProvider.html#method_register", "name": "Illuminate\\Session\\CommandsServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CommandsServiceProvider", "fromLink": "Illuminate/Session/CommandsServiceProvider.html", "link": "Illuminate/Session/CommandsServiceProvider.html#method_provides", "name": "Illuminate\\Session\\CommandsServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session\\Console", "fromLink": "Illuminate/Session/Console.html", "link": "Illuminate/Session/Console/SessionTableCommand.html", "name": "Illuminate\\Session\\Console\\SessionTableCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\Console\\SessionTableCommand", "fromLink": "Illuminate/Session/Console/SessionTableCommand.html", "link": "Illuminate/Session/Console/SessionTableCommand.html#method___construct", "name": "Illuminate\\Session\\Console\\SessionTableCommand::__construct", "doc": "&quot;Create a new session table command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Console\\SessionTableCommand", "fromLink": "Illuminate/Session/Console/SessionTableCommand.html", "link": "Illuminate/Session/Console/SessionTableCommand.html#method_fire", "name": "Illuminate\\Session\\Console\\SessionTableCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Console\\SessionTableCommand", "fromLink": "Illuminate/Session/Console/SessionTableCommand.html", "link": "Illuminate/Session/Console/SessionTableCommand.html#method_createBaseMigration", "name": "Illuminate\\Session\\Console\\SessionTableCommand::createBaseMigration", "doc": "&quot;Create a base migration file for the session.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/CookieSessionHandler.html", "name": "Illuminate\\Session\\CookieSessionHandler", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\CookieSessionHandler", "fromLink": "Illuminate/Session/CookieSessionHandler.html", "link": "Illuminate/Session/CookieSessionHandler.html#method___construct", "name": "Illuminate\\Session\\CookieSessionHandler::__construct", "doc": "&quot;Create a new cookie driven handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CookieSessionHandler", "fromLink": "Illuminate/Session/CookieSessionHandler.html", "link": "Illuminate/Session/CookieSessionHandler.html#method_open", "name": "Illuminate\\Session\\CookieSessionHandler::open", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CookieSessionHandler", "fromLink": "Illuminate/Session/CookieSessionHandler.html", "link": "Illuminate/Session/CookieSessionHandler.html#method_close", "name": "Illuminate\\Session\\CookieSessionHandler::close", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CookieSessionHandler", "fromLink": "Illuminate/Session/CookieSessionHandler.html", "link": "Illuminate/Session/CookieSessionHandler.html#method_read", "name": "Illuminate\\Session\\CookieSessionHandler::read", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CookieSessionHandler", "fromLink": "Illuminate/Session/CookieSessionHandler.html", "link": "Illuminate/Session/CookieSessionHandler.html#method_write", "name": "Illuminate\\Session\\CookieSessionHandler::write", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CookieSessionHandler", "fromLink": "Illuminate/Session/CookieSessionHandler.html", "link": "Illuminate/Session/CookieSessionHandler.html#method_destroy", "name": "Illuminate\\Session\\CookieSessionHandler::destroy", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CookieSessionHandler", "fromLink": "Illuminate/Session/CookieSessionHandler.html", "link": "Illuminate/Session/CookieSessionHandler.html#method_gc", "name": "Illuminate\\Session\\CookieSessionHandler::gc", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\CookieSessionHandler", "fromLink": "Illuminate/Session/CookieSessionHandler.html", "link": "Illuminate/Session/CookieSessionHandler.html#method_setRequest", "name": "Illuminate\\Session\\CookieSessionHandler::setRequest", "doc": "&quot;Set the request instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/DatabaseSessionHandler.html", "name": "Illuminate\\Session\\DatabaseSessionHandler", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method___construct", "name": "Illuminate\\Session\\DatabaseSessionHandler::__construct", "doc": "&quot;Create a new database session handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method_open", "name": "Illuminate\\Session\\DatabaseSessionHandler::open", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method_close", "name": "Illuminate\\Session\\DatabaseSessionHandler::close", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method_read", "name": "Illuminate\\Session\\DatabaseSessionHandler::read", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method_write", "name": "Illuminate\\Session\\DatabaseSessionHandler::write", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method_destroy", "name": "Illuminate\\Session\\DatabaseSessionHandler::destroy", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method_gc", "name": "Illuminate\\Session\\DatabaseSessionHandler::gc", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method_getQuery", "name": "Illuminate\\Session\\DatabaseSessionHandler::getQuery", "doc": "&quot;Get a fresh query builder instance for the table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\DatabaseSessionHandler", "fromLink": "Illuminate/Session/DatabaseSessionHandler.html", "link": "Illuminate/Session/DatabaseSessionHandler.html#method_setExists", "name": "Illuminate\\Session\\DatabaseSessionHandler::setExists", "doc": "&quot;Set the existence state for the session.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/ExistenceAwareInterface.html", "name": "Illuminate\\Session\\ExistenceAwareInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\ExistenceAwareInterface", "fromLink": "Illuminate/Session/ExistenceAwareInterface.html", "link": "Illuminate/Session/ExistenceAwareInterface.html#method_setExists", "name": "Illuminate\\Session\\ExistenceAwareInterface::setExists", "doc": "&quot;Set the existence state for the session.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/FileSessionHandler.html", "name": "Illuminate\\Session\\FileSessionHandler", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\FileSessionHandler", "fromLink": "Illuminate/Session/FileSessionHandler.html", "link": "Illuminate/Session/FileSessionHandler.html#method___construct", "name": "Illuminate\\Session\\FileSessionHandler::__construct", "doc": "&quot;Create a new file driven handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\FileSessionHandler", "fromLink": "Illuminate/Session/FileSessionHandler.html", "link": "Illuminate/Session/FileSessionHandler.html#method_open", "name": "Illuminate\\Session\\FileSessionHandler::open", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\FileSessionHandler", "fromLink": "Illuminate/Session/FileSessionHandler.html", "link": "Illuminate/Session/FileSessionHandler.html#method_close", "name": "Illuminate\\Session\\FileSessionHandler::close", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\FileSessionHandler", "fromLink": "Illuminate/Session/FileSessionHandler.html", "link": "Illuminate/Session/FileSessionHandler.html#method_read", "name": "Illuminate\\Session\\FileSessionHandler::read", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\FileSessionHandler", "fromLink": "Illuminate/Session/FileSessionHandler.html", "link": "Illuminate/Session/FileSessionHandler.html#method_write", "name": "Illuminate\\Session\\FileSessionHandler::write", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\FileSessionHandler", "fromLink": "Illuminate/Session/FileSessionHandler.html", "link": "Illuminate/Session/FileSessionHandler.html#method_destroy", "name": "Illuminate\\Session\\FileSessionHandler::destroy", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\FileSessionHandler", "fromLink": "Illuminate/Session/FileSessionHandler.html", "link": "Illuminate/Session/FileSessionHandler.html#method_gc", "name": "Illuminate\\Session\\FileSessionHandler::gc", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/Middleware.html", "name": "Illuminate\\Session\\Middleware", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method___construct", "name": "Illuminate\\Session\\Middleware::__construct", "doc": "&quot;Create a new session middleware.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_handle", "name": "Illuminate\\Session\\Middleware::handle", "doc": "&quot;Handle the given request and get the response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_checkRequestForArraySessions", "name": "Illuminate\\Session\\Middleware::checkRequestForArraySessions", "doc": "&quot;Check the request and reject callback for array sessions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_startSession", "name": "Illuminate\\Session\\Middleware::startSession", "doc": "&quot;Start the session for the given request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_closeSession", "name": "Illuminate\\Session\\Middleware::closeSession", "doc": "&quot;Close the session handling for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_getUrl", "name": "Illuminate\\Session\\Middleware::getUrl", "doc": "&quot;Get the full URL for the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_collectGarbage", "name": "Illuminate\\Session\\Middleware::collectGarbage", "doc": "&quot;Remove the garbage from the session if necessary.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_configHitsLottery", "name": "Illuminate\\Session\\Middleware::configHitsLottery", "doc": "&quot;Determine if the configuration odds hit the lottery.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_addCookieToResponse", "name": "Illuminate\\Session\\Middleware::addCookieToResponse", "doc": "&quot;Add the session cookie to the application response.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_getLifetimeSeconds", "name": "Illuminate\\Session\\Middleware::getLifetimeSeconds", "doc": "&quot;Get the session lifetime in seconds.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_getCookieLifetime", "name": "Illuminate\\Session\\Middleware::getCookieLifetime", "doc": "&quot;Get the cookie lifetime in seconds.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_sessionConfigured", "name": "Illuminate\\Session\\Middleware::sessionConfigured", "doc": "&quot;Determine if a session driver has been configured.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_sessionIsPersistent", "name": "Illuminate\\Session\\Middleware::sessionIsPersistent", "doc": "&quot;Determine if the configured session driver is persistent.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Middleware", "fromLink": "Illuminate/Session/Middleware.html", "link": "Illuminate/Session/Middleware.html#method_getSession", "name": "Illuminate\\Session\\Middleware::getSession", "doc": "&quot;Get the session implementation from the manager.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/SessionInterface.html", "name": "Illuminate\\Session\\SessionInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\SessionInterface", "fromLink": "Illuminate/Session/SessionInterface.html", "link": "Illuminate/Session/SessionInterface.html#method_getHandler", "name": "Illuminate\\Session\\SessionInterface::getHandler", "doc": "&quot;Get the session handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionInterface", "fromLink": "Illuminate/Session/SessionInterface.html", "link": "Illuminate/Session/SessionInterface.html#method_handlerNeedsRequest", "name": "Illuminate\\Session\\SessionInterface::handlerNeedsRequest", "doc": "&quot;Determine if the session handler needs a request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionInterface", "fromLink": "Illuminate/Session/SessionInterface.html", "link": "Illuminate/Session/SessionInterface.html#method_setRequestOnHandler", "name": "Illuminate\\Session\\SessionInterface::setRequestOnHandler", "doc": "&quot;Set the request on the handler instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/SessionManager.html", "name": "Illuminate\\Session\\SessionManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_callCustomCreator", "name": "Illuminate\\Session\\SessionManager::callCustomCreator", "doc": "&quot;Call a custom driver creator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createArrayDriver", "name": "Illuminate\\Session\\SessionManager::createArrayDriver", "doc": "&quot;Create an instance of the \&quot;array\&quot; session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createCookieDriver", "name": "Illuminate\\Session\\SessionManager::createCookieDriver", "doc": "&quot;Create an instance of the \&quot;cookie\&quot; session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createFileDriver", "name": "Illuminate\\Session\\SessionManager::createFileDriver", "doc": "&quot;Create an instance of the file session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createNativeDriver", "name": "Illuminate\\Session\\SessionManager::createNativeDriver", "doc": "&quot;Create an instance of the file session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createDatabaseDriver", "name": "Illuminate\\Session\\SessionManager::createDatabaseDriver", "doc": "&quot;Create an instance of the database session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_getDatabaseConnection", "name": "Illuminate\\Session\\SessionManager::getDatabaseConnection", "doc": "&quot;Get the database connection for the database driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createApcDriver", "name": "Illuminate\\Session\\SessionManager::createApcDriver", "doc": "&quot;Create an instance of the APC session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createMemcachedDriver", "name": "Illuminate\\Session\\SessionManager::createMemcachedDriver", "doc": "&quot;Create an instance of the Memcached session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createWincacheDriver", "name": "Illuminate\\Session\\SessionManager::createWincacheDriver", "doc": "&quot;Create an instance of the Wincache session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createRedisDriver", "name": "Illuminate\\Session\\SessionManager::createRedisDriver", "doc": "&quot;Create an instance of the Redis session driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createCacheBased", "name": "Illuminate\\Session\\SessionManager::createCacheBased", "doc": "&quot;Create an instance of a cache driven driver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_createCacheHandler", "name": "Illuminate\\Session\\SessionManager::createCacheHandler", "doc": "&quot;Create the cache based session handler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_buildSession", "name": "Illuminate\\Session\\SessionManager::buildSession", "doc": "&quot;Build the session instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_getSessionConfig", "name": "Illuminate\\Session\\SessionManager::getSessionConfig", "doc": "&quot;Get the session configuration.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_getDefaultDriver", "name": "Illuminate\\Session\\SessionManager::getDefaultDriver", "doc": "&quot;Get the default session driver name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionManager", "fromLink": "Illuminate/Session/SessionManager.html", "link": "Illuminate/Session/SessionManager.html#method_setDefaultDriver", "name": "Illuminate\\Session\\SessionManager::setDefaultDriver", "doc": "&quot;Set the default session driver name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/SessionServiceProvider.html", "name": "Illuminate\\Session\\SessionServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\SessionServiceProvider", "fromLink": "Illuminate/Session/SessionServiceProvider.html", "link": "Illuminate/Session/SessionServiceProvider.html#method_register", "name": "Illuminate\\Session\\SessionServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionServiceProvider", "fromLink": "Illuminate/Session/SessionServiceProvider.html", "link": "Illuminate/Session/SessionServiceProvider.html#method_setupDefaultDriver", "name": "Illuminate\\Session\\SessionServiceProvider::setupDefaultDriver", "doc": "&quot;Setup the default session driver for the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionServiceProvider", "fromLink": "Illuminate/Session/SessionServiceProvider.html", "link": "Illuminate/Session/SessionServiceProvider.html#method_registerSessionManager", "name": "Illuminate\\Session\\SessionServiceProvider::registerSessionManager", "doc": "&quot;Register the session manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\SessionServiceProvider", "fromLink": "Illuminate/Session/SessionServiceProvider.html", "link": "Illuminate/Session/SessionServiceProvider.html#method_registerSessionDriver", "name": "Illuminate\\Session\\SessionServiceProvider::registerSessionDriver", "doc": "&quot;Register the session driver instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/Store.html", "name": "Illuminate\\Session\\Store", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method___construct", "name": "Illuminate\\Session\\Store::__construct", "doc": "&quot;Create a new session instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_start", "name": "Illuminate\\Session\\Store::start", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_loadSession", "name": "Illuminate\\Session\\Store::loadSession", "doc": "&quot;Load the session data from the handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_readFromHandler", "name": "Illuminate\\Session\\Store::readFromHandler", "doc": "&quot;Read the session data from the handler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_initializeLocalBag", "name": "Illuminate\\Session\\Store::initializeLocalBag", "doc": "&quot;Initialize a bag in storage if it doesn&#039;t exist.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_getId", "name": "Illuminate\\Session\\Store::getId", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_setId", "name": "Illuminate\\Session\\Store::setId", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_isValidId", "name": "Illuminate\\Session\\Store::isValidId", "doc": "&quot;Determine if this is a valid session ID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_generateSessionId", "name": "Illuminate\\Session\\Store::generateSessionId", "doc": "&quot;Get a new, random session ID.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_getName", "name": "Illuminate\\Session\\Store::getName", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_setName", "name": "Illuminate\\Session\\Store::setName", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_invalidate", "name": "Illuminate\\Session\\Store::invalidate", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_migrate", "name": "Illuminate\\Session\\Store::migrate", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_regenerate", "name": "Illuminate\\Session\\Store::regenerate", "doc": "&quot;Generate a new session identifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_save", "name": "Illuminate\\Session\\Store::save", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_addBagDataToSession", "name": "Illuminate\\Session\\Store::addBagDataToSession", "doc": "&quot;Merge all of the bag data into the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_ageFlashData", "name": "Illuminate\\Session\\Store::ageFlashData", "doc": "&quot;Age the flash data for the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_has", "name": "Illuminate\\Session\\Store::has", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_get", "name": "Illuminate\\Session\\Store::get", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_pull", "name": "Illuminate\\Session\\Store::pull", "doc": "&quot;Get the value of a given key and then forget it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_hasOldInput", "name": "Illuminate\\Session\\Store::hasOldInput", "doc": "&quot;Determine if the session contains old input.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_getOldInput", "name": "Illuminate\\Session\\Store::getOldInput", "doc": "&quot;Get the requested item from the flashed input array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_set", "name": "Illuminate\\Session\\Store::set", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_put", "name": "Illuminate\\Session\\Store::put", "doc": "&quot;Put a key \/ value pair or array of key \/ value pairs in the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_push", "name": "Illuminate\\Session\\Store::push", "doc": "&quot;Push a value onto a session array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_flash", "name": "Illuminate\\Session\\Store::flash", "doc": "&quot;Flash a key \/ value pair to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_flashInput", "name": "Illuminate\\Session\\Store::flashInput", "doc": "&quot;Flash an input array to the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_reflash", "name": "Illuminate\\Session\\Store::reflash", "doc": "&quot;Reflash all of the session flash data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_keep", "name": "Illuminate\\Session\\Store::keep", "doc": "&quot;Reflash a subset of the current flash data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_mergeNewFlashes", "name": "Illuminate\\Session\\Store::mergeNewFlashes", "doc": "&quot;Merge new flash keys into the new flash array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_removeFromOldFlashData", "name": "Illuminate\\Session\\Store::removeFromOldFlashData", "doc": "&quot;Remove the given keys from the old flash data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_all", "name": "Illuminate\\Session\\Store::all", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_replace", "name": "Illuminate\\Session\\Store::replace", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_remove", "name": "Illuminate\\Session\\Store::remove", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_forget", "name": "Illuminate\\Session\\Store::forget", "doc": "&quot;Remove an item from the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_clear", "name": "Illuminate\\Session\\Store::clear", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_flush", "name": "Illuminate\\Session\\Store::flush", "doc": "&quot;Remove all of the items from the session.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_isStarted", "name": "Illuminate\\Session\\Store::isStarted", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_registerBag", "name": "Illuminate\\Session\\Store::registerBag", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_getBag", "name": "Illuminate\\Session\\Store::getBag", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_getMetadataBag", "name": "Illuminate\\Session\\Store::getMetadataBag", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_getBagData", "name": "Illuminate\\Session\\Store::getBagData", "doc": "&quot;Get the raw bag data array for a given bag.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_token", "name": "Illuminate\\Session\\Store::token", "doc": "&quot;Get the CSRF token value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_getToken", "name": "Illuminate\\Session\\Store::getToken", "doc": "&quot;Get the CSRF token value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_regenerateToken", "name": "Illuminate\\Session\\Store::regenerateToken", "doc": "&quot;Regenerate the CSRF token value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_setExists", "name": "Illuminate\\Session\\Store::setExists", "doc": "&quot;Set the existence of the session on the handler if applicable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_getHandler", "name": "Illuminate\\Session\\Store::getHandler", "doc": "&quot;Get the underlying session handler implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_handlerNeedsRequest", "name": "Illuminate\\Session\\Store::handlerNeedsRequest", "doc": "&quot;Determine if the session handler needs a request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Session\\Store", "fromLink": "Illuminate/Session/Store.html", "link": "Illuminate/Session/Store.html#method_setRequestOnHandler", "name": "Illuminate\\Session\\Store::setRequestOnHandler", "doc": "&quot;Set the request on the handler instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Session", "fromLink": "Illuminate/Session.html", "link": "Illuminate/Session/TokenMismatchException.html", "name": "Illuminate\\Session\\TokenMismatchException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/Arr.html", "name": "Illuminate\\Support\\Arr", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_add", "name": "Illuminate\\Support\\Arr::add", "doc": "&quot;Add an element to an array using \&quot;dot\&quot; notation if it doesn&#039;t exist.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_build", "name": "Illuminate\\Support\\Arr::build", "doc": "&quot;Build a new array using a callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_divide", "name": "Illuminate\\Support\\Arr::divide", "doc": "&quot;Divide an array into two arrays. One with keys and the other with values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_dot", "name": "Illuminate\\Support\\Arr::dot", "doc": "&quot;Flatten a multi-dimensional associative array with dots.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_except", "name": "Illuminate\\Support\\Arr::except", "doc": "&quot;Get all of the given array except for a specified array of items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_fetch", "name": "Illuminate\\Support\\Arr::fetch", "doc": "&quot;Fetch a flattened array of a nested array element.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_first", "name": "Illuminate\\Support\\Arr::first", "doc": "&quot;Return the first element in an array passing a given truth test.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_last", "name": "Illuminate\\Support\\Arr::last", "doc": "&quot;Return the last element in an array passing a given truth test.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_flatten", "name": "Illuminate\\Support\\Arr::flatten", "doc": "&quot;Flatten a multi-dimensional array into a single level.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_forget", "name": "Illuminate\\Support\\Arr::forget", "doc": "&quot;Remove one or many array items from a given array using \&quot;dot\&quot; notation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_get", "name": "Illuminate\\Support\\Arr::get", "doc": "&quot;Get an item from an array using \&quot;dot\&quot; notation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_has", "name": "Illuminate\\Support\\Arr::has", "doc": "&quot;Check if an item exists in an array using \&quot;dot\&quot; notation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_only", "name": "Illuminate\\Support\\Arr::only", "doc": "&quot;Get a subset of the items from the given array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_pluck", "name": "Illuminate\\Support\\Arr::pluck", "doc": "&quot;Pluck an array of values from an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_pull", "name": "Illuminate\\Support\\Arr::pull", "doc": "&quot;Get a value from the array, and remove it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_set", "name": "Illuminate\\Support\\Arr::set", "doc": "&quot;Set an array item to a given value using \&quot;dot\&quot; notation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_sort", "name": "Illuminate\\Support\\Arr::sort", "doc": "&quot;Sort the array using the given Closure.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Arr", "fromLink": "Illuminate/Support/Arr.html", "link": "Illuminate/Support/Arr.html#method_where", "name": "Illuminate\\Support\\Arr::where", "doc": "&quot;Filter the array using the given Closure.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/ClassLoader.html", "name": "Illuminate\\Support\\ClassLoader", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\ClassLoader", "fromLink": "Illuminate/Support/ClassLoader.html", "link": "Illuminate/Support/ClassLoader.html#method_load", "name": "Illuminate\\Support\\ClassLoader::load", "doc": "&quot;Load the given class file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ClassLoader", "fromLink": "Illuminate/Support/ClassLoader.html", "link": "Illuminate/Support/ClassLoader.html#method_normalizeClass", "name": "Illuminate\\Support\\ClassLoader::normalizeClass", "doc": "&quot;Get the normal file name for a class.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ClassLoader", "fromLink": "Illuminate/Support/ClassLoader.html", "link": "Illuminate/Support/ClassLoader.html#method_register", "name": "Illuminate\\Support\\ClassLoader::register", "doc": "&quot;Register the given class loader on the auto-loader stack.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ClassLoader", "fromLink": "Illuminate/Support/ClassLoader.html", "link": "Illuminate/Support/ClassLoader.html#method_addDirectories", "name": "Illuminate\\Support\\ClassLoader::addDirectories", "doc": "&quot;Add directories to the class loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ClassLoader", "fromLink": "Illuminate/Support/ClassLoader.html", "link": "Illuminate/Support/ClassLoader.html#method_removeDirectories", "name": "Illuminate\\Support\\ClassLoader::removeDirectories", "doc": "&quot;Remove directories from the class loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ClassLoader", "fromLink": "Illuminate/Support/ClassLoader.html", "link": "Illuminate/Support/ClassLoader.html#method_getDirectories", "name": "Illuminate\\Support\\ClassLoader::getDirectories", "doc": "&quot;Gets all the directories registered with the loader.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/Collection.html", "name": "Illuminate\\Support\\Collection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method___construct", "name": "Illuminate\\Support\\Collection::__construct", "doc": "&quot;Create a new collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_make", "name": "Illuminate\\Support\\Collection::make", "doc": "&quot;Create a new collection instance if the value isn&#039;t one already.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_all", "name": "Illuminate\\Support\\Collection::all", "doc": "&quot;Get all of the items in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_collapse", "name": "Illuminate\\Support\\Collection::collapse", "doc": "&quot;Collapse the collection items into a single array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_contains", "name": "Illuminate\\Support\\Collection::contains", "doc": "&quot;Determine if an item exists in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_diff", "name": "Illuminate\\Support\\Collection::diff", "doc": "&quot;Diff the collection with the given items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_each", "name": "Illuminate\\Support\\Collection::each", "doc": "&quot;Execute a callback over each item.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_fetch", "name": "Illuminate\\Support\\Collection::fetch", "doc": "&quot;Fetch a nested element of the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_filter", "name": "Illuminate\\Support\\Collection::filter", "doc": "&quot;Run a filter over each of the items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_first", "name": "Illuminate\\Support\\Collection::first", "doc": "&quot;Get the first item from the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_flatten", "name": "Illuminate\\Support\\Collection::flatten", "doc": "&quot;Get a flattened array of the items in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_flip", "name": "Illuminate\\Support\\Collection::flip", "doc": "&quot;Flip the items in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_forget", "name": "Illuminate\\Support\\Collection::forget", "doc": "&quot;Remove an item from the collection by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_get", "name": "Illuminate\\Support\\Collection::get", "doc": "&quot;Get an item from the collection by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_groupBy", "name": "Illuminate\\Support\\Collection::groupBy", "doc": "&quot;Group an associative array by a field or Closure value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_getGroupByKey", "name": "Illuminate\\Support\\Collection::getGroupByKey", "doc": "&quot;Get the \&quot;group by\&quot; key value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_keyBy", "name": "Illuminate\\Support\\Collection::keyBy", "doc": "&quot;Key an associative array by a field.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_has", "name": "Illuminate\\Support\\Collection::has", "doc": "&quot;Determine if an item exists in the collection by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_implode", "name": "Illuminate\\Support\\Collection::implode", "doc": "&quot;Concatenate values of a given key as a string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_intersect", "name": "Illuminate\\Support\\Collection::intersect", "doc": "&quot;Intersect the collection with the given items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_isEmpty", "name": "Illuminate\\Support\\Collection::isEmpty", "doc": "&quot;Determine if the collection is empty or not.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_keys", "name": "Illuminate\\Support\\Collection::keys", "doc": "&quot;Get the keys of the collection items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_last", "name": "Illuminate\\Support\\Collection::last", "doc": "&quot;Get the last item from the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_lists", "name": "Illuminate\\Support\\Collection::lists", "doc": "&quot;Get an array with the values of a given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_map", "name": "Illuminate\\Support\\Collection::map", "doc": "&quot;Run a map over each of the items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_merge", "name": "Illuminate\\Support\\Collection::merge", "doc": "&quot;Merge the collection with the given items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_pop", "name": "Illuminate\\Support\\Collection::pop", "doc": "&quot;Get and remove the last item from the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_prepend", "name": "Illuminate\\Support\\Collection::prepend", "doc": "&quot;Push an item onto the beginning of the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_push", "name": "Illuminate\\Support\\Collection::push", "doc": "&quot;Push an item onto the end of the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_pull", "name": "Illuminate\\Support\\Collection::pull", "doc": "&quot;Pulls an item from the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_put", "name": "Illuminate\\Support\\Collection::put", "doc": "&quot;Put an item in the collection by key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_random", "name": "Illuminate\\Support\\Collection::random", "doc": "&quot;Get one or more items randomly from the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_reduce", "name": "Illuminate\\Support\\Collection::reduce", "doc": "&quot;Reduce the collection to a single value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_reject", "name": "Illuminate\\Support\\Collection::reject", "doc": "&quot;Create a collection of all elements that do not pass a given truth test.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_reverse", "name": "Illuminate\\Support\\Collection::reverse", "doc": "&quot;Reverse items order.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_search", "name": "Illuminate\\Support\\Collection::search", "doc": "&quot;Search the collection for a given value and return the corresponding key if successful.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_shift", "name": "Illuminate\\Support\\Collection::shift", "doc": "&quot;Get and remove the first item from the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_shuffle", "name": "Illuminate\\Support\\Collection::shuffle", "doc": "&quot;Shuffle the items in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_slice", "name": "Illuminate\\Support\\Collection::slice", "doc": "&quot;Slice the underlying collection array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_chunk", "name": "Illuminate\\Support\\Collection::chunk", "doc": "&quot;Chunk the underlying collection array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_sort", "name": "Illuminate\\Support\\Collection::sort", "doc": "&quot;Sort through each item with a callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_sortBy", "name": "Illuminate\\Support\\Collection::sortBy", "doc": "&quot;Sort the collection using the given Closure.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_sortByDesc", "name": "Illuminate\\Support\\Collection::sortByDesc", "doc": "&quot;Sort the collection in descending order using the given Closure.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_splice", "name": "Illuminate\\Support\\Collection::splice", "doc": "&quot;Splice portion of the underlying collection array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_sum", "name": "Illuminate\\Support\\Collection::sum", "doc": "&quot;Get the sum of the given values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_take", "name": "Illuminate\\Support\\Collection::take", "doc": "&quot;Take the first or last {$limit} items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_transform", "name": "Illuminate\\Support\\Collection::transform", "doc": "&quot;Transform each item in the collection using a callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_unique", "name": "Illuminate\\Support\\Collection::unique", "doc": "&quot;Return only unique items from the collection array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_values", "name": "Illuminate\\Support\\Collection::values", "doc": "&quot;Reset the keys on the underlying array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_valueRetriever", "name": "Illuminate\\Support\\Collection::valueRetriever", "doc": "&quot;Get a value retrieving callback.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_toArray", "name": "Illuminate\\Support\\Collection::toArray", "doc": "&quot;Get the collection of items as a plain array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_jsonSerialize", "name": "Illuminate\\Support\\Collection::jsonSerialize", "doc": "&quot;Convert the object into something JSON serializable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_toJson", "name": "Illuminate\\Support\\Collection::toJson", "doc": "&quot;Get the collection of items as JSON.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_getIterator", "name": "Illuminate\\Support\\Collection::getIterator", "doc": "&quot;Get an iterator for the items.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_getCachingIterator", "name": "Illuminate\\Support\\Collection::getCachingIterator", "doc": "&quot;Get a CachingIterator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_count", "name": "Illuminate\\Support\\Collection::count", "doc": "&quot;Count the number of items in the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_offsetExists", "name": "Illuminate\\Support\\Collection::offsetExists", "doc": "&quot;Determine if an item exists at an offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_offsetGet", "name": "Illuminate\\Support\\Collection::offsetGet", "doc": "&quot;Get an item at a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_offsetSet", "name": "Illuminate\\Support\\Collection::offsetSet", "doc": "&quot;Set the item at a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_offsetUnset", "name": "Illuminate\\Support\\Collection::offsetUnset", "doc": "&quot;Unset the item at a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method___toString", "name": "Illuminate\\Support\\Collection::__toString", "doc": "&quot;Convert the collection to its string representation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Collection", "fromLink": "Illuminate/Support/Collection.html", "link": "Illuminate/Support/Collection.html#method_getArrayableItems", "name": "Illuminate\\Support\\Collection::getArrayableItems", "doc": "&quot;Results array of items from Collection or ArrayableInterface.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/ArrayableInterface.html", "name": "Illuminate\\Support\\Contracts\\ArrayableInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\ArrayableInterface", "fromLink": "Illuminate/Support/Contracts/ArrayableInterface.html", "link": "Illuminate/Support/Contracts/ArrayableInterface.html#method_toArray", "name": "Illuminate\\Support\\Contracts\\ArrayableInterface::toArray", "doc": "&quot;Get the instance as an array.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/JsonableInterface.html", "name": "Illuminate\\Support\\Contracts\\JsonableInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\JsonableInterface", "fromLink": "Illuminate/Support/Contracts/JsonableInterface.html", "link": "Illuminate/Support/Contracts/JsonableInterface.html#method_toJson", "name": "Illuminate\\Support\\Contracts\\JsonableInterface::toJson", "doc": "&quot;Convert the object to its JSON representation.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/MessageProviderInterface.html", "name": "Illuminate\\Support\\Contracts\\MessageProviderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\MessageProviderInterface", "fromLink": "Illuminate/Support/Contracts/MessageProviderInterface.html", "link": "Illuminate/Support/Contracts/MessageProviderInterface.html#method_getMessageBag", "name": "Illuminate\\Support\\Contracts\\MessageProviderInterface::getMessageBag", "doc": "&quot;Get the messages for the instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/RenderableInterface.html", "name": "Illuminate\\Support\\Contracts\\RenderableInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\RenderableInterface", "fromLink": "Illuminate/Support/Contracts/RenderableInterface.html", "link": "Illuminate/Support/Contracts/RenderableInterface.html#method_render", "name": "Illuminate\\Support\\Contracts\\RenderableInterface::render", "doc": "&quot;Get the evaluated contents of the object.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Contracts", "fromLink": "Illuminate/Support/Contracts.html", "link": "Illuminate/Support/Contracts/ResponsePreparerInterface.html", "name": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface", "fromLink": "Illuminate/Support/Contracts/ResponsePreparerInterface.html", "link": "Illuminate/Support/Contracts/ResponsePreparerInterface.html#method_prepareResponse", "name": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface::prepareResponse", "doc": "&quot;Prepare the given value as a Response object.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface", "fromLink": "Illuminate/Support/Contracts/ResponsePreparerInterface.html", "link": "Illuminate/Support/Contracts/ResponsePreparerInterface.html#method_readyForResponses", "name": "Illuminate\\Support\\Contracts\\ResponsePreparerInterface::readyForResponses", "doc": "&quot;Determine if provider is ready to return responses.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/App.html", "name": "Illuminate\\Support\\Facades\\App", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\App", "fromLink": "Illuminate/Support/Facades/App.html", "link": "Illuminate/Support/Facades/App.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\App::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Artisan.html", "name": "Illuminate\\Support\\Facades\\Artisan", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Artisan", "fromLink": "Illuminate/Support/Facades/Artisan.html", "link": "Illuminate/Support/Facades/Artisan.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Artisan::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Auth.html", "name": "Illuminate\\Support\\Facades\\Auth", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Auth", "fromLink": "Illuminate/Support/Facades/Auth.html", "link": "Illuminate/Support/Facades/Auth.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Auth::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Blade.html", "name": "Illuminate\\Support\\Facades\\Blade", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Blade", "fromLink": "Illuminate/Support/Facades/Blade.html", "link": "Illuminate/Support/Facades/Blade.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Blade::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Cache.html", "name": "Illuminate\\Support\\Facades\\Cache", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Cache", "fromLink": "Illuminate/Support/Facades/Cache.html", "link": "Illuminate/Support/Facades/Cache.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Cache::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Config.html", "name": "Illuminate\\Support\\Facades\\Config", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Config", "fromLink": "Illuminate/Support/Facades/Config.html", "link": "Illuminate/Support/Facades/Config.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Config::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Cookie.html", "name": "Illuminate\\Support\\Facades\\Cookie", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Cookie", "fromLink": "Illuminate/Support/Facades/Cookie.html", "link": "Illuminate/Support/Facades/Cookie.html#method_has", "name": "Illuminate\\Support\\Facades\\Cookie::has", "doc": "&quot;Determine if a cookie exists on the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Cookie", "fromLink": "Illuminate/Support/Facades/Cookie.html", "link": "Illuminate/Support/Facades/Cookie.html#method_get", "name": "Illuminate\\Support\\Facades\\Cookie::get", "doc": "&quot;Retrieve a cookie from the request.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Cookie", "fromLink": "Illuminate/Support/Facades/Cookie.html", "link": "Illuminate/Support/Facades/Cookie.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Cookie::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Crypt.html", "name": "Illuminate\\Support\\Facades\\Crypt", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Crypt", "fromLink": "Illuminate/Support/Facades/Crypt.html", "link": "Illuminate/Support/Facades/Crypt.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Crypt::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/DB.html", "name": "Illuminate\\Support\\Facades\\DB", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\DB", "fromLink": "Illuminate/Support/Facades/DB.html", "link": "Illuminate/Support/Facades/DB.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\DB::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Event.html", "name": "Illuminate\\Support\\Facades\\Event", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Event", "fromLink": "Illuminate/Support/Facades/Event.html", "link": "Illuminate/Support/Facades/Event.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Event::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Facade.html", "name": "Illuminate\\Support\\Facades\\Facade", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_swap", "name": "Illuminate\\Support\\Facades\\Facade::swap", "doc": "&quot;Hotswap the underlying instance behind the facade.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_shouldReceive", "name": "Illuminate\\Support\\Facades\\Facade::shouldReceive", "doc": "&quot;Initiate a mock expectation on the facade.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_createFreshMockInstance", "name": "Illuminate\\Support\\Facades\\Facade::createFreshMockInstance", "doc": "&quot;Create a fresh mock instance for the given class.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_createMockByName", "name": "Illuminate\\Support\\Facades\\Facade::createMockByName", "doc": "&quot;Create a fresh mock instance for the given class.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_isMock", "name": "Illuminate\\Support\\Facades\\Facade::isMock", "doc": "&quot;Determines whether a mock is set as the instance of the facade.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_getMockableClass", "name": "Illuminate\\Support\\Facades\\Facade::getMockableClass", "doc": "&quot;Get the mockable class for the bound instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_getFacadeRoot", "name": "Illuminate\\Support\\Facades\\Facade::getFacadeRoot", "doc": "&quot;Get the root object behind the facade.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Facade::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_resolveFacadeInstance", "name": "Illuminate\\Support\\Facades\\Facade::resolveFacadeInstance", "doc": "&quot;Resolve the facade root instance from the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_clearResolvedInstance", "name": "Illuminate\\Support\\Facades\\Facade::clearResolvedInstance", "doc": "&quot;Clear a resolved facade instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_clearResolvedInstances", "name": "Illuminate\\Support\\Facades\\Facade::clearResolvedInstances", "doc": "&quot;Clear all of the resolved instances.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_getFacadeApplication", "name": "Illuminate\\Support\\Facades\\Facade::getFacadeApplication", "doc": "&quot;Get the application instance behind the facade.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method_setFacadeApplication", "name": "Illuminate\\Support\\Facades\\Facade::setFacadeApplication", "doc": "&quot;Set the application instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Facade", "fromLink": "Illuminate/Support/Facades/Facade.html", "link": "Illuminate/Support/Facades/Facade.html#method___callStatic", "name": "Illuminate\\Support\\Facades\\Facade::__callStatic", "doc": "&quot;Handle dynamic, static calls to the object.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/File.html", "name": "Illuminate\\Support\\Facades\\File", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\File", "fromLink": "Illuminate/Support/Facades/File.html", "link": "Illuminate/Support/Facades/File.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\File::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Form.html", "name": "Illuminate\\Support\\Facades\\Form", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Form", "fromLink": "Illuminate/Support/Facades/Form.html", "link": "Illuminate/Support/Facades/Form.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Form::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/HTML.html", "name": "Illuminate\\Support\\Facades\\HTML", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\HTML", "fromLink": "Illuminate/Support/Facades/HTML.html", "link": "Illuminate/Support/Facades/HTML.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\HTML::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Hash.html", "name": "Illuminate\\Support\\Facades\\Hash", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Hash", "fromLink": "Illuminate/Support/Facades/Hash.html", "link": "Illuminate/Support/Facades/Hash.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Hash::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Input.html", "name": "Illuminate\\Support\\Facades\\Input", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Input", "fromLink": "Illuminate/Support/Facades/Input.html", "link": "Illuminate/Support/Facades/Input.html#method_get", "name": "Illuminate\\Support\\Facades\\Input::get", "doc": "&quot;Get an item from the input data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Input", "fromLink": "Illuminate/Support/Facades/Input.html", "link": "Illuminate/Support/Facades/Input.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Input::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Lang.html", "name": "Illuminate\\Support\\Facades\\Lang", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Lang", "fromLink": "Illuminate/Support/Facades/Lang.html", "link": "Illuminate/Support/Facades/Lang.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Lang::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Log.html", "name": "Illuminate\\Support\\Facades\\Log", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Log", "fromLink": "Illuminate/Support/Facades/Log.html", "link": "Illuminate/Support/Facades/Log.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Log::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Mail.html", "name": "Illuminate\\Support\\Facades\\Mail", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Mail", "fromLink": "Illuminate/Support/Facades/Mail.html", "link": "Illuminate/Support/Facades/Mail.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Mail::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Paginator.html", "name": "Illuminate\\Support\\Facades\\Paginator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Paginator", "fromLink": "Illuminate/Support/Facades/Paginator.html", "link": "Illuminate/Support/Facades/Paginator.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Paginator::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Password.html", "name": "Illuminate\\Support\\Facades\\Password", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Password", "fromLink": "Illuminate/Support/Facades/Password.html", "link": "Illuminate/Support/Facades/Password.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Password::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Queue.html", "name": "Illuminate\\Support\\Facades\\Queue", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Queue", "fromLink": "Illuminate/Support/Facades/Queue.html", "link": "Illuminate/Support/Facades/Queue.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Queue::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Redirect.html", "name": "Illuminate\\Support\\Facades\\Redirect", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Redirect", "fromLink": "Illuminate/Support/Facades/Redirect.html", "link": "Illuminate/Support/Facades/Redirect.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Redirect::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Redis.html", "name": "Illuminate\\Support\\Facades\\Redis", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Redis", "fromLink": "Illuminate/Support/Facades/Redis.html", "link": "Illuminate/Support/Facades/Redis.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Redis::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Request.html", "name": "Illuminate\\Support\\Facades\\Request", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Request", "fromLink": "Illuminate/Support/Facades/Request.html", "link": "Illuminate/Support/Facades/Request.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Request::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Response.html", "name": "Illuminate\\Support\\Facades\\Response", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Response", "fromLink": "Illuminate/Support/Facades/Response.html", "link": "Illuminate/Support/Facades/Response.html#method_make", "name": "Illuminate\\Support\\Facades\\Response::make", "doc": "&quot;Return a new response from the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Response", "fromLink": "Illuminate/Support/Facades/Response.html", "link": "Illuminate/Support/Facades/Response.html#method_view", "name": "Illuminate\\Support\\Facades\\Response::view", "doc": "&quot;Return a new view response from the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Response", "fromLink": "Illuminate/Support/Facades/Response.html", "link": "Illuminate/Support/Facades/Response.html#method_json", "name": "Illuminate\\Support\\Facades\\Response::json", "doc": "&quot;Return a new JSON response from the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Response", "fromLink": "Illuminate/Support/Facades/Response.html", "link": "Illuminate/Support/Facades/Response.html#method_jsonp", "name": "Illuminate\\Support\\Facades\\Response::jsonp", "doc": "&quot;Return a new JSONP response from the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Response", "fromLink": "Illuminate/Support/Facades/Response.html", "link": "Illuminate/Support/Facades/Response.html#method_stream", "name": "Illuminate\\Support\\Facades\\Response::stream", "doc": "&quot;Return a new streamed response from the application.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Response", "fromLink": "Illuminate/Support/Facades/Response.html", "link": "Illuminate/Support/Facades/Response.html#method_download", "name": "Illuminate\\Support\\Facades\\Response::download", "doc": "&quot;Create a new file download response.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Route.html", "name": "Illuminate\\Support\\Facades\\Route", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Route", "fromLink": "Illuminate/Support/Facades/Route.html", "link": "Illuminate/Support/Facades/Route.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Route::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/SSH.html", "name": "Illuminate\\Support\\Facades\\SSH", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\SSH", "fromLink": "Illuminate/Support/Facades/SSH.html", "link": "Illuminate/Support/Facades/SSH.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\SSH::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Schema.html", "name": "Illuminate\\Support\\Facades\\Schema", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Schema", "fromLink": "Illuminate/Support/Facades/Schema.html", "link": "Illuminate/Support/Facades/Schema.html#method_connection", "name": "Illuminate\\Support\\Facades\\Schema::connection", "doc": "&quot;Get a schema builder instance for a connection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Schema", "fromLink": "Illuminate/Support/Facades/Schema.html", "link": "Illuminate/Support/Facades/Schema.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Schema::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Session.html", "name": "Illuminate\\Support\\Facades\\Session", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Session", "fromLink": "Illuminate/Support/Facades/Session.html", "link": "Illuminate/Support/Facades/Session.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Session::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/URL.html", "name": "Illuminate\\Support\\Facades\\URL", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\URL", "fromLink": "Illuminate/Support/Facades/URL.html", "link": "Illuminate/Support/Facades/URL.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\URL::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/Validator.html", "name": "Illuminate\\Support\\Facades\\Validator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\Validator", "fromLink": "Illuminate/Support/Facades/Validator.html", "link": "Illuminate/Support/Facades/Validator.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\Validator::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support\\Facades", "fromLink": "Illuminate/Support/Facades.html", "link": "Illuminate/Support/Facades/View.html", "name": "Illuminate\\Support\\Facades\\View", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Facades\\View", "fromLink": "Illuminate/Support/Facades/View.html", "link": "Illuminate/Support/Facades/View.html#method_getFacadeAccessor", "name": "Illuminate\\Support\\Facades\\View::getFacadeAccessor", "doc": "&quot;Get the registered name of the component.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/Fluent.html", "name": "Illuminate\\Support\\Fluent", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method___construct", "name": "Illuminate\\Support\\Fluent::__construct", "doc": "&quot;Create a new fluent container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_get", "name": "Illuminate\\Support\\Fluent::get", "doc": "&quot;Get an attribute from the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_getAttributes", "name": "Illuminate\\Support\\Fluent::getAttributes", "doc": "&quot;Get the attributes from the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_toArray", "name": "Illuminate\\Support\\Fluent::toArray", "doc": "&quot;Convert the Fluent instance to an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_jsonSerialize", "name": "Illuminate\\Support\\Fluent::jsonSerialize", "doc": "&quot;Convert the object into something JSON serializable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_toJson", "name": "Illuminate\\Support\\Fluent::toJson", "doc": "&quot;Convert the Fluent instance to JSON.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_offsetExists", "name": "Illuminate\\Support\\Fluent::offsetExists", "doc": "&quot;Determine if the given offset exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_offsetGet", "name": "Illuminate\\Support\\Fluent::offsetGet", "doc": "&quot;Get the value for a given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_offsetSet", "name": "Illuminate\\Support\\Fluent::offsetSet", "doc": "&quot;Set the value at the given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method_offsetUnset", "name": "Illuminate\\Support\\Fluent::offsetUnset", "doc": "&quot;Unset the value at the given offset.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method___call", "name": "Illuminate\\Support\\Fluent::__call", "doc": "&quot;Handle dynamic calls to the container to set attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method___get", "name": "Illuminate\\Support\\Fluent::__get", "doc": "&quot;Dynamically retrieve the value of an attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method___set", "name": "Illuminate\\Support\\Fluent::__set", "doc": "&quot;Dynamically set the value of an attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method___isset", "name": "Illuminate\\Support\\Fluent::__isset", "doc": "&quot;Dynamically check if an attribute is set.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Fluent", "fromLink": "Illuminate/Support/Fluent.html", "link": "Illuminate/Support/Fluent.html#method___unset", "name": "Illuminate\\Support\\Fluent::__unset", "doc": "&quot;Dynamically unset an attribute.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/Manager.html", "name": "Illuminate\\Support\\Manager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Manager", "fromLink": "Illuminate/Support/Manager.html", "link": "Illuminate/Support/Manager.html#method___construct", "name": "Illuminate\\Support\\Manager::__construct", "doc": "&quot;Create a new manager instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Manager", "fromLink": "Illuminate/Support/Manager.html", "link": "Illuminate/Support/Manager.html#method_getDefaultDriver", "name": "Illuminate\\Support\\Manager::getDefaultDriver", "doc": "&quot;Get the default driver name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Manager", "fromLink": "Illuminate/Support/Manager.html", "link": "Illuminate/Support/Manager.html#method_driver", "name": "Illuminate\\Support\\Manager::driver", "doc": "&quot;Get a driver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Manager", "fromLink": "Illuminate/Support/Manager.html", "link": "Illuminate/Support/Manager.html#method_createDriver", "name": "Illuminate\\Support\\Manager::createDriver", "doc": "&quot;Create a new driver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Manager", "fromLink": "Illuminate/Support/Manager.html", "link": "Illuminate/Support/Manager.html#method_callCustomCreator", "name": "Illuminate\\Support\\Manager::callCustomCreator", "doc": "&quot;Call a custom driver creator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Manager", "fromLink": "Illuminate/Support/Manager.html", "link": "Illuminate/Support/Manager.html#method_extend", "name": "Illuminate\\Support\\Manager::extend", "doc": "&quot;Register a custom driver creator Closure.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Manager", "fromLink": "Illuminate/Support/Manager.html", "link": "Illuminate/Support/Manager.html#method_getDrivers", "name": "Illuminate\\Support\\Manager::getDrivers", "doc": "&quot;Get all of the created \&quot;drivers\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Manager", "fromLink": "Illuminate/Support/Manager.html", "link": "Illuminate/Support/Manager.html#method___call", "name": "Illuminate\\Support\\Manager::__call", "doc": "&quot;Dynamically call the default driver instance.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/MessageBag.html", "name": "Illuminate\\Support\\MessageBag", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method___construct", "name": "Illuminate\\Support\\MessageBag::__construct", "doc": "&quot;Create a new message bag instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_add", "name": "Illuminate\\Support\\MessageBag::add", "doc": "&quot;Add a message to the bag.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_merge", "name": "Illuminate\\Support\\MessageBag::merge", "doc": "&quot;Merge a new array of messages into the bag.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_isUnique", "name": "Illuminate\\Support\\MessageBag::isUnique", "doc": "&quot;Determine if a key and message combination already exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_has", "name": "Illuminate\\Support\\MessageBag::has", "doc": "&quot;Determine if messages exist for a given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_first", "name": "Illuminate\\Support\\MessageBag::first", "doc": "&quot;Get the first message from the bag for a given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_get", "name": "Illuminate\\Support\\MessageBag::get", "doc": "&quot;Get all of the messages from the bag for a given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_all", "name": "Illuminate\\Support\\MessageBag::all", "doc": "&quot;Get all of the messages for every key in the bag.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_transform", "name": "Illuminate\\Support\\MessageBag::transform", "doc": "&quot;Format an array of messages.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_checkFormat", "name": "Illuminate\\Support\\MessageBag::checkFormat", "doc": "&quot;Get the appropriate format based on the given format.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_getMessages", "name": "Illuminate\\Support\\MessageBag::getMessages", "doc": "&quot;Get the raw messages in the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_getMessageBag", "name": "Illuminate\\Support\\MessageBag::getMessageBag", "doc": "&quot;Get the messages for the instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_getFormat", "name": "Illuminate\\Support\\MessageBag::getFormat", "doc": "&quot;Get the default message format.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_setFormat", "name": "Illuminate\\Support\\MessageBag::setFormat", "doc": "&quot;Set the default message format.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_isEmpty", "name": "Illuminate\\Support\\MessageBag::isEmpty", "doc": "&quot;Determine if the message bag has any messages.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_any", "name": "Illuminate\\Support\\MessageBag::any", "doc": "&quot;Determine if the message bag has any messages.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_count", "name": "Illuminate\\Support\\MessageBag::count", "doc": "&quot;Get the number of messages in the container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_toArray", "name": "Illuminate\\Support\\MessageBag::toArray", "doc": "&quot;Get the instance as an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_jsonSerialize", "name": "Illuminate\\Support\\MessageBag::jsonSerialize", "doc": "&quot;Convert the object into something JSON serializable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method_toJson", "name": "Illuminate\\Support\\MessageBag::toJson", "doc": "&quot;Convert the object to its JSON representation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\MessageBag", "fromLink": "Illuminate/Support/MessageBag.html", "link": "Illuminate/Support/MessageBag.html#method___toString", "name": "Illuminate\\Support\\MessageBag::__toString", "doc": "&quot;Convert the message bag to its string representation.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/NamespacedItemResolver.html", "name": "Illuminate\\Support\\NamespacedItemResolver", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\NamespacedItemResolver", "fromLink": "Illuminate/Support/NamespacedItemResolver.html", "link": "Illuminate/Support/NamespacedItemResolver.html#method_parseKey", "name": "Illuminate\\Support\\NamespacedItemResolver::parseKey", "doc": "&quot;Parse a key into namespace, group, and item.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\NamespacedItemResolver", "fromLink": "Illuminate/Support/NamespacedItemResolver.html", "link": "Illuminate/Support/NamespacedItemResolver.html#method_parseBasicSegments", "name": "Illuminate\\Support\\NamespacedItemResolver::parseBasicSegments", "doc": "&quot;Parse an array of basic segments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\NamespacedItemResolver", "fromLink": "Illuminate/Support/NamespacedItemResolver.html", "link": "Illuminate/Support/NamespacedItemResolver.html#method_parseNamespacedSegments", "name": "Illuminate\\Support\\NamespacedItemResolver::parseNamespacedSegments", "doc": "&quot;Parse an array of namespaced segments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\NamespacedItemResolver", "fromLink": "Illuminate/Support/NamespacedItemResolver.html", "link": "Illuminate/Support/NamespacedItemResolver.html#method_setParsedKey", "name": "Illuminate\\Support\\NamespacedItemResolver::setParsedKey", "doc": "&quot;Set the parsed value of a key.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/Pluralizer.html", "name": "Illuminate\\Support\\Pluralizer", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Pluralizer", "fromLink": "Illuminate/Support/Pluralizer.html", "link": "Illuminate/Support/Pluralizer.html#method_singular", "name": "Illuminate\\Support\\Pluralizer::singular", "doc": "&quot;Get the singular form of the given word.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Pluralizer", "fromLink": "Illuminate/Support/Pluralizer.html", "link": "Illuminate/Support/Pluralizer.html#method_plural", "name": "Illuminate\\Support\\Pluralizer::plural", "doc": "&quot;Get the plural form of the given word.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Pluralizer", "fromLink": "Illuminate/Support/Pluralizer.html", "link": "Illuminate/Support/Pluralizer.html#method_inflect", "name": "Illuminate\\Support\\Pluralizer::inflect", "doc": "&quot;Perform auto inflection on an English word.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Pluralizer", "fromLink": "Illuminate/Support/Pluralizer.html", "link": "Illuminate/Support/Pluralizer.html#method_uncountable", "name": "Illuminate\\Support\\Pluralizer::uncountable", "doc": "&quot;Determine if the given value is uncountable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Pluralizer", "fromLink": "Illuminate/Support/Pluralizer.html", "link": "Illuminate/Support/Pluralizer.html#method_matchCase", "name": "Illuminate\\Support\\Pluralizer::matchCase", "doc": "&quot;Attempt to match the case on two strings.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/SerializableClosure.html", "name": "Illuminate\\Support\\SerializableClosure", "doc": "&quot;Extends SuperClosure for backwards compatibility.&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\SerializableClosure", "fromLink": "Illuminate/Support/SerializableClosure.html", "link": "Illuminate/Support/SerializableClosure.html#method_getCode", "name": "Illuminate\\Support\\SerializableClosure::getCode", "doc": "&quot;Returns the code of the closure being serialized&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\SerializableClosure", "fromLink": "Illuminate/Support/SerializableClosure.html", "link": "Illuminate/Support/SerializableClosure.html#method_getVariables", "name": "Illuminate\\Support\\SerializableClosure::getVariables", "doc": "&quot;Returns the \&quot;used\&quot; variables of the closure being serialized&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\SerializableClosure", "fromLink": "Illuminate/Support/SerializableClosure.html", "link": "Illuminate/Support/SerializableClosure.html#method_determineCodeAndVariables", "name": "Illuminate\\Support\\SerializableClosure::determineCodeAndVariables", "doc": "&quot;Uses the serialize method directly to lazily fetch the code and variables if needed&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/ServiceProvider.html", "name": "Illuminate\\Support\\ServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method___construct", "name": "Illuminate\\Support\\ServiceProvider::__construct", "doc": "&quot;Create a new service provider instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_boot", "name": "Illuminate\\Support\\ServiceProvider::boot", "doc": "&quot;Bootstrap the application events.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_register", "name": "Illuminate\\Support\\ServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_package", "name": "Illuminate\\Support\\ServiceProvider::package", "doc": "&quot;Register the package&#039;s component namespaces.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_guessPackagePath", "name": "Illuminate\\Support\\ServiceProvider::guessPackagePath", "doc": "&quot;Guess the package path for the provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_getPackageNamespace", "name": "Illuminate\\Support\\ServiceProvider::getPackageNamespace", "doc": "&quot;Determine the namespace for a package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_commands", "name": "Illuminate\\Support\\ServiceProvider::commands", "doc": "&quot;Register the package&#039;s custom Artisan commands.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_getAppViewPath", "name": "Illuminate\\Support\\ServiceProvider::getAppViewPath", "doc": "&quot;Get the application package view path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_provides", "name": "Illuminate\\Support\\ServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_when", "name": "Illuminate\\Support\\ServiceProvider::when", "doc": "&quot;Get the events that trigger this service provider to register.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ServiceProvider", "fromLink": "Illuminate/Support/ServiceProvider.html", "link": "Illuminate/Support/ServiceProvider.html#method_isDeferred", "name": "Illuminate\\Support\\ServiceProvider::isDeferred", "doc": "&quot;Determine if the provider is deferred.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/Str.html", "name": "Illuminate\\Support\\Str", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_ascii", "name": "Illuminate\\Support\\Str::ascii", "doc": "&quot;Transliterate a UTF-8 value to ASCII.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_camel", "name": "Illuminate\\Support\\Str::camel", "doc": "&quot;Convert a value to camel case.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_contains", "name": "Illuminate\\Support\\Str::contains", "doc": "&quot;Determine if a given string contains a given substring.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_endsWith", "name": "Illuminate\\Support\\Str::endsWith", "doc": "&quot;Determine if a given string ends with a given substring.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_finish", "name": "Illuminate\\Support\\Str::finish", "doc": "&quot;Cap a string with a single instance of a given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_is", "name": "Illuminate\\Support\\Str::is", "doc": "&quot;Determine if a given string matches a given pattern.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_length", "name": "Illuminate\\Support\\Str::length", "doc": "&quot;Return the length of the given string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_limit", "name": "Illuminate\\Support\\Str::limit", "doc": "&quot;Limit the number of characters in a string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_lower", "name": "Illuminate\\Support\\Str::lower", "doc": "&quot;Convert the given string to lower-case.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_words", "name": "Illuminate\\Support\\Str::words", "doc": "&quot;Limit the number of words in a string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_parseCallback", "name": "Illuminate\\Support\\Str::parseCallback", "doc": "&quot;Parse a Class@method style callback into class and method.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_plural", "name": "Illuminate\\Support\\Str::plural", "doc": "&quot;Get the plural form of an English word.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_random", "name": "Illuminate\\Support\\Str::random", "doc": "&quot;Generate a more truly \&quot;random\&quot; alpha-numeric string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_quickRandom", "name": "Illuminate\\Support\\Str::quickRandom", "doc": "&quot;Generate a \&quot;random\&quot; alpha-numeric string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_upper", "name": "Illuminate\\Support\\Str::upper", "doc": "&quot;Convert the given string to upper-case.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_title", "name": "Illuminate\\Support\\Str::title", "doc": "&quot;Convert the given string to title case.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_singular", "name": "Illuminate\\Support\\Str::singular", "doc": "&quot;Get the singular form of an English word.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_slug", "name": "Illuminate\\Support\\Str::slug", "doc": "&quot;Generate a URL friendly \&quot;slug\&quot; from a given string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_snake", "name": "Illuminate\\Support\\Str::snake", "doc": "&quot;Convert a string to snake case.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_startsWith", "name": "Illuminate\\Support\\Str::startsWith", "doc": "&quot;Determine if a given string starts with a given substring.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Str", "fromLink": "Illuminate/Support/Str.html", "link": "Illuminate/Support/Str.html#method_studly", "name": "Illuminate\\Support\\Str::studly", "doc": "&quot;Convert a value to studly caps case.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Support\\Traits", "fromLink": "Illuminate/Support/Traits.html", "link": "Illuminate/Support/Traits/CapsuleManagerTrait.html", "name": "Illuminate\\Support\\Traits\\CapsuleManagerTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Traits\\CapsuleManagerTrait", "fromLink": "Illuminate/Support/Traits/CapsuleManagerTrait.html", "link": "Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setupContainer", "name": "Illuminate\\Support\\Traits\\CapsuleManagerTrait::setupContainer", "doc": "&quot;Setup the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Traits\\CapsuleManagerTrait", "fromLink": "Illuminate/Support/Traits/CapsuleManagerTrait.html", "link": "Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setAsGlobal", "name": "Illuminate\\Support\\Traits\\CapsuleManagerTrait::setAsGlobal", "doc": "&quot;Make this capsule instance available globally.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Traits\\CapsuleManagerTrait", "fromLink": "Illuminate/Support/Traits/CapsuleManagerTrait.html", "link": "Illuminate/Support/Traits/CapsuleManagerTrait.html#method_getContainer", "name": "Illuminate\\Support\\Traits\\CapsuleManagerTrait::getContainer", "doc": "&quot;Get the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Traits\\CapsuleManagerTrait", "fromLink": "Illuminate/Support/Traits/CapsuleManagerTrait.html", "link": "Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setContainer", "name": "Illuminate\\Support\\Traits\\CapsuleManagerTrait::setContainer", "doc": "&quot;Set the IoC container instance.&quot;"},
            
            {"type": "Trait", "fromName": "Illuminate\\Support\\Traits", "fromLink": "Illuminate/Support/Traits.html", "link": "Illuminate/Support/Traits/MacroableTrait.html", "name": "Illuminate\\Support\\Traits\\MacroableTrait", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\Traits\\MacroableTrait", "fromLink": "Illuminate/Support/Traits/MacroableTrait.html", "link": "Illuminate/Support/Traits/MacroableTrait.html#method_macro", "name": "Illuminate\\Support\\Traits\\MacroableTrait::macro", "doc": "&quot;Register a custom macro.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Traits\\MacroableTrait", "fromLink": "Illuminate/Support/Traits/MacroableTrait.html", "link": "Illuminate/Support/Traits/MacroableTrait.html#method_hasMacro", "name": "Illuminate\\Support\\Traits\\MacroableTrait::hasMacro", "doc": "&quot;Checks if macro is registered&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Traits\\MacroableTrait", "fromLink": "Illuminate/Support/Traits/MacroableTrait.html", "link": "Illuminate/Support/Traits/MacroableTrait.html#method___callStatic", "name": "Illuminate\\Support\\Traits\\MacroableTrait::__callStatic", "doc": "&quot;Dynamically handle calls to the class.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\Traits\\MacroableTrait", "fromLink": "Illuminate/Support/Traits/MacroableTrait.html", "link": "Illuminate/Support/Traits/MacroableTrait.html#method___call", "name": "Illuminate\\Support\\Traits\\MacroableTrait::__call", "doc": "&quot;Dynamically handle calls to the class.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Support", "fromLink": "Illuminate/Support.html", "link": "Illuminate/Support/ViewErrorBag.html", "name": "Illuminate\\Support\\ViewErrorBag", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Support\\ViewErrorBag", "fromLink": "Illuminate/Support/ViewErrorBag.html", "link": "Illuminate/Support/ViewErrorBag.html#method_hasBag", "name": "Illuminate\\Support\\ViewErrorBag::hasBag", "doc": "&quot;Checks if a named MessageBag exists in the bags.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ViewErrorBag", "fromLink": "Illuminate/Support/ViewErrorBag.html", "link": "Illuminate/Support/ViewErrorBag.html#method_getBag", "name": "Illuminate\\Support\\ViewErrorBag::getBag", "doc": "&quot;Get a MessageBag instance from the bags.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ViewErrorBag", "fromLink": "Illuminate/Support/ViewErrorBag.html", "link": "Illuminate/Support/ViewErrorBag.html#method_getBags", "name": "Illuminate\\Support\\ViewErrorBag::getBags", "doc": "&quot;Get all the bags.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ViewErrorBag", "fromLink": "Illuminate/Support/ViewErrorBag.html", "link": "Illuminate/Support/ViewErrorBag.html#method_put", "name": "Illuminate\\Support\\ViewErrorBag::put", "doc": "&quot;Add a new MessageBag instance to the bags.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ViewErrorBag", "fromLink": "Illuminate/Support/ViewErrorBag.html", "link": "Illuminate/Support/ViewErrorBag.html#method_count", "name": "Illuminate\\Support\\ViewErrorBag::count", "doc": "&quot;Get the number of messages in the default bag.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ViewErrorBag", "fromLink": "Illuminate/Support/ViewErrorBag.html", "link": "Illuminate/Support/ViewErrorBag.html#method___call", "name": "Illuminate\\Support\\ViewErrorBag::__call", "doc": "&quot;Dynamically call methods on the default bag.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ViewErrorBag", "fromLink": "Illuminate/Support/ViewErrorBag.html", "link": "Illuminate/Support/ViewErrorBag.html#method___get", "name": "Illuminate\\Support\\ViewErrorBag::__get", "doc": "&quot;Dynamically access a view error bag.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Support\\ViewErrorBag", "fromLink": "Illuminate/Support/ViewErrorBag.html", "link": "Illuminate/Support/ViewErrorBag.html#method___set", "name": "Illuminate\\Support\\ViewErrorBag::__set", "doc": "&quot;Dynamically set a view error bag.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Translation", "fromLink": "Illuminate/Translation.html", "link": "Illuminate/Translation/FileLoader.html", "name": "Illuminate\\Translation\\FileLoader", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Translation\\FileLoader", "fromLink": "Illuminate/Translation/FileLoader.html", "link": "Illuminate/Translation/FileLoader.html#method___construct", "name": "Illuminate\\Translation\\FileLoader::__construct", "doc": "&quot;Create a new file loader instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\FileLoader", "fromLink": "Illuminate/Translation/FileLoader.html", "link": "Illuminate/Translation/FileLoader.html#method_load", "name": "Illuminate\\Translation\\FileLoader::load", "doc": "&quot;Load the messages for the given locale.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\FileLoader", "fromLink": "Illuminate/Translation/FileLoader.html", "link": "Illuminate/Translation/FileLoader.html#method_loadNamespaced", "name": "Illuminate\\Translation\\FileLoader::loadNamespaced", "doc": "&quot;Load a namespaced translation group.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\FileLoader", "fromLink": "Illuminate/Translation/FileLoader.html", "link": "Illuminate/Translation/FileLoader.html#method_loadNamespaceOverrides", "name": "Illuminate\\Translation\\FileLoader::loadNamespaceOverrides", "doc": "&quot;Load a local namespaced translation group for overrides.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\FileLoader", "fromLink": "Illuminate/Translation/FileLoader.html", "link": "Illuminate/Translation/FileLoader.html#method_loadPath", "name": "Illuminate\\Translation\\FileLoader::loadPath", "doc": "&quot;Load a locale from a given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\FileLoader", "fromLink": "Illuminate/Translation/FileLoader.html", "link": "Illuminate/Translation/FileLoader.html#method_addNamespace", "name": "Illuminate\\Translation\\FileLoader::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Translation", "fromLink": "Illuminate/Translation.html", "link": "Illuminate/Translation/LoaderInterface.html", "name": "Illuminate\\Translation\\LoaderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Translation\\LoaderInterface", "fromLink": "Illuminate/Translation/LoaderInterface.html", "link": "Illuminate/Translation/LoaderInterface.html#method_load", "name": "Illuminate\\Translation\\LoaderInterface::load", "doc": "&quot;Load the messages for the given locale.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\LoaderInterface", "fromLink": "Illuminate/Translation/LoaderInterface.html", "link": "Illuminate/Translation/LoaderInterface.html#method_addNamespace", "name": "Illuminate\\Translation\\LoaderInterface::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Translation", "fromLink": "Illuminate/Translation.html", "link": "Illuminate/Translation/TranslationServiceProvider.html", "name": "Illuminate\\Translation\\TranslationServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Translation\\TranslationServiceProvider", "fromLink": "Illuminate/Translation/TranslationServiceProvider.html", "link": "Illuminate/Translation/TranslationServiceProvider.html#method_register", "name": "Illuminate\\Translation\\TranslationServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\TranslationServiceProvider", "fromLink": "Illuminate/Translation/TranslationServiceProvider.html", "link": "Illuminate/Translation/TranslationServiceProvider.html#method_registerLoader", "name": "Illuminate\\Translation\\TranslationServiceProvider::registerLoader", "doc": "&quot;Register the translation line loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\TranslationServiceProvider", "fromLink": "Illuminate/Translation/TranslationServiceProvider.html", "link": "Illuminate/Translation/TranslationServiceProvider.html#method_provides", "name": "Illuminate\\Translation\\TranslationServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Translation", "fromLink": "Illuminate/Translation.html", "link": "Illuminate/Translation/Translator.html", "name": "Illuminate\\Translation\\Translator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method___construct", "name": "Illuminate\\Translation\\Translator::__construct", "doc": "&quot;Create a new translator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_has", "name": "Illuminate\\Translation\\Translator::has", "doc": "&quot;Determine if a translation exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_get", "name": "Illuminate\\Translation\\Translator::get", "doc": "&quot;Get the translation for the given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_getLine", "name": "Illuminate\\Translation\\Translator::getLine", "doc": "&quot;Retrieve a language line out the loaded array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_makeReplacements", "name": "Illuminate\\Translation\\Translator::makeReplacements", "doc": "&quot;Make the place-holder replacements on a line.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_sortReplacements", "name": "Illuminate\\Translation\\Translator::sortReplacements", "doc": "&quot;Sort the replacements array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_choice", "name": "Illuminate\\Translation\\Translator::choice", "doc": "&quot;Get a translation according to an integer value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_trans", "name": "Illuminate\\Translation\\Translator::trans", "doc": "&quot;Get the translation for a given key.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_transChoice", "name": "Illuminate\\Translation\\Translator::transChoice", "doc": "&quot;Get a translation according to an integer value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_load", "name": "Illuminate\\Translation\\Translator::load", "doc": "&quot;Load the specified language group.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_isLoaded", "name": "Illuminate\\Translation\\Translator::isLoaded", "doc": "&quot;Determine if the given group has been loaded.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_addNamespace", "name": "Illuminate\\Translation\\Translator::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_parseKey", "name": "Illuminate\\Translation\\Translator::parseKey", "doc": "&quot;Parse a key into namespace, group, and item.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_parseLocale", "name": "Illuminate\\Translation\\Translator::parseLocale", "doc": "&quot;Get the array of locales to be checked.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_getSelector", "name": "Illuminate\\Translation\\Translator::getSelector", "doc": "&quot;Get the message selector instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_setSelector", "name": "Illuminate\\Translation\\Translator::setSelector", "doc": "&quot;Set the message selector instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_getLoader", "name": "Illuminate\\Translation\\Translator::getLoader", "doc": "&quot;Get the language line loader implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_locale", "name": "Illuminate\\Translation\\Translator::locale", "doc": "&quot;Get the default locale being used.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_getLocale", "name": "Illuminate\\Translation\\Translator::getLocale", "doc": "&quot;Get the default locale being used.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_setLocale", "name": "Illuminate\\Translation\\Translator::setLocale", "doc": "&quot;Set the default locale.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_getFallback", "name": "Illuminate\\Translation\\Translator::getFallback", "doc": "&quot;Get the fallback locale being used.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Translation\\Translator", "fromLink": "Illuminate/Translation/Translator.html", "link": "Illuminate/Translation/Translator.html#method_setFallback", "name": "Illuminate\\Translation\\Translator::setFallback", "doc": "&quot;Set the fallback locale being used.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Validation", "fromLink": "Illuminate/Validation.html", "link": "Illuminate/Validation/DatabasePresenceVerifier.html", "name": "Illuminate\\Validation\\DatabasePresenceVerifier", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Validation\\DatabasePresenceVerifier", "fromLink": "Illuminate/Validation/DatabasePresenceVerifier.html", "link": "Illuminate/Validation/DatabasePresenceVerifier.html#method___construct", "name": "Illuminate\\Validation\\DatabasePresenceVerifier::__construct", "doc": "&quot;Create a new database presence verifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\DatabasePresenceVerifier", "fromLink": "Illuminate/Validation/DatabasePresenceVerifier.html", "link": "Illuminate/Validation/DatabasePresenceVerifier.html#method_getCount", "name": "Illuminate\\Validation\\DatabasePresenceVerifier::getCount", "doc": "&quot;Count the number of objects in a collection having the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\DatabasePresenceVerifier", "fromLink": "Illuminate/Validation/DatabasePresenceVerifier.html", "link": "Illuminate/Validation/DatabasePresenceVerifier.html#method_getMultiCount", "name": "Illuminate\\Validation\\DatabasePresenceVerifier::getMultiCount", "doc": "&quot;Count the number of objects in a collection with the given values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\DatabasePresenceVerifier", "fromLink": "Illuminate/Validation/DatabasePresenceVerifier.html", "link": "Illuminate/Validation/DatabasePresenceVerifier.html#method_addWhere", "name": "Illuminate\\Validation\\DatabasePresenceVerifier::addWhere", "doc": "&quot;Add a \&quot;where\&quot; clause to the given query.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\DatabasePresenceVerifier", "fromLink": "Illuminate/Validation/DatabasePresenceVerifier.html", "link": "Illuminate/Validation/DatabasePresenceVerifier.html#method_table", "name": "Illuminate\\Validation\\DatabasePresenceVerifier::table", "doc": "&quot;Get a query builder for the given table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\DatabasePresenceVerifier", "fromLink": "Illuminate/Validation/DatabasePresenceVerifier.html", "link": "Illuminate/Validation/DatabasePresenceVerifier.html#method_setConnection", "name": "Illuminate\\Validation\\DatabasePresenceVerifier::setConnection", "doc": "&quot;Set the connection to be used.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Validation", "fromLink": "Illuminate/Validation.html", "link": "Illuminate/Validation/Factory.html", "name": "Illuminate\\Validation\\Factory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method___construct", "name": "Illuminate\\Validation\\Factory::__construct", "doc": "&quot;Create a new Validator factory instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_make", "name": "Illuminate\\Validation\\Factory::make", "doc": "&quot;Create a new Validator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_addExtensions", "name": "Illuminate\\Validation\\Factory::addExtensions", "doc": "&quot;Add the extensions to a validator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_resolve", "name": "Illuminate\\Validation\\Factory::resolve", "doc": "&quot;Resolve a new Validator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_extend", "name": "Illuminate\\Validation\\Factory::extend", "doc": "&quot;Register a custom validator extension.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_extendImplicit", "name": "Illuminate\\Validation\\Factory::extendImplicit", "doc": "&quot;Register a custom implicit validator extension.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_replacer", "name": "Illuminate\\Validation\\Factory::replacer", "doc": "&quot;Register a custom implicit validator message replacer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_resolver", "name": "Illuminate\\Validation\\Factory::resolver", "doc": "&quot;Set the Validator instance resolver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_getTranslator", "name": "Illuminate\\Validation\\Factory::getTranslator", "doc": "&quot;Get the Translator implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_getPresenceVerifier", "name": "Illuminate\\Validation\\Factory::getPresenceVerifier", "doc": "&quot;Get the Presence Verifier implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Factory", "fromLink": "Illuminate/Validation/Factory.html", "link": "Illuminate/Validation/Factory.html#method_setPresenceVerifier", "name": "Illuminate\\Validation\\Factory::setPresenceVerifier", "doc": "&quot;Set the Presence Verifier implementation.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Validation", "fromLink": "Illuminate/Validation.html", "link": "Illuminate/Validation/PresenceVerifierInterface.html", "name": "Illuminate\\Validation\\PresenceVerifierInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Validation\\PresenceVerifierInterface", "fromLink": "Illuminate/Validation/PresenceVerifierInterface.html", "link": "Illuminate/Validation/PresenceVerifierInterface.html#method_getCount", "name": "Illuminate\\Validation\\PresenceVerifierInterface::getCount", "doc": "&quot;Count the number of objects in a collection having the given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\PresenceVerifierInterface", "fromLink": "Illuminate/Validation/PresenceVerifierInterface.html", "link": "Illuminate/Validation/PresenceVerifierInterface.html#method_getMultiCount", "name": "Illuminate\\Validation\\PresenceVerifierInterface::getMultiCount", "doc": "&quot;Count the number of objects in a collection with the given values.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Validation", "fromLink": "Illuminate/Validation.html", "link": "Illuminate/Validation/ValidationServiceProvider.html", "name": "Illuminate\\Validation\\ValidationServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Validation\\ValidationServiceProvider", "fromLink": "Illuminate/Validation/ValidationServiceProvider.html", "link": "Illuminate/Validation/ValidationServiceProvider.html#method_register", "name": "Illuminate\\Validation\\ValidationServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\ValidationServiceProvider", "fromLink": "Illuminate/Validation/ValidationServiceProvider.html", "link": "Illuminate/Validation/ValidationServiceProvider.html#method_registerPresenceVerifier", "name": "Illuminate\\Validation\\ValidationServiceProvider::registerPresenceVerifier", "doc": "&quot;Register the database presence verifier.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\ValidationServiceProvider", "fromLink": "Illuminate/Validation/ValidationServiceProvider.html", "link": "Illuminate/Validation/ValidationServiceProvider.html#method_provides", "name": "Illuminate\\Validation\\ValidationServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Validation", "fromLink": "Illuminate/Validation.html", "link": "Illuminate/Validation/Validator.html", "name": "Illuminate\\Validation\\Validator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method___construct", "name": "Illuminate\\Validation\\Validator::__construct", "doc": "&quot;Create a new Validator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_parseData", "name": "Illuminate\\Validation\\Validator::parseData", "doc": "&quot;Parse the data and hydrate the files array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_explodeRules", "name": "Illuminate\\Validation\\Validator::explodeRules", "doc": "&quot;Explode the rules into an array of rules.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_sometimes", "name": "Illuminate\\Validation\\Validator::sometimes", "doc": "&quot;Add conditions to a given field based on a Closure.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_each", "name": "Illuminate\\Validation\\Validator::each", "doc": "&quot;Define a set of rules that apply to each element in an array attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_mergeRules", "name": "Illuminate\\Validation\\Validator::mergeRules", "doc": "&quot;Merge additional rules into a given attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_passes", "name": "Illuminate\\Validation\\Validator::passes", "doc": "&quot;Determine if the data passes the validation rules.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_fails", "name": "Illuminate\\Validation\\Validator::fails", "doc": "&quot;Determine if the data fails the validation rules.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validate", "name": "Illuminate\\Validation\\Validator::validate", "doc": "&quot;Validate a given attribute against a rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_valid", "name": "Illuminate\\Validation\\Validator::valid", "doc": "&quot;Returns the data which was valid.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_invalid", "name": "Illuminate\\Validation\\Validator::invalid", "doc": "&quot;Returns the data which was invalid.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getValue", "name": "Illuminate\\Validation\\Validator::getValue", "doc": "&quot;Get the value of a given attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_isValidatable", "name": "Illuminate\\Validation\\Validator::isValidatable", "doc": "&quot;Determine if the attribute is validatable.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_presentOrRuleIsImplicit", "name": "Illuminate\\Validation\\Validator::presentOrRuleIsImplicit", "doc": "&quot;Determine if the field is present, or the rule implies required.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_passesOptionalCheck", "name": "Illuminate\\Validation\\Validator::passesOptionalCheck", "doc": "&quot;Determine if the attribute passes any optional check.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_isImplicit", "name": "Illuminate\\Validation\\Validator::isImplicit", "doc": "&quot;Determine if a given rule implies the attribute is required.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_hasNotFailedPreviousRuleIfPresenceRule", "name": "Illuminate\\Validation\\Validator::hasNotFailedPreviousRuleIfPresenceRule", "doc": "&quot;Determine if it&#039;s a necessary presence validation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addFailure", "name": "Illuminate\\Validation\\Validator::addFailure", "doc": "&quot;Add a failed rule and error message to the collection.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addError", "name": "Illuminate\\Validation\\Validator::addError", "doc": "&quot;Add an error message to the validator&#039;s collection of messages.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateSometimes", "name": "Illuminate\\Validation\\Validator::validateSometimes", "doc": "&quot;\&quot;Validate\&quot; optional attributes.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateRequired", "name": "Illuminate\\Validation\\Validator::validateRequired", "doc": "&quot;Validate that a required attribute exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateFilled", "name": "Illuminate\\Validation\\Validator::validateFilled", "doc": "&quot;Validate the given attribute is filled if it is present.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_anyFailingRequired", "name": "Illuminate\\Validation\\Validator::anyFailingRequired", "doc": "&quot;Determine if any of the given attributes fail the required test.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_allFailingRequired", "name": "Illuminate\\Validation\\Validator::allFailingRequired", "doc": "&quot;Determine if all of the given attributes fail the required test.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateRequiredWith", "name": "Illuminate\\Validation\\Validator::validateRequiredWith", "doc": "&quot;Validate that an attribute exists when any other attribute exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateRequiredWithAll", "name": "Illuminate\\Validation\\Validator::validateRequiredWithAll", "doc": "&quot;Validate that an attribute exists when all other attributes exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateRequiredWithout", "name": "Illuminate\\Validation\\Validator::validateRequiredWithout", "doc": "&quot;Validate that an attribute exists when another attribute does not.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateRequiredWithoutAll", "name": "Illuminate\\Validation\\Validator::validateRequiredWithoutAll", "doc": "&quot;Validate that an attribute exists when all other attributes do not.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateRequiredIf", "name": "Illuminate\\Validation\\Validator::validateRequiredIf", "doc": "&quot;Validate that an attribute exists when another attribute has a given value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getPresentCount", "name": "Illuminate\\Validation\\Validator::getPresentCount", "doc": "&quot;Get the number of attributes in a list that are present.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateConfirmed", "name": "Illuminate\\Validation\\Validator::validateConfirmed", "doc": "&quot;Validate that an attribute has a matching confirmation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateSame", "name": "Illuminate\\Validation\\Validator::validateSame", "doc": "&quot;Validate that two attributes match.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateDifferent", "name": "Illuminate\\Validation\\Validator::validateDifferent", "doc": "&quot;Validate that an attribute is different from another attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateAccepted", "name": "Illuminate\\Validation\\Validator::validateAccepted", "doc": "&quot;Validate that an attribute was \&quot;accepted\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateArray", "name": "Illuminate\\Validation\\Validator::validateArray", "doc": "&quot;Validate that an attribute is an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateBoolean", "name": "Illuminate\\Validation\\Validator::validateBoolean", "doc": "&quot;Validate that an attribute is a boolean.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateInteger", "name": "Illuminate\\Validation\\Validator::validateInteger", "doc": "&quot;Validate that an attribute is an integer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateNumeric", "name": "Illuminate\\Validation\\Validator::validateNumeric", "doc": "&quot;Validate that an attribute is numeric.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateString", "name": "Illuminate\\Validation\\Validator::validateString", "doc": "&quot;Validate that an attribute is a string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateDigits", "name": "Illuminate\\Validation\\Validator::validateDigits", "doc": "&quot;Validate that an attribute has a given number of digits.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateDigitsBetween", "name": "Illuminate\\Validation\\Validator::validateDigitsBetween", "doc": "&quot;Validate that an attribute is between a given number of digits.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateSize", "name": "Illuminate\\Validation\\Validator::validateSize", "doc": "&quot;Validate the size of an attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateBetween", "name": "Illuminate\\Validation\\Validator::validateBetween", "doc": "&quot;Validate the size of an attribute is between a set of values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateMin", "name": "Illuminate\\Validation\\Validator::validateMin", "doc": "&quot;Validate the size of an attribute is greater than a minimum value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateMax", "name": "Illuminate\\Validation\\Validator::validateMax", "doc": "&quot;Validate the size of an attribute is less than a maximum value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getSize", "name": "Illuminate\\Validation\\Validator::getSize", "doc": "&quot;Get the size of an attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getStringSize", "name": "Illuminate\\Validation\\Validator::getStringSize", "doc": "&quot;Get the size of a string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateIn", "name": "Illuminate\\Validation\\Validator::validateIn", "doc": "&quot;Validate an attribute is contained within a list of values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateNotIn", "name": "Illuminate\\Validation\\Validator::validateNotIn", "doc": "&quot;Validate an attribute is not contained within a list of values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateUnique", "name": "Illuminate\\Validation\\Validator::validateUnique", "doc": "&quot;Validate the uniqueness of an attribute value on a given database table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getUniqueIds", "name": "Illuminate\\Validation\\Validator::getUniqueIds", "doc": "&quot;Get the excluded ID column and value for the unique rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getUniqueExtra", "name": "Illuminate\\Validation\\Validator::getUniqueExtra", "doc": "&quot;Get the extra conditions for a unique rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateExists", "name": "Illuminate\\Validation\\Validator::validateExists", "doc": "&quot;Validate the existence of an attribute value in a database table.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getExistCount", "name": "Illuminate\\Validation\\Validator::getExistCount", "doc": "&quot;Get the number of records that exist in storage.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getExtraExistConditions", "name": "Illuminate\\Validation\\Validator::getExtraExistConditions", "doc": "&quot;Get the extra exist conditions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getExtraConditions", "name": "Illuminate\\Validation\\Validator::getExtraConditions", "doc": "&quot;Get the extra conditions for a unique \/ exists rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateIp", "name": "Illuminate\\Validation\\Validator::validateIp", "doc": "&quot;Validate that an attribute is a valid IP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateEmail", "name": "Illuminate\\Validation\\Validator::validateEmail", "doc": "&quot;Validate that an attribute is a valid e-mail address.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateUrl", "name": "Illuminate\\Validation\\Validator::validateUrl", "doc": "&quot;Validate that an attribute is a valid URL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateActiveUrl", "name": "Illuminate\\Validation\\Validator::validateActiveUrl", "doc": "&quot;Validate that an attribute is an active URL.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateImage", "name": "Illuminate\\Validation\\Validator::validateImage", "doc": "&quot;Validate the MIME type of a file is an image MIME type.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateMimes", "name": "Illuminate\\Validation\\Validator::validateMimes", "doc": "&quot;Validate the MIME type of a file upload attribute is in a set of MIME types.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_isAValidFileInstance", "name": "Illuminate\\Validation\\Validator::isAValidFileInstance", "doc": "&quot;Check that the given value is a valid file instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateAlpha", "name": "Illuminate\\Validation\\Validator::validateAlpha", "doc": "&quot;Validate that an attribute contains only alphabetic characters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateAlphaNum", "name": "Illuminate\\Validation\\Validator::validateAlphaNum", "doc": "&quot;Validate that an attribute contains only alpha-numeric characters.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateAlphaDash", "name": "Illuminate\\Validation\\Validator::validateAlphaDash", "doc": "&quot;Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateRegex", "name": "Illuminate\\Validation\\Validator::validateRegex", "doc": "&quot;Validate that an attribute passes a regular expression check.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateDate", "name": "Illuminate\\Validation\\Validator::validateDate", "doc": "&quot;Validate that an attribute is a valid date.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateDateFormat", "name": "Illuminate\\Validation\\Validator::validateDateFormat", "doc": "&quot;Validate that an attribute matches a date format.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateBefore", "name": "Illuminate\\Validation\\Validator::validateBefore", "doc": "&quot;Validate the date is before a given date.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateBeforeWithFormat", "name": "Illuminate\\Validation\\Validator::validateBeforeWithFormat", "doc": "&quot;Validate the date is before a given date with a given format.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateAfter", "name": "Illuminate\\Validation\\Validator::validateAfter", "doc": "&quot;Validate the date is after a given date.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateAfterWithFormat", "name": "Illuminate\\Validation\\Validator::validateAfterWithFormat", "doc": "&quot;Validate the date is after a given date with a given format.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_checkDateTimeOrder", "name": "Illuminate\\Validation\\Validator::checkDateTimeOrder", "doc": "&quot;Given two date\/time strings, check that one is after the other.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getDateTimeWithOptionalFormat", "name": "Illuminate\\Validation\\Validator::getDateTimeWithOptionalFormat", "doc": "&quot;Get a DateTime instance from a string.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_validateTimezone", "name": "Illuminate\\Validation\\Validator::validateTimezone", "doc": "&quot;Validate that an attribute is a valid timezone.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getDateFormat", "name": "Illuminate\\Validation\\Validator::getDateFormat", "doc": "&quot;Get the date format for an attribute if it has one.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getMessage", "name": "Illuminate\\Validation\\Validator::getMessage", "doc": "&quot;Get the validation message for an attribute and rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getInlineMessage", "name": "Illuminate\\Validation\\Validator::getInlineMessage", "doc": "&quot;Get the inline message for a rule if it exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getSizeMessage", "name": "Illuminate\\Validation\\Validator::getSizeMessage", "doc": "&quot;Get the proper error message for an attribute and size rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getAttributeType", "name": "Illuminate\\Validation\\Validator::getAttributeType", "doc": "&quot;Get the data type of the given attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_doReplacements", "name": "Illuminate\\Validation\\Validator::doReplacements", "doc": "&quot;Replace all error message place-holders with actual values.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getAttributeList", "name": "Illuminate\\Validation\\Validator::getAttributeList", "doc": "&quot;Transform an array of attributes to their displayable form.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getAttribute", "name": "Illuminate\\Validation\\Validator::getAttribute", "doc": "&quot;Get the displayable name of the attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getDisplayableValue", "name": "Illuminate\\Validation\\Validator::getDisplayableValue", "doc": "&quot;Get the displayable name of the value.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceBetween", "name": "Illuminate\\Validation\\Validator::replaceBetween", "doc": "&quot;Replace all place-holders for the between rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceDigits", "name": "Illuminate\\Validation\\Validator::replaceDigits", "doc": "&quot;Replace all place-holders for the digits rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceDigitsBetween", "name": "Illuminate\\Validation\\Validator::replaceDigitsBetween", "doc": "&quot;Replace all place-holders for the digits (between) rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceSize", "name": "Illuminate\\Validation\\Validator::replaceSize", "doc": "&quot;Replace all place-holders for the size rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceMin", "name": "Illuminate\\Validation\\Validator::replaceMin", "doc": "&quot;Replace all place-holders for the min rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceMax", "name": "Illuminate\\Validation\\Validator::replaceMax", "doc": "&quot;Replace all place-holders for the max rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceIn", "name": "Illuminate\\Validation\\Validator::replaceIn", "doc": "&quot;Replace all place-holders for the in rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceNotIn", "name": "Illuminate\\Validation\\Validator::replaceNotIn", "doc": "&quot;Replace all place-holders for the not_in rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceMimes", "name": "Illuminate\\Validation\\Validator::replaceMimes", "doc": "&quot;Replace all place-holders for the mimes rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceRequiredWith", "name": "Illuminate\\Validation\\Validator::replaceRequiredWith", "doc": "&quot;Replace all place-holders for the required_with rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceRequiredWithout", "name": "Illuminate\\Validation\\Validator::replaceRequiredWithout", "doc": "&quot;Replace all place-holders for the required_without rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceRequiredWithoutAll", "name": "Illuminate\\Validation\\Validator::replaceRequiredWithoutAll", "doc": "&quot;Replace all place-holders for the required_without_all rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceRequiredIf", "name": "Illuminate\\Validation\\Validator::replaceRequiredIf", "doc": "&quot;Replace all place-holders for the required_if rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceSame", "name": "Illuminate\\Validation\\Validator::replaceSame", "doc": "&quot;Replace all place-holders for the same rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceDifferent", "name": "Illuminate\\Validation\\Validator::replaceDifferent", "doc": "&quot;Replace all place-holders for the different rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceDateFormat", "name": "Illuminate\\Validation\\Validator::replaceDateFormat", "doc": "&quot;Replace all place-holders for the date_format rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceBefore", "name": "Illuminate\\Validation\\Validator::replaceBefore", "doc": "&quot;Replace all place-holders for the before rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_replaceAfter", "name": "Illuminate\\Validation\\Validator::replaceAfter", "doc": "&quot;Replace all place-holders for the after rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_hasRule", "name": "Illuminate\\Validation\\Validator::hasRule", "doc": "&quot;Determine if the given attribute has a rule in the given set.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getRule", "name": "Illuminate\\Validation\\Validator::getRule", "doc": "&quot;Get a rule and its parameters for a given attribute.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_parseRule", "name": "Illuminate\\Validation\\Validator::parseRule", "doc": "&quot;Extract the rule name and parameters from a rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_parseArrayRule", "name": "Illuminate\\Validation\\Validator::parseArrayRule", "doc": "&quot;Parse an array based rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_parseStringRule", "name": "Illuminate\\Validation\\Validator::parseStringRule", "doc": "&quot;Parse a string based rule.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_parseParameters", "name": "Illuminate\\Validation\\Validator::parseParameters", "doc": "&quot;Parse a parameter list.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getExtensions", "name": "Illuminate\\Validation\\Validator::getExtensions", "doc": "&quot;Get the array of custom validator extensions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addExtensions", "name": "Illuminate\\Validation\\Validator::addExtensions", "doc": "&quot;Register an array of custom validator extensions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addImplicitExtensions", "name": "Illuminate\\Validation\\Validator::addImplicitExtensions", "doc": "&quot;Register an array of custom implicit validator extensions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addExtension", "name": "Illuminate\\Validation\\Validator::addExtension", "doc": "&quot;Register a custom validator extension.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addImplicitExtension", "name": "Illuminate\\Validation\\Validator::addImplicitExtension", "doc": "&quot;Register a custom implicit validator extension.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getReplacers", "name": "Illuminate\\Validation\\Validator::getReplacers", "doc": "&quot;Get the array of custom validator message replacers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addReplacers", "name": "Illuminate\\Validation\\Validator::addReplacers", "doc": "&quot;Register an array of custom validator message replacers.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addReplacer", "name": "Illuminate\\Validation\\Validator::addReplacer", "doc": "&quot;Register a custom validator message replacer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getData", "name": "Illuminate\\Validation\\Validator::getData", "doc": "&quot;Get the data under validation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setData", "name": "Illuminate\\Validation\\Validator::setData", "doc": "&quot;Set the data under validation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getRules", "name": "Illuminate\\Validation\\Validator::getRules", "doc": "&quot;Get the validation rules.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setRules", "name": "Illuminate\\Validation\\Validator::setRules", "doc": "&quot;Set the validation rules.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setAttributeNames", "name": "Illuminate\\Validation\\Validator::setAttributeNames", "doc": "&quot;Set the custom attributes on the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setValueNames", "name": "Illuminate\\Validation\\Validator::setValueNames", "doc": "&quot;Set the custom values on the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getFiles", "name": "Illuminate\\Validation\\Validator::getFiles", "doc": "&quot;Get the files under validation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setFiles", "name": "Illuminate\\Validation\\Validator::setFiles", "doc": "&quot;Set the files under validation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getPresenceVerifier", "name": "Illuminate\\Validation\\Validator::getPresenceVerifier", "doc": "&quot;Get the Presence Verifier implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setPresenceVerifier", "name": "Illuminate\\Validation\\Validator::setPresenceVerifier", "doc": "&quot;Set the Presence Verifier implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getTranslator", "name": "Illuminate\\Validation\\Validator::getTranslator", "doc": "&quot;Get the Translator implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setTranslator", "name": "Illuminate\\Validation\\Validator::setTranslator", "doc": "&quot;Set the Translator implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getCustomMessages", "name": "Illuminate\\Validation\\Validator::getCustomMessages", "doc": "&quot;Get the custom messages for the validator&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setCustomMessages", "name": "Illuminate\\Validation\\Validator::setCustomMessages", "doc": "&quot;Set the custom messages for the validator&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getCustomAttributes", "name": "Illuminate\\Validation\\Validator::getCustomAttributes", "doc": "&quot;Get the custom attributes used by the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addCustomAttributes", "name": "Illuminate\\Validation\\Validator::addCustomAttributes", "doc": "&quot;Add custom attributes to the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getCustomValues", "name": "Illuminate\\Validation\\Validator::getCustomValues", "doc": "&quot;Get the custom values for the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_addCustomValues", "name": "Illuminate\\Validation\\Validator::addCustomValues", "doc": "&quot;Add the custom values for the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getFallbackMessages", "name": "Illuminate\\Validation\\Validator::getFallbackMessages", "doc": "&quot;Get the fallback messages for the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setFallbackMessages", "name": "Illuminate\\Validation\\Validator::setFallbackMessages", "doc": "&quot;Set the fallback messages for the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_failed", "name": "Illuminate\\Validation\\Validator::failed", "doc": "&quot;Get the failed validation rules.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_messages", "name": "Illuminate\\Validation\\Validator::messages", "doc": "&quot;Get the message container for the validator.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_errors", "name": "Illuminate\\Validation\\Validator::errors", "doc": "&quot;An alternative more semantic shortcut to the message container.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_getMessageBag", "name": "Illuminate\\Validation\\Validator::getMessageBag", "doc": "&quot;Get the messages for the instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_setContainer", "name": "Illuminate\\Validation\\Validator::setContainer", "doc": "&quot;Set the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_callExtension", "name": "Illuminate\\Validation\\Validator::callExtension", "doc": "&quot;Call a custom validator extension.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_callClassBasedExtension", "name": "Illuminate\\Validation\\Validator::callClassBasedExtension", "doc": "&quot;Call a class based validator extension.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_callReplacer", "name": "Illuminate\\Validation\\Validator::callReplacer", "doc": "&quot;Call a custom validator message replacer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_callClassBasedReplacer", "name": "Illuminate\\Validation\\Validator::callClassBasedReplacer", "doc": "&quot;Call a class based validator message replacer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method_requireParameterCount", "name": "Illuminate\\Validation\\Validator::requireParameterCount", "doc": "&quot;Require a certain number of parameters to be present.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Validation\\Validator", "fromLink": "Illuminate/Validation/Validator.html", "link": "Illuminate/Validation/Validator.html#method___call", "name": "Illuminate\\Validation\\Validator::__call", "doc": "&quot;Handle dynamic calls to class methods.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View\\Compilers", "fromLink": "Illuminate/View/Compilers.html", "link": "Illuminate/View/Compilers/BladeCompiler.html", "name": "Illuminate\\View\\Compilers\\BladeCompiler", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compile", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compile", "doc": "&quot;Compile the view at the given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_getPath", "name": "Illuminate\\View\\Compilers\\BladeCompiler::getPath", "doc": "&quot;Get the path currently being compiled.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_setPath", "name": "Illuminate\\View\\Compilers\\BladeCompiler::setPath", "doc": "&quot;Set the path currently being compiled.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileString", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileString", "doc": "&quot;Compile the given Blade template contents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_parseToken", "name": "Illuminate\\View\\Compilers\\BladeCompiler::parseToken", "doc": "&quot;Parse the tokens from the template.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileExtensions", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileExtensions", "doc": "&quot;Execute the user defined extensions.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileComments", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileComments", "doc": "&quot;Compile Blade comments into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEchos", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEchos", "doc": "&quot;Compile Blade echos into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileStatements", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileStatements", "doc": "&quot;Compile Blade Statements that start with \&quot;@\&quot;&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileRegularEchos", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileRegularEchos", "doc": "&quot;Compile the \&quot;regular\&quot; echo statements.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEscapedEchos", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEscapedEchos", "doc": "&quot;Compile the escaped echo statements.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEchoDefaults", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEchoDefaults", "doc": "&quot;Compile the default values for the echo statement.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEach", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEach", "doc": "&quot;Compile the each statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileYield", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileYield", "doc": "&quot;Compile the yield statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileShow", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileShow", "doc": "&quot;Compile the show statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileSection", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileSection", "doc": "&quot;Compile the section statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileAppend", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileAppend", "doc": "&quot;Compile the append statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEndsection", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEndsection", "doc": "&quot;Compile the end-section statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileStop", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileStop", "doc": "&quot;Compile the stop statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileOverwrite", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileOverwrite", "doc": "&quot;Compile the overwrite statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileUnless", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileUnless", "doc": "&quot;Compile the unless statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEndunless", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEndunless", "doc": "&quot;Compile the end unless statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileLang", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileLang", "doc": "&quot;Compile the lang statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileChoice", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileChoice", "doc": "&quot;Compile the choice statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileElse", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileElse", "doc": "&quot;Compile the else statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileFor", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileFor", "doc": "&quot;Compile the for statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileForeach", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileForeach", "doc": "&quot;Compile the foreach statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileForelse", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileForelse", "doc": "&quot;Compile the forelse statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileIf", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileIf", "doc": "&quot;Compile the if statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileElseif", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileElseif", "doc": "&quot;Compile the else-if statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEmpty", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEmpty", "doc": "&quot;Compile the forelse statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileWhile", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileWhile", "doc": "&quot;Compile the while statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEndwhile", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEndwhile", "doc": "&quot;Compile the end-while statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEndfor", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEndfor", "doc": "&quot;Compile the end-for statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEndforeach", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEndforeach", "doc": "&quot;Compile the end-for-each statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEndif", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEndif", "doc": "&quot;Compile the end-if statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEndforelse", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEndforelse", "doc": "&quot;Compile the end-for-else statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileExtends", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileExtends", "doc": "&quot;Compile the extends statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileInclude", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileInclude", "doc": "&quot;Compile the include statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileStack", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileStack", "doc": "&quot;Compile the stack statements into the content&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compilePush", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compilePush", "doc": "&quot;Compile the push statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_compileEndpush", "name": "Illuminate\\View\\Compilers\\BladeCompiler::compileEndpush", "doc": "&quot;Compile the endpush statements into valid PHP.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_extend", "name": "Illuminate\\View\\Compilers\\BladeCompiler::extend", "doc": "&quot;Register a custom Blade compiler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_createMatcher", "name": "Illuminate\\View\\Compilers\\BladeCompiler::createMatcher", "doc": "&quot;Get the regular expression for a generic Blade function.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_createOpenMatcher", "name": "Illuminate\\View\\Compilers\\BladeCompiler::createOpenMatcher", "doc": "&quot;Get the regular expression for a generic Blade function.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_createPlainMatcher", "name": "Illuminate\\View\\Compilers\\BladeCompiler::createPlainMatcher", "doc": "&quot;Create a plain Blade matcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_setContentTags", "name": "Illuminate\\View\\Compilers\\BladeCompiler::setContentTags", "doc": "&quot;Sets the content tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_setEscapedContentTags", "name": "Illuminate\\View\\Compilers\\BladeCompiler::setEscapedContentTags", "doc": "&quot;Sets the escaped content tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_getContentTags", "name": "Illuminate\\View\\Compilers\\BladeCompiler::getContentTags", "doc": "&quot;Gets the content tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_getEscapedContentTags", "name": "Illuminate\\View\\Compilers\\BladeCompiler::getEscapedContentTags", "doc": "&quot;Gets the escaped content tags used for the compiler.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\BladeCompiler", "fromLink": "Illuminate/View/Compilers/BladeCompiler.html", "link": "Illuminate/View/Compilers/BladeCompiler.html#method_getTags", "name": "Illuminate\\View\\Compilers\\BladeCompiler::getTags", "doc": "&quot;Gets the tags used for the compiler.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View\\Compilers", "fromLink": "Illuminate/View/Compilers.html", "link": "Illuminate/View/Compilers/Compiler.html", "name": "Illuminate\\View\\Compilers\\Compiler", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\Compiler", "fromLink": "Illuminate/View/Compilers/Compiler.html", "link": "Illuminate/View/Compilers/Compiler.html#method___construct", "name": "Illuminate\\View\\Compilers\\Compiler::__construct", "doc": "&quot;Create a new compiler instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\Compiler", "fromLink": "Illuminate/View/Compilers/Compiler.html", "link": "Illuminate/View/Compilers/Compiler.html#method_getCompiledPath", "name": "Illuminate\\View\\Compilers\\Compiler::getCompiledPath", "doc": "&quot;Get the path to the compiled version of a view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\Compiler", "fromLink": "Illuminate/View/Compilers/Compiler.html", "link": "Illuminate/View/Compilers/Compiler.html#method_isExpired", "name": "Illuminate\\View\\Compilers\\Compiler::isExpired", "doc": "&quot;Determine if the view at the given path is expired.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View\\Compilers", "fromLink": "Illuminate/View/Compilers.html", "link": "Illuminate/View/Compilers/CompilerInterface.html", "name": "Illuminate\\View\\Compilers\\CompilerInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\CompilerInterface", "fromLink": "Illuminate/View/Compilers/CompilerInterface.html", "link": "Illuminate/View/Compilers/CompilerInterface.html#method_getCompiledPath", "name": "Illuminate\\View\\Compilers\\CompilerInterface::getCompiledPath", "doc": "&quot;Get the path to the compiled version of a view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\CompilerInterface", "fromLink": "Illuminate/View/Compilers/CompilerInterface.html", "link": "Illuminate/View/Compilers/CompilerInterface.html#method_isExpired", "name": "Illuminate\\View\\Compilers\\CompilerInterface::isExpired", "doc": "&quot;Determine if the given view is expired.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Compilers\\CompilerInterface", "fromLink": "Illuminate/View/Compilers/CompilerInterface.html", "link": "Illuminate/View/Compilers/CompilerInterface.html#method_compile", "name": "Illuminate\\View\\Compilers\\CompilerInterface::compile", "doc": "&quot;Compile the view at the given path.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View\\Engines", "fromLink": "Illuminate/View/Engines.html", "link": "Illuminate/View/Engines/CompilerEngine.html", "name": "Illuminate\\View\\Engines\\CompilerEngine", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Engines\\CompilerEngine", "fromLink": "Illuminate/View/Engines/CompilerEngine.html", "link": "Illuminate/View/Engines/CompilerEngine.html#method___construct", "name": "Illuminate\\View\\Engines\\CompilerEngine::__construct", "doc": "&quot;Create a new Blade view engine instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Engines\\CompilerEngine", "fromLink": "Illuminate/View/Engines/CompilerEngine.html", "link": "Illuminate/View/Engines/CompilerEngine.html#method_get", "name": "Illuminate\\View\\Engines\\CompilerEngine::get", "doc": "&quot;Get the evaluated contents of the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Engines\\CompilerEngine", "fromLink": "Illuminate/View/Engines/CompilerEngine.html", "link": "Illuminate/View/Engines/CompilerEngine.html#method_handleViewException", "name": "Illuminate\\View\\Engines\\CompilerEngine::handleViewException", "doc": "&quot;Handle a view exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Engines\\CompilerEngine", "fromLink": "Illuminate/View/Engines/CompilerEngine.html", "link": "Illuminate/View/Engines/CompilerEngine.html#method_getMessage", "name": "Illuminate\\View\\Engines\\CompilerEngine::getMessage", "doc": "&quot;Get the exception message for an exception.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Engines\\CompilerEngine", "fromLink": "Illuminate/View/Engines/CompilerEngine.html", "link": "Illuminate/View/Engines/CompilerEngine.html#method_getCompiler", "name": "Illuminate\\View\\Engines\\CompilerEngine::getCompiler", "doc": "&quot;Get the compiler implementation.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View\\Engines", "fromLink": "Illuminate/View/Engines.html", "link": "Illuminate/View/Engines/Engine.html", "name": "Illuminate\\View\\Engines\\Engine", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Engines\\Engine", "fromLink": "Illuminate/View/Engines/Engine.html", "link": "Illuminate/View/Engines/Engine.html#method_getLastRendered", "name": "Illuminate\\View\\Engines\\Engine::getLastRendered", "doc": "&quot;Get the last view that was rendered.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View\\Engines", "fromLink": "Illuminate/View/Engines.html", "link": "Illuminate/View/Engines/EngineInterface.html", "name": "Illuminate\\View\\Engines\\EngineInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Engines\\EngineInterface", "fromLink": "Illuminate/View/Engines/EngineInterface.html", "link": "Illuminate/View/Engines/EngineInterface.html#method_get", "name": "Illuminate\\View\\Engines\\EngineInterface::get", "doc": "&quot;Get the evaluated contents of the view.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View\\Engines", "fromLink": "Illuminate/View/Engines.html", "link": "Illuminate/View/Engines/EngineResolver.html", "name": "Illuminate\\View\\Engines\\EngineResolver", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Engines\\EngineResolver", "fromLink": "Illuminate/View/Engines/EngineResolver.html", "link": "Illuminate/View/Engines/EngineResolver.html#method_register", "name": "Illuminate\\View\\Engines\\EngineResolver::register", "doc": "&quot;Register a new engine resolver.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Engines\\EngineResolver", "fromLink": "Illuminate/View/Engines/EngineResolver.html", "link": "Illuminate/View/Engines/EngineResolver.html#method_resolve", "name": "Illuminate\\View\\Engines\\EngineResolver::resolve", "doc": "&quot;Resolver an engine instance by name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View\\Engines", "fromLink": "Illuminate/View/Engines.html", "link": "Illuminate/View/Engines/PhpEngine.html", "name": "Illuminate\\View\\Engines\\PhpEngine", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Engines\\PhpEngine", "fromLink": "Illuminate/View/Engines/PhpEngine.html", "link": "Illuminate/View/Engines/PhpEngine.html#method_get", "name": "Illuminate\\View\\Engines\\PhpEngine::get", "doc": "&quot;Get the evaluated contents of the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Engines\\PhpEngine", "fromLink": "Illuminate/View/Engines/PhpEngine.html", "link": "Illuminate/View/Engines/PhpEngine.html#method_evaluatePath", "name": "Illuminate\\View\\Engines\\PhpEngine::evaluatePath", "doc": "&quot;Get the evaluated contents of the view at the given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Engines\\PhpEngine", "fromLink": "Illuminate/View/Engines/PhpEngine.html", "link": "Illuminate/View/Engines/PhpEngine.html#method_handleViewException", "name": "Illuminate\\View\\Engines\\PhpEngine::handleViewException", "doc": "&quot;Handle a view exception.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View", "fromLink": "Illuminate/View.html", "link": "Illuminate/View/Factory.html", "name": "Illuminate\\View\\Factory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method___construct", "name": "Illuminate\\View\\Factory::__construct", "doc": "&quot;Create a new view factory instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_make", "name": "Illuminate\\View\\Factory::make", "doc": "&quot;Get the evaluated view contents for the given view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_parseData", "name": "Illuminate\\View\\Factory::parseData", "doc": "&quot;Parse the given data into a raw array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_of", "name": "Illuminate\\View\\Factory::of", "doc": "&quot;Get the evaluated view contents for a named view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_name", "name": "Illuminate\\View\\Factory::name", "doc": "&quot;Register a named view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_alias", "name": "Illuminate\\View\\Factory::alias", "doc": "&quot;Add an alias for a view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_exists", "name": "Illuminate\\View\\Factory::exists", "doc": "&quot;Determine if a given view exists.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_renderEach", "name": "Illuminate\\View\\Factory::renderEach", "doc": "&quot;Get the rendered contents of a partial from a loop.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getEngineFromPath", "name": "Illuminate\\View\\Factory::getEngineFromPath", "doc": "&quot;Get the appropriate view engine for the given path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getExtension", "name": "Illuminate\\View\\Factory::getExtension", "doc": "&quot;Get the extension used by the view file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_share", "name": "Illuminate\\View\\Factory::share", "doc": "&quot;Add a piece of shared data to the environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_creator", "name": "Illuminate\\View\\Factory::creator", "doc": "&quot;Register a view creator event.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_composers", "name": "Illuminate\\View\\Factory::composers", "doc": "&quot;Register multiple view composers via an array.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_composer", "name": "Illuminate\\View\\Factory::composer", "doc": "&quot;Register a view composer event.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_addViewEvent", "name": "Illuminate\\View\\Factory::addViewEvent", "doc": "&quot;Add an event for a given view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_addClassEvent", "name": "Illuminate\\View\\Factory::addClassEvent", "doc": "&quot;Register a class based view composer.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_addEventListener", "name": "Illuminate\\View\\Factory::addEventListener", "doc": "&quot;Add a listener to the event dispatcher.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_buildClassEventCallback", "name": "Illuminate\\View\\Factory::buildClassEventCallback", "doc": "&quot;Build a class based container callback Closure.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_parseClassEvent", "name": "Illuminate\\View\\Factory::parseClassEvent", "doc": "&quot;Parse a class based composer name.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_callComposer", "name": "Illuminate\\View\\Factory::callComposer", "doc": "&quot;Call the composer for a given view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_callCreator", "name": "Illuminate\\View\\Factory::callCreator", "doc": "&quot;Call the creator for a given view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_startSection", "name": "Illuminate\\View\\Factory::startSection", "doc": "&quot;Start injecting content into a section.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_inject", "name": "Illuminate\\View\\Factory::inject", "doc": "&quot;Inject inline content into a section.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_yieldSection", "name": "Illuminate\\View\\Factory::yieldSection", "doc": "&quot;Stop injecting content into a section and return its contents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_stopSection", "name": "Illuminate\\View\\Factory::stopSection", "doc": "&quot;Stop injecting content into a section.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_appendSection", "name": "Illuminate\\View\\Factory::appendSection", "doc": "&quot;Stop injecting content into a section and append it.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_extendSection", "name": "Illuminate\\View\\Factory::extendSection", "doc": "&quot;Append content to a given section.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_yieldContent", "name": "Illuminate\\View\\Factory::yieldContent", "doc": "&quot;Get the string contents of a section.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_flushSections", "name": "Illuminate\\View\\Factory::flushSections", "doc": "&quot;Flush all of the section contents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_flushSectionsIfDoneRendering", "name": "Illuminate\\View\\Factory::flushSectionsIfDoneRendering", "doc": "&quot;Flush all of the section contents if done rendering.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_incrementRender", "name": "Illuminate\\View\\Factory::incrementRender", "doc": "&quot;Increment the rendering counter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_decrementRender", "name": "Illuminate\\View\\Factory::decrementRender", "doc": "&quot;Decrement the rendering counter.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_doneRendering", "name": "Illuminate\\View\\Factory::doneRendering", "doc": "&quot;Check if there are no active render operations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_addLocation", "name": "Illuminate\\View\\Factory::addLocation", "doc": "&quot;Add a location to the array of view locations.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_addNamespace", "name": "Illuminate\\View\\Factory::addNamespace", "doc": "&quot;Add a new namespace to the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_prependNamespace", "name": "Illuminate\\View\\Factory::prependNamespace", "doc": "&quot;Prepend a new namespace to the loader.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_addExtension", "name": "Illuminate\\View\\Factory::addExtension", "doc": "&quot;Register a valid view extension and its engine.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getExtensions", "name": "Illuminate\\View\\Factory::getExtensions", "doc": "&quot;Get the extension to engine bindings.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getEngineResolver", "name": "Illuminate\\View\\Factory::getEngineResolver", "doc": "&quot;Get the engine resolver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getFinder", "name": "Illuminate\\View\\Factory::getFinder", "doc": "&quot;Get the view finder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_setFinder", "name": "Illuminate\\View\\Factory::setFinder", "doc": "&quot;Set the view finder instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getDispatcher", "name": "Illuminate\\View\\Factory::getDispatcher", "doc": "&quot;Get the event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_setDispatcher", "name": "Illuminate\\View\\Factory::setDispatcher", "doc": "&quot;Set the event dispatcher instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getContainer", "name": "Illuminate\\View\\Factory::getContainer", "doc": "&quot;Get the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_setContainer", "name": "Illuminate\\View\\Factory::setContainer", "doc": "&quot;Set the IoC container instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_shared", "name": "Illuminate\\View\\Factory::shared", "doc": "&quot;Get an item from the shared data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getShared", "name": "Illuminate\\View\\Factory::getShared", "doc": "&quot;Get all of the shared data for the environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getSections", "name": "Illuminate\\View\\Factory::getSections", "doc": "&quot;Get the entire array of sections.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\Factory", "fromLink": "Illuminate/View/Factory.html", "link": "Illuminate/View/Factory.html#method_getNames", "name": "Illuminate\\View\\Factory::getNames", "doc": "&quot;Get all of the registered named views in environment.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View", "fromLink": "Illuminate/View.html", "link": "Illuminate/View/FileViewFinder.html", "name": "Illuminate\\View\\FileViewFinder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method___construct", "name": "Illuminate\\View\\FileViewFinder::__construct", "doc": "&quot;Create a new file view loader instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_find", "name": "Illuminate\\View\\FileViewFinder::find", "doc": "&quot;Get the fully qualified location of the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_findNamedPathView", "name": "Illuminate\\View\\FileViewFinder::findNamedPathView", "doc": "&quot;Get the path to a template with a named path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_getNamespaceSegments", "name": "Illuminate\\View\\FileViewFinder::getNamespaceSegments", "doc": "&quot;Get the segments of a template with a named path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_findInPaths", "name": "Illuminate\\View\\FileViewFinder::findInPaths", "doc": "&quot;Find the given view in the list of paths.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_getPossibleViewFiles", "name": "Illuminate\\View\\FileViewFinder::getPossibleViewFiles", "doc": "&quot;Get an array of possible view files.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_addLocation", "name": "Illuminate\\View\\FileViewFinder::addLocation", "doc": "&quot;Add a location to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_addNamespace", "name": "Illuminate\\View\\FileViewFinder::addNamespace", "doc": "&quot;Add a namespace hint to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_prependNamespace", "name": "Illuminate\\View\\FileViewFinder::prependNamespace", "doc": "&quot;Prepend a namespace hint to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_addExtension", "name": "Illuminate\\View\\FileViewFinder::addExtension", "doc": "&quot;Register an extension with the view finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_hasHintInformation", "name": "Illuminate\\View\\FileViewFinder::hasHintInformation", "doc": "&quot;Returns whether or not the view specify a hint information.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_getFilesystem", "name": "Illuminate\\View\\FileViewFinder::getFilesystem", "doc": "&quot;Get the filesystem instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_getPaths", "name": "Illuminate\\View\\FileViewFinder::getPaths", "doc": "&quot;Get the active view paths.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_getHints", "name": "Illuminate\\View\\FileViewFinder::getHints", "doc": "&quot;Get the namespace to file path hints.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\FileViewFinder", "fromLink": "Illuminate/View/FileViewFinder.html", "link": "Illuminate/View/FileViewFinder.html#method_getExtensions", "name": "Illuminate\\View\\FileViewFinder::getExtensions", "doc": "&quot;Get registered extensions.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View", "fromLink": "Illuminate/View.html", "link": "Illuminate/View/View.html", "name": "Illuminate\\View\\View", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method___construct", "name": "Illuminate\\View\\View::__construct", "doc": "&quot;Create a new view instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_render", "name": "Illuminate\\View\\View::render", "doc": "&quot;Get the string contents of the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_renderContents", "name": "Illuminate\\View\\View::renderContents", "doc": "&quot;Get the contents of the view instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_renderSections", "name": "Illuminate\\View\\View::renderSections", "doc": "&quot;Get the sections of the rendered view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_getContents", "name": "Illuminate\\View\\View::getContents", "doc": "&quot;Get the evaluated contents of the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_gatherData", "name": "Illuminate\\View\\View::gatherData", "doc": "&quot;Get the data bound to the view instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_with", "name": "Illuminate\\View\\View::with", "doc": "&quot;Add a piece of data to the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_nest", "name": "Illuminate\\View\\View::nest", "doc": "&quot;Add a view instance to the view data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_withErrors", "name": "Illuminate\\View\\View::withErrors", "doc": "&quot;Add validation errors to the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_getFactory", "name": "Illuminate\\View\\View::getFactory", "doc": "&quot;Get the view factory instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_getEngine", "name": "Illuminate\\View\\View::getEngine", "doc": "&quot;Get the view&#039;s rendering engine.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_getName", "name": "Illuminate\\View\\View::getName", "doc": "&quot;Get the name of the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_getData", "name": "Illuminate\\View\\View::getData", "doc": "&quot;Get the array of view data.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_getPath", "name": "Illuminate\\View\\View::getPath", "doc": "&quot;Get the path to the view file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_setPath", "name": "Illuminate\\View\\View::setPath", "doc": "&quot;Set the path to the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_offsetExists", "name": "Illuminate\\View\\View::offsetExists", "doc": "&quot;Determine if a piece of data is bound.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_offsetGet", "name": "Illuminate\\View\\View::offsetGet", "doc": "&quot;Get a piece of bound data to the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_offsetSet", "name": "Illuminate\\View\\View::offsetSet", "doc": "&quot;Set a piece of data on the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method_offsetUnset", "name": "Illuminate\\View\\View::offsetUnset", "doc": "&quot;Unset a piece of data from the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method___get", "name": "Illuminate\\View\\View::__get", "doc": "&quot;Get a piece of data from the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method___set", "name": "Illuminate\\View\\View::__set", "doc": "&quot;Set a piece of data on the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method___isset", "name": "Illuminate\\View\\View::__isset", "doc": "&quot;Check if a piece of data is bound to the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method___unset", "name": "Illuminate\\View\\View::__unset", "doc": "&quot;Remove a piece of bound data from the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method___call", "name": "Illuminate\\View\\View::__call", "doc": "&quot;Dynamically bind parameters to the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\View", "fromLink": "Illuminate/View/View.html", "link": "Illuminate/View/View.html#method___toString", "name": "Illuminate\\View\\View::__toString", "doc": "&quot;Get the string contents of the view.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View", "fromLink": "Illuminate/View.html", "link": "Illuminate/View/ViewFinderInterface.html", "name": "Illuminate\\View\\ViewFinderInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_find", "name": "Illuminate\\View\\ViewFinderInterface::find", "doc": "&quot;Get the fully qualified location of the view.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_addLocation", "name": "Illuminate\\View\\ViewFinderInterface::addLocation", "doc": "&quot;Add a location to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_addNamespace", "name": "Illuminate\\View\\ViewFinderInterface::addNamespace", "doc": "&quot;Add a namespace hint to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_prependNamespace", "name": "Illuminate\\View\\ViewFinderInterface::prependNamespace", "doc": "&quot;Prepend a namespace hint to the finder.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewFinderInterface", "fromLink": "Illuminate/View/ViewFinderInterface.html", "link": "Illuminate/View/ViewFinderInterface.html#method_addExtension", "name": "Illuminate\\View\\ViewFinderInterface::addExtension", "doc": "&quot;Add a valid view extension to the finder.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\View", "fromLink": "Illuminate/View.html", "link": "Illuminate/View/ViewServiceProvider.html", "name": "Illuminate\\View\\ViewServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\View\\ViewServiceProvider", "fromLink": "Illuminate/View/ViewServiceProvider.html", "link": "Illuminate/View/ViewServiceProvider.html#method_register", "name": "Illuminate\\View\\ViewServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewServiceProvider", "fromLink": "Illuminate/View/ViewServiceProvider.html", "link": "Illuminate/View/ViewServiceProvider.html#method_registerEngineResolver", "name": "Illuminate\\View\\ViewServiceProvider::registerEngineResolver", "doc": "&quot;Register the engine resolver instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewServiceProvider", "fromLink": "Illuminate/View/ViewServiceProvider.html", "link": "Illuminate/View/ViewServiceProvider.html#method_registerPhpEngine", "name": "Illuminate\\View\\ViewServiceProvider::registerPhpEngine", "doc": "&quot;Register the PHP engine implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewServiceProvider", "fromLink": "Illuminate/View/ViewServiceProvider.html", "link": "Illuminate/View/ViewServiceProvider.html#method_registerBladeEngine", "name": "Illuminate\\View\\ViewServiceProvider::registerBladeEngine", "doc": "&quot;Register the Blade engine implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewServiceProvider", "fromLink": "Illuminate/View/ViewServiceProvider.html", "link": "Illuminate/View/ViewServiceProvider.html#method_registerViewFinder", "name": "Illuminate\\View\\ViewServiceProvider::registerViewFinder", "doc": "&quot;Register the view finder implementation.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewServiceProvider", "fromLink": "Illuminate/View/ViewServiceProvider.html", "link": "Illuminate/View/ViewServiceProvider.html#method_registerFactory", "name": "Illuminate\\View\\ViewServiceProvider::registerFactory", "doc": "&quot;Register the view environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewServiceProvider", "fromLink": "Illuminate/View/ViewServiceProvider.html", "link": "Illuminate/View/ViewServiceProvider.html#method_registerSessionBinder", "name": "Illuminate\\View\\ViewServiceProvider::registerSessionBinder", "doc": "&quot;Register the session binder for the view environment.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\View\\ViewServiceProvider", "fromLink": "Illuminate/View/ViewServiceProvider.html", "link": "Illuminate/View/ViewServiceProvider.html#method_sessionHasErrors", "name": "Illuminate\\View\\ViewServiceProvider::sessionHasErrors", "doc": "&quot;Determine if the application session has errors.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Workbench\\Console", "fromLink": "Illuminate/Workbench/Console.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "fromLink": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html#method___construct", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand::__construct", "doc": "&quot;Create a new make workbench command instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "fromLink": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html#method_fire", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand::fire", "doc": "&quot;Execute the console command.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "fromLink": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html#method_runCreator", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand::runCreator", "doc": "&quot;Run the package creator class for a given Package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "fromLink": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html#method_callComposerUpdate", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand::callComposerUpdate", "doc": "&quot;Call the composer update routine on the path.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "fromLink": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html#method_buildPackage", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand::buildPackage", "doc": "&quot;Build the package details from user input.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "fromLink": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html#method_getPackageSegments", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand::getPackageSegments", "doc": "&quot;Get the package vendor and name segments from the input.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "fromLink": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html#method_getArguments", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand::getArguments", "doc": "&quot;Get the console command arguments.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand", "fromLink": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html", "link": "Illuminate/Workbench/Console/WorkbenchMakeCommand.html#method_getOptions", "name": "Illuminate\\Workbench\\Console\\WorkbenchMakeCommand::getOptions", "doc": "&quot;Get the console command options.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Workbench", "fromLink": "Illuminate/Workbench.html", "link": "Illuminate/Workbench/Package.html", "name": "Illuminate\\Workbench\\Package", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Workbench\\Package", "fromLink": "Illuminate/Workbench/Package.html", "link": "Illuminate/Workbench/Package.html#method___construct", "name": "Illuminate\\Workbench\\Package::__construct", "doc": "&quot;Create a new package instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\Package", "fromLink": "Illuminate/Workbench/Package.html", "link": "Illuminate/Workbench/Package.html#method_getFullName", "name": "Illuminate\\Workbench\\Package::getFullName", "doc": "&quot;Get the full package name.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Workbench", "fromLink": "Illuminate/Workbench.html", "link": "Illuminate/Workbench/PackageCreator.html", "name": "Illuminate\\Workbench\\PackageCreator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method___construct", "name": "Illuminate\\Workbench\\PackageCreator::__construct", "doc": "&quot;Create a new package creator instance.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_create", "name": "Illuminate\\Workbench\\PackageCreator::create", "doc": "&quot;Create a new package stub.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_createWithResources", "name": "Illuminate\\Workbench\\PackageCreator::createWithResources", "doc": "&quot;Create a package with all resource directories.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_getBlocks", "name": "Illuminate\\Workbench\\PackageCreator::getBlocks", "doc": "&quot;Get the blocks for a given package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeSupportFiles", "name": "Illuminate\\Workbench\\PackageCreator::writeSupportFiles", "doc": "&quot;Write the support files to the package root.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writePhpUnitFile", "name": "Illuminate\\Workbench\\PackageCreator::writePhpUnitFile", "doc": "&quot;Write the PHPUnit stub file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeTravisFile", "name": "Illuminate\\Workbench\\PackageCreator::writeTravisFile", "doc": "&quot;Write the Travis stub file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeComposerFile", "name": "Illuminate\\Workbench\\PackageCreator::writeComposerFile", "doc": "&quot;Write the Composer.json stub file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_getComposerStub", "name": "Illuminate\\Workbench\\PackageCreator::getComposerStub", "doc": "&quot;Get the Composer.json stub file contents.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeIgnoreFile", "name": "Illuminate\\Workbench\\PackageCreator::writeIgnoreFile", "doc": "&quot;Write the stub .gitignore file for the package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeSupportDirectories", "name": "Illuminate\\Workbench\\PackageCreator::writeSupportDirectories", "doc": "&quot;Create the support directories for a package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeSupportDirectory", "name": "Illuminate\\Workbench\\PackageCreator::writeSupportDirectory", "doc": "&quot;Write a specific support directory for the package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writePublicDirectory", "name": "Illuminate\\Workbench\\PackageCreator::writePublicDirectory", "doc": "&quot;Create the public directory for the package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeTestDirectory", "name": "Illuminate\\Workbench\\PackageCreator::writeTestDirectory", "doc": "&quot;Create the test directory for the package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeServiceProvider", "name": "Illuminate\\Workbench\\PackageCreator::writeServiceProvider", "doc": "&quot;Write the stub ServiceProvider for the package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_writeProviderStub", "name": "Illuminate\\Workbench\\PackageCreator::writeProviderStub", "doc": "&quot;Write the service provider stub for the package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_getProviderStub", "name": "Illuminate\\Workbench\\PackageCreator::getProviderStub", "doc": "&quot;Get the stub for a ServiceProvider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_getProviderFile", "name": "Illuminate\\Workbench\\PackageCreator::getProviderFile", "doc": "&quot;Load the raw service provider file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_createClassDirectory", "name": "Illuminate\\Workbench\\PackageCreator::createClassDirectory", "doc": "&quot;Create the main source directory for the package.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_formatPackageStub", "name": "Illuminate\\Workbench\\PackageCreator::formatPackageStub", "doc": "&quot;Format a generic package stub file.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\PackageCreator", "fromLink": "Illuminate/Workbench/PackageCreator.html", "link": "Illuminate/Workbench/PackageCreator.html#method_createDirectory", "name": "Illuminate\\Workbench\\PackageCreator::createDirectory", "doc": "&quot;Create a workbench directory for the package.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Workbench", "fromLink": "Illuminate/Workbench.html", "link": "Illuminate/Workbench/Starter.html", "name": "Illuminate\\Workbench\\Starter", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Workbench\\Starter", "fromLink": "Illuminate/Workbench/Starter.html", "link": "Illuminate/Workbench/Starter.html#method_start", "name": "Illuminate\\Workbench\\Starter::start", "doc": "&quot;Load the workbench vendor auto-load files.&quot;"},
            
            {"type": "Class", "fromName": "Illuminate\\Workbench", "fromLink": "Illuminate/Workbench.html", "link": "Illuminate/Workbench/WorkbenchServiceProvider.html", "name": "Illuminate\\Workbench\\WorkbenchServiceProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Illuminate\\Workbench\\WorkbenchServiceProvider", "fromLink": "Illuminate/Workbench/WorkbenchServiceProvider.html", "link": "Illuminate/Workbench/WorkbenchServiceProvider.html#method_register", "name": "Illuminate\\Workbench\\WorkbenchServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Illuminate\\Workbench\\WorkbenchServiceProvider", "fromLink": "Illuminate/Workbench/WorkbenchServiceProvider.html", "link": "Illuminate/Workbench/WorkbenchServiceProvider.html#method_provides", "name": "Illuminate\\Workbench\\WorkbenchServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


